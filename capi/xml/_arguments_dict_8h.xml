<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_arguments_dict_8h" kind="file" language="C++">
    <compoundname>ArgumentsDict.h</compoundname>
    <includes local="no">map</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">string</includes>
    <includes local="yes">xtensor-python/pyarray.hpp</includes>
    <includes local="yes">xtensor/xio.hpp</includes>
    <includedby refid="_a_d_r_8h" local="yes">ADR.h</includedby>
    <includedby refid="_elasto_plastic_8h" local="yes">ElastoPlastic.h</includedby>
    <includedby refid="_added_mass_8h" local="yes">AddedMass.h</includedby>
    <includedby refid="_arguments_dict_8cpp" local="yes">ArgumentsDict.cpp</includedby>
    <includedby refid="_c_l_s_v_o_f_8h" local="yes">CLSVOF.h</includedby>
    <includedby refid="_dissipation_8h" local="yes">Dissipation.h</includedby>
    <includedby refid="_dissipation2_d_8h" local="yes">Dissipation2D.h</includedby>
    <includedby refid="_g_n___s_w2_d_c_v_8h" local="yes">GN_SW2DCV.h</includedby>
    <includedby refid="_kappa_8h" local="yes">Kappa.h</includedby>
    <includedby refid="_kappa2_d_8h" local="yes">Kappa2D.h</includedby>
    <includedby refid="_m_corr_8h" local="yes">MCorr.h</includedby>
    <includedby refid="_m_corr3_p_8h" local="yes">MCorr3P.h</includedby>
    <includedby refid="_move_mesh_8h" local="yes">MoveMesh.h</includedby>
    <includedby refid="_move_mesh2_d_8h" local="yes">MoveMesh2D.h</includedby>
    <includedby refid="_n_c_l_s_8h" local="yes">NCLS.h</includedby>
    <includedby refid="_n_c_l_s3_p_8h" local="yes">NCLS3P.h</includedby>
    <includedby refid="_pres_8h" local="yes">Pres.h</includedby>
    <includedby refid="_pres_inc_8h" local="yes">PresInc.h</includedby>
    <includedby refid="_pres_init_8h" local="yes">PresInit.h</includedby>
    <includedby refid="_r_a_n_s2_p_8h" local="yes">RANS2P.h</includedby>
    <includedby refid="_r_a_n_s2_p2_d_8h" local="yes">RANS2P2D.h</includedby>
    <includedby refid="_r_a_n_s2_p___i_b_8h" local="yes">RANS2P_IB.h</includedby>
    <includedby refid="_r_a_n_s3_p_f_8h" local="yes">RANS3PF.h</includedby>
    <includedby refid="_r_a_n_s3_p_f2_d_8h" local="yes">RANS3PF2D.h</includedby>
    <includedby refid="_r_a_n_s3_p_sed_8h" local="yes">RANS3PSed.h</includedby>
    <includedby refid="_r_a_n_s3_p_sed2_d_8h" local="yes">RANS3PSed2D.h</includedby>
    <includedby refid="_r_d_l_s_8h" local="yes">RDLS.h</includedby>
    <includedby refid="_s_w2_d_8h" local="yes">SW2D.h</includedby>
    <includedby refid="_s_w2_d_c_v_8h" local="yes">SW2DCV.h</includedby>
    <includedby refid="_v_o_f_8h" local="yes">VOF.h</includedby>
    <includedby refid="_v_o_f3_p_8h" local="yes">VOF3P.h</includedby>
    <includedby refid="_v_o_s3_p_8h" local="yes">VOS3P.h</includedby>
    <includedby refid="_richards_8h" local="yes">Richards.h</includedby>
    <incdepgraph>
      <node id="6">
        <label>xtensor/xio.hpp</label>
      </node>
      <node id="3">
        <label>stdexcept</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="2">
        <label>map</label>
      </node>
      <node id="5">
        <label>xtensor-python/pyarray.hpp</label>
      </node>
      <node id="1">
        <label>ArgumentsDict.h</label>
        <link refid="_arguments_dict_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="44">
        <label>RANS2P_IB.cpp</label>
        <link refid="_r_a_n_s2_p___i_b_8cpp"/>
      </node>
      <node id="18">
        <label>Kappa.cpp</label>
        <link refid="_kappa_8cpp"/>
      </node>
      <node id="17">
        <label>Kappa.h</label>
        <link refid="_kappa_8h"/>
        <childnode refid="18" relation="include">
        </childnode>
      </node>
      <node id="21">
        <label>MCorr.h</label>
        <link refid="_m_corr_8h"/>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="26">
        <label>MoveMesh.cpp</label>
        <link refid="_move_mesh_8cpp"/>
      </node>
      <node id="10">
        <label>CLSVOF.cpp</label>
        <link refid="_c_l_s_v_o_f_8cpp"/>
      </node>
      <node id="12">
        <label>Dissipation.cpp</label>
        <link refid="_dissipation_8cpp"/>
      </node>
      <node id="38">
        <label>PresInit.cpp</label>
        <link refid="_pres_init_8cpp"/>
      </node>
      <node id="5">
        <label>cElastoPlastic.cpp</label>
        <link refid="c_elasto_plastic_8cpp"/>
      </node>
      <node id="16">
        <label>GN_SW2DCV.cpp</label>
        <link refid="_g_n___s_w2_d_c_v_8cpp"/>
      </node>
      <node id="9">
        <label>CLSVOF.h</label>
        <link refid="_c_l_s_v_o_f_8h"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>ADR.cpp</label>
        <link refid="_a_d_r_8cpp"/>
      </node>
      <node id="27">
        <label>MoveMesh2D.h</label>
        <link refid="_move_mesh2_d_8h"/>
        <childnode refid="28" relation="include">
        </childnode>
      </node>
      <node id="43">
        <label>RANS2P_IB.h</label>
        <link refid="_r_a_n_s2_p___i_b_8h"/>
        <childnode refid="44" relation="include">
        </childnode>
      </node>
      <node id="66">
        <label>cRichards.cpp</label>
        <link refid="c_richards_8cpp"/>
      </node>
      <node id="40">
        <label>RANS2P.cpp</label>
        <link refid="_r_a_n_s2_p_8cpp"/>
      </node>
      <node id="14">
        <label>Dissipation2D.cpp</label>
        <link refid="_dissipation2_d_8cpp"/>
      </node>
      <node id="23">
        <label>MCorr3P.h</label>
        <link refid="_m_corr3_p_8h"/>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ADR.h</label>
        <link refid="_a_d_r_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>Kappa2D.h</label>
        <link refid="_kappa2_d_8h"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>Dissipation2D.h</label>
        <link refid="_dissipation2_d_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="37">
        <label>PresInit.h</label>
        <link refid="_pres_init_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
      <node id="34">
        <label>Pres.cpp</label>
        <link refid="_pres_8cpp"/>
      </node>
      <node id="42">
        <label>RANS2P2D.cpp</label>
        <link refid="_r_a_n_s2_p2_d_8cpp"/>
      </node>
      <node id="50">
        <label>RANS3PSed.cpp</label>
        <link refid="_r_a_n_s3_p_sed_8cpp"/>
      </node>
      <node id="62">
        <label>VOF3P.cpp</label>
        <link refid="_v_o_f3_p_8cpp"/>
      </node>
      <node id="58">
        <label>SW2DCV.cpp</label>
        <link refid="_s_w2_d_c_v_8cpp"/>
      </node>
      <node id="35">
        <label>PresInc.h</label>
        <link refid="_pres_inc_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
      <node id="56">
        <label>SW2D.cpp</label>
        <link refid="_s_w2_d_8cpp"/>
      </node>
      <node id="1">
        <label>ArgumentsDict.h</label>
        <link refid="_arguments_dict_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="37" relation="include">
        </childnode>
        <childnode refid="39" relation="include">
        </childnode>
        <childnode refid="41" relation="include">
        </childnode>
        <childnode refid="43" relation="include">
        </childnode>
        <childnode refid="45" relation="include">
        </childnode>
        <childnode refid="47" relation="include">
        </childnode>
        <childnode refid="49" relation="include">
        </childnode>
        <childnode refid="51" relation="include">
        </childnode>
        <childnode refid="53" relation="include">
        </childnode>
        <childnode refid="55" relation="include">
        </childnode>
        <childnode refid="57" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
        <childnode refid="61" relation="include">
        </childnode>
        <childnode refid="63" relation="include">
        </childnode>
        <childnode refid="65" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>ElastoPlastic.h</label>
        <link refid="_elasto_plastic_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="61">
        <label>VOF3P.h</label>
        <link refid="_v_o_f3_p_8h"/>
        <childnode refid="62" relation="include">
        </childnode>
      </node>
      <node id="55">
        <label>SW2D.h</label>
        <link refid="_s_w2_d_8h"/>
        <childnode refid="56" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>Kappa2D.cpp</label>
        <link refid="_kappa2_d_8cpp"/>
      </node>
      <node id="46">
        <label>RANS3PF.cpp</label>
        <link refid="_r_a_n_s3_p_f_8cpp"/>
      </node>
      <node id="32">
        <label>NCLS3P.cpp</label>
        <link refid="_n_c_l_s3_p_8cpp"/>
      </node>
      <node id="7">
        <label>AddedMass.cpp</label>
        <link refid="_added_mass_8cpp"/>
      </node>
      <node id="22">
        <label>MCorr.cpp</label>
        <link refid="_m_corr_8cpp"/>
      </node>
      <node id="52">
        <label>RANS3PSed2D.cpp</label>
        <link refid="_r_a_n_s3_p_sed2_d_8cpp"/>
      </node>
      <node id="41">
        <label>RANS2P2D.h</label>
        <link refid="_r_a_n_s2_p2_d_8h"/>
        <childnode refid="42" relation="include">
        </childnode>
      </node>
      <node id="24">
        <label>MCorr3P.cpp</label>
        <link refid="_m_corr3_p_8cpp"/>
      </node>
      <node id="39">
        <label>RANS2P.h</label>
        <link refid="_r_a_n_s2_p_8h"/>
        <childnode refid="40" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>GN_SW2DCV.h</label>
        <link refid="_g_n___s_w2_d_c_v_8h"/>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="57">
        <label>SW2DCV.h</label>
        <link refid="_s_w2_d_c_v_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
      </node>
      <node id="49">
        <label>RANS3PSed.h</label>
        <link refid="_r_a_n_s3_p_sed_8h"/>
        <childnode refid="50" relation="include">
        </childnode>
      </node>
      <node id="51">
        <label>RANS3PSed2D.h</label>
        <link refid="_r_a_n_s3_p_sed2_d_8h"/>
        <childnode refid="52" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>AddedMass.h</label>
        <link refid="_added_mass_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="28">
        <label>MoveMesh2D.cpp</label>
        <link refid="_move_mesh2_d_8cpp"/>
      </node>
      <node id="53">
        <label>RDLS.h</label>
        <link refid="_r_d_l_s_8h"/>
        <childnode refid="54" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>Dissipation.h</label>
        <link refid="_dissipation_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="33">
        <label>Pres.h</label>
        <link refid="_pres_8h"/>
        <childnode refid="34" relation="include">
        </childnode>
      </node>
      <node id="47">
        <label>RANS3PF2D.h</label>
        <link refid="_r_a_n_s3_p_f2_d_8h"/>
        <childnode refid="48" relation="include">
        </childnode>
      </node>
      <node id="54">
        <label>RDLS.cpp</label>
        <link refid="_r_d_l_s_8cpp"/>
      </node>
      <node id="64">
        <label>VOS3P.cpp</label>
        <link refid="_v_o_s3_p_8cpp"/>
      </node>
      <node id="8">
        <label>ArgumentsDict.cpp</label>
        <link refid="_arguments_dict_8cpp"/>
      </node>
      <node id="31">
        <label>NCLS3P.h</label>
        <link refid="_n_c_l_s3_p_8h"/>
        <childnode refid="32" relation="include">
        </childnode>
      </node>
      <node id="25">
        <label>MoveMesh.h</label>
        <link refid="_move_mesh_8h"/>
        <childnode refid="26" relation="include">
        </childnode>
      </node>
      <node id="36">
        <label>PresInc.cpp</label>
        <link refid="_pres_inc_8cpp"/>
      </node>
      <node id="30">
        <label>NCLS.cpp</label>
        <link refid="_n_c_l_s_8cpp"/>
      </node>
      <node id="65">
        <label>Richards.h</label>
        <link refid="_richards_8h"/>
        <childnode refid="66" relation="include">
        </childnode>
      </node>
      <node id="29">
        <label>NCLS.h</label>
        <link refid="_n_c_l_s_8h"/>
        <childnode refid="30" relation="include">
        </childnode>
      </node>
      <node id="45">
        <label>RANS3PF.h</label>
        <link refid="_r_a_n_s3_p_f_8h"/>
        <childnode refid="46" relation="include">
        </childnode>
      </node>
      <node id="60">
        <label>VOF.cpp</label>
        <link refid="_v_o_f_8cpp"/>
      </node>
      <node id="59">
        <label>VOF.h</label>
        <link refid="_v_o_f_8h"/>
        <childnode refid="60" relation="include">
        </childnode>
      </node>
      <node id="48">
        <label>RANS3PF2D.cpp</label>
        <link refid="_r_a_n_s3_p_f2_d_8cpp"/>
      </node>
      <node id="63">
        <label>VOS3P.h</label>
        <link refid="_v_o_s3_p_8h"/>
        <childnode refid="64" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classproteus_1_1throwing__map" prot="public">proteus::throwing_map</innerclass>
    <innerclass refid="structproteus_1_1arguments__dict" prot="public">proteus::arguments_dict</innerclass>
    <innernamespace refid="namespaceproteus">proteus</innernamespace>
    <innernamespace refid="namespaceproteus_1_1detail">proteus::detail</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ARGUMENTSDICT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ARGUMENTSDICT_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xtensor-python/pyarray.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;xtensor/xio.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceproteus" kindref="compound">proteus</ref></highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/****************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>throwing_map<sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>****************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Special<sp/>map<sp/>that<sp/>behaves<sp/>like<sp/>a<sp/>standard<sp/>map<sp/>except<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>operator[]<sp/>which<sp/>throws<sp/>instead<sp/>of<sp/>inserting<sp/>a<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>value<sp/>when<sp/>a<sp/>key<sp/>is<sp/>not<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-<sp/>insert<sp/>and<sp/>insert_or_assign<sp/>which<sp/>always<sp/>move<sp/>the<sp/>key</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>and<sp/>the<sp/>value.<sp/>This<sp/>allows<sp/>to<sp/>keep<sp/>pyarrays<sp/>synchronized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>with<sp/>the<sp/>numpy<sp/>arrays<sp/>they<sp/>refer<sp/>to,<sp/>while<sp/>avoiding<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>duplication<sp/>for<sp/>array<sp/>of<sp/>scalars<sp/>(because<sp/>insert_or_assign</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>is<sp/>not<sp/>available<sp/>in<sp/>C++14)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="26" refid="classproteus_1_1throwing__map" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1throwing__map" kindref="compound">throwing_map</ref><sp/>:<sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/>std::map&lt;K,<sp/>T&gt;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1a197dc46c556ac1ff3f329436614546e7" kindref="member">base_type</ref><sp/>=<sp/>std::map&lt;K,<sp/>T&gt;;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1aa190c0b1a68cbd324b90a357137e3321" kindref="member">key_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::key_type;</highlight></codeline>
<codeline lineno="32" refid="classproteus_1_1throwing__map_1a197dc46c556ac1ff3f329436614546e7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1a248d4caae9d3af5fc63d4c595205da3a" kindref="member">mapped_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::mapped_type;</highlight></codeline>
<codeline lineno="33" refid="classproteus_1_1throwing__map_1aa190c0b1a68cbd324b90a357137e3321" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1a15add4d29822d427508366a7c2bbcee8" kindref="member">value_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::value_type;</highlight></codeline>
<codeline lineno="34" refid="classproteus_1_1throwing__map_1a248d4caae9d3af5fc63d4c595205da3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1ac0f0aab5e6a71046901437b8a9abe5a4" kindref="member">reference</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::reference;</highlight></codeline>
<codeline lineno="35" refid="classproteus_1_1throwing__map_1a15add4d29822d427508366a7c2bbcee8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1acac5d83ee296bd30d930c0bf6d050b3c" kindref="member">const_reference</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::const_reference;</highlight></codeline>
<codeline lineno="36" refid="classproteus_1_1throwing__map_1ac0f0aab5e6a71046901437b8a9abe5a4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1a4ab3a5e7b2f9c62f4b8195fe424ff58b" kindref="member">pointer</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::pointer;</highlight></codeline>
<codeline lineno="37" refid="classproteus_1_1throwing__map_1acac5d83ee296bd30d930c0bf6d050b3c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1a7821c8d1b0be26810b73e5ce4897e52c" kindref="member">const_pointer</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::const_pointer;</highlight></codeline>
<codeline lineno="38" refid="classproteus_1_1throwing__map_1a4ab3a5e7b2f9c62f4b8195fe424ff58b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1ac3a7d49789ab4681cf89c4e0fb3d222e" kindref="member">size_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::size_type;</highlight></codeline>
<codeline lineno="39" refid="classproteus_1_1throwing__map_1a7821c8d1b0be26810b73e5ce4897e52c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1aafa50f35696eb9ce9ece2dfd85bb2c18" kindref="member">difference_type</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::difference_type;</highlight></codeline>
<codeline lineno="40" refid="classproteus_1_1throwing__map_1ac3a7d49789ab4681cf89c4e0fb3d222e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1a23af78f6f9c964a603d238e0e8c3e566" kindref="member">iterator</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::iterator;</highlight></codeline>
<codeline lineno="41" refid="classproteus_1_1throwing__map_1aafa50f35696eb9ce9ece2dfd85bb2c18" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1a8571395dab70833b880420bea3bc25ee" kindref="member">const_iterator</ref><sp/>=<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>base_type::const_iterator;</highlight></codeline>
<codeline lineno="42" refid="classproteus_1_1throwing__map_1a23af78f6f9c964a603d238e0e8c3e566" refkind="member"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="classproteus_1_1throwing__map_1a8571395dab70833b880420bea3bc25ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::empty;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::find;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::emplace;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::begin;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::end;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::cbegin;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>base_type::cend;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Throws<sp/>if<sp/>k<sp/>is<sp/>not<sp/>in<sp/>the<sp/>map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classproteus_1_1throwing__map_1a248d4caae9d3af5fc63d4c595205da3a" kindref="member">mapped_type</ref>&amp;<sp/><ref refid="classproteus_1_1throwing__map_1a4fc8da4d27104e94e5dd95cb4f0bf5da" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1aa190c0b1a68cbd324b90a357137e3321" kindref="member">key_type</ref>&amp;<sp/>k);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;iterator,<sp/>bool&gt;<sp/><ref refid="classproteus_1_1throwing__map_1aff1ec2d2456b53c7c1da1da127027c1d" kindref="member">insert</ref>(<ref refid="classproteus_1_1throwing__map_1a15add4d29822d427508366a7c2bbcee8" kindref="member">value_type</ref>&amp;&amp;);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;iterator,<sp/>bool&gt;<sp/><ref refid="classproteus_1_1throwing__map_1a1031eee5b68d9f09675b00a496ef1850" kindref="member">insert_or_assign</ref>(<ref refid="classproteus_1_1throwing__map_1aa190c0b1a68cbd324b90a357137e3321" kindref="member">key_type</ref>&amp;&amp;<sp/>k,<sp/><ref refid="classproteus_1_1throwing__map_1a248d4caae9d3af5fc63d4c595205da3a" kindref="member">mapped_type</ref>&amp;&amp;<sp/><ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/******************</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>arguments_dict<sp/>*</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>******************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="64" refid="namespaceproteus_1a0276292088a330fb5c5a665d8863405a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map" kindref="compound">pyarray_dict</ref><sp/>=<sp/><ref refid="classproteus_1_1throwing__map" kindref="compound">throwing_map&lt;K, xt::pyarray&lt;T&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="67" refid="namespaceproteus_1a2d7b12db8845f2a6bd4cf99e5a89b46b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map" kindref="compound">scalar_dict</ref><sp/>=<sp/><ref refid="classproteus_1_1throwing__map" kindref="compound">throwing_map&lt;K, T&gt;</ref>;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="structproteus_1_1arguments__dict" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structproteus_1_1arguments__dict" kindref="compound">arguments_dict</ref></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="71" refid="structproteus_1_1arguments__dict_1a9e189d14f9aa1dfc18a0323162c20795" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classproteus_1_1throwing__map" kindref="compound">pyarray_dict&lt;std::string, double&gt;</ref><sp/><ref refid="structproteus_1_1arguments__dict_1a9e189d14f9aa1dfc18a0323162c20795" kindref="member">m_darray</ref>;</highlight></codeline>
<codeline lineno="72" refid="structproteus_1_1arguments__dict_1ae7f72775d4177531444ff3651d2554d7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classproteus_1_1throwing__map" kindref="compound">pyarray_dict&lt;std::string, int&gt;</ref><sp/><ref refid="structproteus_1_1arguments__dict_1ae7f72775d4177531444ff3651d2554d7" kindref="member">m_iarray</ref>;</highlight></codeline>
<codeline lineno="73" refid="structproteus_1_1arguments__dict_1afb7ae6da6289e43f948f2c444c0502db" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classproteus_1_1throwing__map" kindref="compound">scalar_dict&lt;std::string, double&gt;</ref><sp/><ref refid="structproteus_1_1arguments__dict_1afb7ae6da6289e43f948f2c444c0502db" kindref="member">m_dscalar</ref>;</highlight></codeline>
<codeline lineno="74" refid="structproteus_1_1arguments__dict_1aa009422c7591097d0c20a61ec0786a48" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classproteus_1_1throwing__map" kindref="compound">scalar_dict&lt;std::string, int&gt;</ref><sp/><ref refid="structproteus_1_1arguments__dict_1aa009422c7591097d0c20a61ec0786a48" kindref="member">m_iscalar</ref>;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xt::pyarray&lt;T&gt;&amp;<sp/><ref refid="structproteus_1_1arguments__dict_1a98bcc7bc46a16fa22e596a66ebd85641" kindref="member">array</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>&amp;<sp/><ref refid="structproteus_1_1arguments__dict_1a7f1b7e2a2a9430474e11664a0639c2e1" kindref="member">scalar</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D1::mapped_type&amp;<sp/>find_element(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D1&amp;<sp/>expected_dict,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2&amp;<sp/>other_dict,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>expected_type,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>other_type);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>get_additional_error_msg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="jf_8h_1a4ae508a8d305b460df210d2a0c2a5574" kindref="member">D</ref>&amp;<sp/>d,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asked_type,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>tried_type)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*******************************</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>throwing_map<sp/>implementation<sp/>*</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*******************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceproteus_1_1detail_1ac67772aafdb8b2d80aedb75e7179f501" kindref="member">key_error_messagei</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="_headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref>&amp;<sp/>key)</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="107" refid="namespaceproteus_1_1detail_1ac67772aafdb8b2d80aedb75e7179f501" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespaceproteus_1_1detail_1aeca99bf51bb7274dcf2c9f231112412c" kindref="member">key_error_message</ref>(std::to_string(key));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespaceproteus_1_1detail_1aeca99bf51bb7274dcf2c9f231112412c" kindref="member">key_error_message</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112" refid="namespaceproteus_1_1detail_1aeca99bf51bb7274dcf2c9f231112412c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::string(</highlight><highlight class="stringliteral">&quot;key<sp/>&quot;</highlight><highlight class="normal">)<sp/>+<sp/>key<sp/>+<sp/>std::string(</highlight><highlight class="stringliteral">&quot;<sp/>not<sp/>found&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="117" refid="classproteus_1_1throwing__map_1a4fc8da4d27104e94e5dd95cb4f0bf5da" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1a4fc8da4d27104e94e5dd95cb4f0bf5da" kindref="member">throwing_map&lt;K, T&gt;::operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1aa190c0b1a68cbd324b90a357137e3321" kindref="member">key_type</ref>&amp;<sp/>k)<sp/>-&gt;<sp/><ref refid="classproteus_1_1throwing__map_1a248d4caae9d3af5fc63d4c595205da3a" kindref="member">mapped_type</ref>&amp;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>this-&gt;find(k);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it<sp/>==<sp/>end())</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(<ref refid="namespaceproteus_1_1detail_1aeca99bf51bb7274dcf2c9f231112412c" kindref="member">detail::key_error_message</ref>(k));</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>it-&gt;second;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="128" refid="classproteus_1_1throwing__map_1aff1ec2d2456b53c7c1da1da127027c1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1aff1ec2d2456b53c7c1da1da127027c1d" kindref="member">throwing_map&lt;K, T&gt;::insert</ref>(<ref refid="classproteus_1_1throwing__map_1a15add4d29822d427508366a7c2bbcee8" kindref="member">value_type</ref>&amp;&amp;<sp/><ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>)<sp/>-&gt;<sp/>std::pair&lt;iterator,<sp/>bool&gt;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_type::insert(std::move(<ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>));</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>K,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="134" refid="classproteus_1_1throwing__map_1a1031eee5b68d9f09675b00a496ef1850" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1throwing__map_1a1031eee5b68d9f09675b00a496ef1850" kindref="member">throwing_map&lt;K, T&gt;::insert_or_assign</ref>(<ref refid="classproteus_1_1throwing__map_1aa190c0b1a68cbd324b90a357137e3321" kindref="member">key_type</ref>&amp;&amp;<sp/>k,<sp/><ref refid="classproteus_1_1throwing__map_1a248d4caae9d3af5fc63d4c595205da3a" kindref="member">mapped_type</ref>&amp;&amp;<sp/><ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>)<sp/>-&gt;<sp/>std::pair&lt;iterator,<sp/>bool&gt;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>base_type::find(k);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it<sp/>==<sp/>base_type::end())</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>base_type::emplace(k,<sp/>std::move(<ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>));</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it-&gt;second<sp/>=<sp/>std::move(<ref refid="_headers_8h_1abb6e996fea4e5f276fdcec0c7d809274" kindref="member">v</ref>);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::make_pair(it,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/*********************************</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>arguments_dict<sp/>implementation<sp/>*</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*********************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="153" refid="structproteus_1_1arguments__dict_1aa546ac83ae55684a1cea809d7eb9824c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>xt::pyarray&lt;double&gt;&amp;<sp/>arguments_dict::array&lt;double&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>find_element(key,<sp/><ref refid="structproteus_1_1arguments__dict_1a9e189d14f9aa1dfc18a0323162c20795" kindref="member">m_darray</ref>,<sp/><ref refid="structproteus_1_1arguments__dict_1ae7f72775d4177531444ff3651d2554d7" kindref="member">m_iarray</ref>,<sp/></highlight><highlight class="stringliteral">&quot;pyarray&lt;double&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pyarray&lt;int&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="159" refid="structproteus_1_1arguments__dict_1ad451a1ae54cc36118b865f0d9aaa5fed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>xt::pyarray&lt;int&gt;&amp;<sp/>arguments_dict::array&lt;int&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>find_element(key,<sp/><ref refid="structproteus_1_1arguments__dict_1ae7f72775d4177531444ff3651d2554d7" kindref="member">m_iarray</ref>,<sp/><ref refid="structproteus_1_1arguments__dict_1a9e189d14f9aa1dfc18a0323162c20795" kindref="member">m_darray</ref>,<sp/></highlight><highlight class="stringliteral">&quot;pyarray&lt;int&gt;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;pyarray&lt;double&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="165" refid="structproteus_1_1arguments__dict_1adf18c7e4e4e31c180a5c9b598ffa5b63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>arguments_dict::scalar&lt;double&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>find_element(key,<sp/><ref refid="structproteus_1_1arguments__dict_1afb7ae6da6289e43f948f2c444c0502db" kindref="member">m_dscalar</ref>,<sp/><ref refid="structproteus_1_1arguments__dict_1aa009422c7591097d0c20a61ec0786a48" kindref="member">m_iscalar</ref>,<sp/></highlight><highlight class="stringliteral">&quot;double<sp/>scalar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;int<sp/>scalar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="171" refid="structproteus_1_1arguments__dict_1a3def5a2dced76fafbd84c13ae142b571" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>arguments_dict::scalar&lt;int&gt;(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>find_element(key,<sp/><ref refid="structproteus_1_1arguments__dict_1aa009422c7591097d0c20a61ec0786a48" kindref="member">m_iscalar</ref>,<sp/><ref refid="structproteus_1_1arguments__dict_1afb7ae6da6289e43f948f2c444c0502db" kindref="member">m_dscalar</ref>,<sp/></highlight><highlight class="stringliteral">&quot;int<sp/>scalar&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;double<sp/>scalar&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D1,<sp/></highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D2&gt;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>D1::mapped_type&amp;<sp/>arguments_dict::find_element(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D1&amp;<sp/>expected_dict,</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>D2&amp;<sp/>other_dict,</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>expected_type,</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>other_type)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>expected_dict[key];</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(std::runtime_error&amp;<sp/>e)</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>std::runtime_error(e.what()</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>get_additional_error_msg(key,<sp/>other_dict,<sp/>expected_type,<sp/>other_type));</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>D&gt;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>arguments_dict::get_additional_error_msg(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>key,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="jf_8h_1a4ae508a8d305b460df210d2a0c2a5574" kindref="member">D</ref>&amp;<sp/>d,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>asked_type,</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>tried_type)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="199"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>=<sp/>d.find(key);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it<sp/>==<sp/>d.cend())</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>any<sp/>of<sp/>the<sp/>internal<sp/>dicts&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;<sp/>in<sp/>dict<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>asked_type<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>but<sp/>found<sp/>in<sp/>dict<sp/>of<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>tried_type;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/cekees/proteus/proteus/mprans/ArgumentsDict.h"/>
  </compounddef>
</doxygen>
