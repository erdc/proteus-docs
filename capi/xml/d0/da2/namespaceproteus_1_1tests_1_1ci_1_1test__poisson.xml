<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d0/da2/namespaceproteus_1_1tests_1_1ci_1_1test__poisson" kind="namespace" language="Python">
    <compoundname>proteus::tests::ci::test_poisson</compoundname>
    <innerclass refid="d0/d4d/classproteus_1_1tests_1_1ci_1_1test__poisson_1_1TestPoisson" prot="public">proteus::tests::ci::test_poisson::TestPoisson</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d0/da2/namespaceproteus_1_1tests_1_1ci_1_1test__poisson_1a2acece6726f5e8dfb6e90f14d537c294" prot="public" static="no" mutable="no">
        <type></type>
        <definition>proteus::tests::ci::test_poisson.modulepath</definition>
        <argsstring></argsstring>
        <name>modulepath</name>
        <initializer>=  os.path.dirname(os.path.abspath(__file__))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="tests/ci/test_poisson.py" line="18" column="1" bodyfile="tests/ci/test_poisson.py" bodystart="18" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Test module for linear boundary value problems (serial)

This module solves equations of the form

.. _math::

  \nabla \cdot \left( a(x) \nabla u \right) = f(x)</verbatim> </para>
    </detaileddescription>
    <location file="tests/ci/test_poisson.py" line="1" column="1"/>
  </compounddef>
</doxygen>
