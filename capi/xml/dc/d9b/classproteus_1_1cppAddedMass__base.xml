<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="dc/d9b/classproteus_1_1cppAddedMass__base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>proteus::cppAddedMass_base</compoundname>
    <derivedcompoundref refid="d3/d40/classproteus_1_1cppAddedMass" prot="public" virt="non-virtual">proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;</derivedcompoundref>
    <includes refid="d9/ddd/AddedMass_8h" local="no">AddedMass.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="dc/d9b/classproteus_1_1cppAddedMass__base_1ac1d88782e9f6a8309168eb9f1b2a70c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual proteus::cppAddedMass_base::~cppAddedMass_base</definition>
        <argsstring>()</argsstring>
        <name>~cppAddedMass_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/AddedMass.h" line="18" column="13" bodyfile="mprans/AddedMass.h" bodystart="18" bodyend="18"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classproteus_1_1cppAddedMass__base_1acdca930cac84444ed4f7dbe1a55b4f21" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::cppAddedMass_base::calculateResidual</definition>
        <argsstring>(arguments_dict &amp;args)=0</argsstring>
        <name>calculateResidual</name>
        <reimplementedby refid="d3/d40/classproteus_1_1cppAddedMass_1a283616e84fbfec8f6584807f0782a3f3">calculateResidual</reimplementedby>
        <param>
          <type><ref refid="d5/d33/structproteus_1_1arguments__dict" kindref="compound">arguments_dict</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/AddedMass.h" line="19" column="18"/>
      </memberdef>
      <memberdef kind="function" id="dc/d9b/classproteus_1_1cppAddedMass__base_1a425eeae7c5a21a3090a0fa0da9e325f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::cppAddedMass_base::calculateJacobian</definition>
        <argsstring>(xt::pyarray&lt; double &gt; &amp;mesh_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_dof, xt::pyarray&lt; int &gt; &amp;mesh_l2g, xt::pyarray&lt; double &gt; &amp;dV_ref, xt::pyarray&lt; double &gt; &amp;u_trial_ref, xt::pyarray&lt; double &gt; &amp;u_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;u_test_ref, xt::pyarray&lt; double &gt; &amp;u_grad_test_ref, xt::pyarray&lt; double &gt; &amp;mesh_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;dS_ref, xt::pyarray&lt; double &gt; &amp;u_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;u_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;u_test_trace_ref, xt::pyarray&lt; double &gt; &amp;u_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;normal_ref, xt::pyarray&lt; double &gt; &amp;boundaryJac_ref, int nElements_global, xt::pyarray&lt; int &gt; &amp;u_l2g, xt::pyarray&lt; double &gt; &amp;u_dof, xt::pyarray&lt; double &gt; &amp;q_rho, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_u_u, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_u_u, xt::pyarray&lt; double &gt; &amp;globalJacobian, int nExteriorElementBoundaries_global, xt::pyarray&lt; int &gt; &amp;exteriorElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryElementsArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryLocalElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_u_u)=0</argsstring>
        <name>calculateJacobian</name>
        <reimplementedby refid="d3/d40/classproteus_1_1cppAddedMass_1a0d37706ff2dce897f5fedcf95241eb48">calculateJacobian</reimplementedby>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>u_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_rho</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_u_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_u_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>globalJacobian</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_u_u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/AddedMass.h" line="58" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>proteus::cppAddedMass_base</label>
        <link refid="dc/d9b/classproteus_1_1cppAddedMass__base"/>
      </node>
      <node id="2">
        <label>proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;</label>
        <link refid="d3/d40/classproteus_1_1cppAddedMass"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="mprans/AddedMass.h" line="16" column="1" bodyfile="mprans/AddedMass.h" bodystart="15" bodyend="91"/>
    <listofallmembers>
      <member refid="dc/d9b/classproteus_1_1cppAddedMass__base_1a425eeae7c5a21a3090a0fa0da9e325f4" prot="public" virt="pure-virtual"><scope>proteus::cppAddedMass_base</scope><name>calculateJacobian</name></member>
      <member refid="dc/d9b/classproteus_1_1cppAddedMass__base_1acdca930cac84444ed4f7dbe1a55b4f21" prot="public" virt="pure-virtual"><scope>proteus::cppAddedMass_base</scope><name>calculateResidual</name></member>
      <member refid="dc/d9b/classproteus_1_1cppAddedMass__base_1ac1d88782e9f6a8309168eb9f1b2a70c5" prot="public" virt="virtual"><scope>proteus::cppAddedMass_base</scope><name>~cppAddedMass_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
