<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classproteus_1_1_g_n___s_w2_d_c_v__base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>proteus::GN_SW2DCV_base</compoundname>
    <derivedcompoundref refid="classproteus_1_1_g_n___s_w2_d_c_v" prot="public" virt="non-virtual">proteus::GN_SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;</derivedcompoundref>
    <includes refid="_g_n___s_w2_d_c_v_8h" local="no">/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a386032927cbf93a2e5f59548981f7fde" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::GN_SW2DCV_base::Rneg</definition>
        <argsstring></argsstring>
        <name>Rneg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="159" column="17" bodyfile="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a5057a84e11f2ba39c1a4c4c722fcafab" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::GN_SW2DCV_base::Rpos</definition>
        <argsstring></argsstring>
        <name>Rpos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="159" column="22" bodyfile="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a46345003835ebf7457943566b7755817" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::GN_SW2DCV_base::Rneg_heta</definition>
        <argsstring></argsstring>
        <name>Rneg_heta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="159" column="27" bodyfile="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a5eca81c279c34b9097f4b2982e8d327f" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::GN_SW2DCV_base::Rpos_heta</definition>
        <argsstring></argsstring>
        <name>Rpos_heta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="159" column="37" bodyfile="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a8056139265642caee29ad29ec52d5788" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::GN_SW2DCV_base::hLow</definition>
        <argsstring></argsstring>
        <name>hLow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="159" column="47" bodyfile="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a7e1ecdf9f3e951f87bceb7cfca83da43" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::GN_SW2DCV_base::huLow</definition>
        <argsstring></argsstring>
        <name>huLow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="159" column="52" bodyfile="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a7342dcea80aada49ec3c6e2c225501a4" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::GN_SW2DCV_base::hvLow</definition>
        <argsstring></argsstring>
        <name>hvLow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="159" column="58" bodyfile="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a2446072986341eb3e593aca6beaf8b09" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::GN_SW2DCV_base::hetaLow</definition>
        <argsstring></argsstring>
        <name>hetaLow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="160" column="7" bodyfile="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1ab50314b4fa3cd11d2ff906d644950a03" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::GN_SW2DCV_base::hwLow</definition>
        <argsstring></argsstring>
        <name>hwLow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="160" column="15" bodyfile="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a8ebe05e69da454ff3b5aa0f5bb3380ed" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::GN_SW2DCV_base::Kmax</definition>
        <argsstring></argsstring>
        <name>Kmax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="160" column="21" bodyfile="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1ac6e00955095da826c07d5a65e419776c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual proteus::GN_SW2DCV_base::~GN_SW2DCV_base</definition>
        <argsstring>()</argsstring>
        <name>~GN_SW2DCV_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="161" column="11" bodyfile="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a41d9659105523ade525316281a8ef504" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::GN_SW2DCV_base::FCTStep</definition>
        <argsstring>(double dt, int NNZ, int numDOFs, xt::pyarray&lt; double &gt; &amp;lumped_mass_matrix, xt::pyarray&lt; double &gt; &amp;h_old, xt::pyarray&lt; double &gt; &amp;hu_old, xt::pyarray&lt; double &gt; &amp;hv_old, xt::pyarray&lt; double &gt; &amp;heta_old, xt::pyarray&lt; double &gt; &amp;hw_old, xt::pyarray&lt; double &gt; &amp;b_dof, xt::pyarray&lt; double &gt; &amp;high_order_hnp1, xt::pyarray&lt; double &gt; &amp;high_order_hunp1, xt::pyarray&lt; double &gt; &amp;high_order_hvnp1, xt::pyarray&lt; double &gt; &amp;high_order_hetanp1, xt::pyarray&lt; double &gt; &amp;high_order_hwnp1, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hu, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hv, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_heta, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hw, xt::pyarray&lt; double &gt; &amp;limited_hnp1, xt::pyarray&lt; double &gt; &amp;limited_hunp1, xt::pyarray&lt; double &gt; &amp;limited_hvnp1, xt::pyarray&lt; double &gt; &amp;limited_hetanp1, xt::pyarray&lt; double &gt; &amp;limited_hwnp1, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_DofLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_DofLoops, xt::pyarray&lt; double &gt; &amp;MassMatrix, xt::pyarray&lt; double &gt; &amp;dH_minus_dL, xt::pyarray&lt; double &gt; &amp;muH_minus_muL, double hEps, xt::pyarray&lt; double &gt; &amp;hReg, int LUMPED_MASS_MATRIX, xt::pyarray&lt; double &gt; &amp;dLow, xt::pyarray&lt; double &gt; &amp;hBT, xt::pyarray&lt; double &gt; &amp;huBT, xt::pyarray&lt; double &gt; &amp;hvBT, xt::pyarray&lt; double &gt; &amp;hetaBT, xt::pyarray&lt; double &gt; &amp;hwBT)=0</argsstring>
        <name>FCTStep</name>
        <reimplementedby refid="classproteus_1_1_g_n___s_w2_d_c_v_1acb7b20ba9e45e3eb57fa3da2e19b9b27">FCTStep</reimplementedby>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NNZ</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDOFs</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>lumped_mass_matrix</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>heta_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hw_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>b_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hunp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hvnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hetanp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hwnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hunp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hvnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hetanp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hwnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>MassMatrix</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dH_minus_dL</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>muH_minus_muL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hEps</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hReg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LUMPED_MASS_MATRIX</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dLow</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>huBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hvBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hetaBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hwBT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="163" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a18da56f2df99e04911638423634ba9b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::GN_SW2DCV_base::convexLimiting</definition>
        <argsstring>(double dt, int NNZ, int numDOFs, xt::pyarray&lt; double &gt; &amp;lumped_mass_matrix, xt::pyarray&lt; double &gt; &amp;h_old, xt::pyarray&lt; double &gt; &amp;hu_old, xt::pyarray&lt; double &gt; &amp;hv_old, xt::pyarray&lt; double &gt; &amp;heta_old, xt::pyarray&lt; double &gt; &amp;hw_old, xt::pyarray&lt; double &gt; &amp;b_dof, xt::pyarray&lt; double &gt; &amp;high_order_hnp1, xt::pyarray&lt; double &gt; &amp;high_order_hunp1, xt::pyarray&lt; double &gt; &amp;high_order_hvnp1, xt::pyarray&lt; double &gt; &amp;high_order_hetanp1, xt::pyarray&lt; double &gt; &amp;high_order_hwnp1, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hu, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hv, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_heta, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hw, xt::pyarray&lt; double &gt; &amp;limited_hnp1, xt::pyarray&lt; double &gt; &amp;limited_hunp1, xt::pyarray&lt; double &gt; &amp;limited_hvnp1, xt::pyarray&lt; double &gt; &amp;limited_hetanp1, xt::pyarray&lt; double &gt; &amp;limited_hwnp1, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_DofLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_DofLoops, xt::pyarray&lt; double &gt; &amp;MassMatrix, xt::pyarray&lt; double &gt; &amp;dH_minus_dL, xt::pyarray&lt; double &gt; &amp;muH_minus_muL, double hEps, xt::pyarray&lt; double &gt; &amp;hReg, int LUMPED_MASS_MATRIX, xt::pyarray&lt; double &gt; &amp;dLow, xt::pyarray&lt; double &gt; &amp;hBT, xt::pyarray&lt; double &gt; &amp;huBT, xt::pyarray&lt; double &gt; &amp;hvBT, xt::pyarray&lt; double &gt; &amp;hetaBT, xt::pyarray&lt; double &gt; &amp;hwBT, xt::pyarray&lt; double &gt; &amp;new_SourceTerm_hu, xt::pyarray&lt; double &gt; &amp;new_SourceTerm_hv, xt::pyarray&lt; double &gt; &amp;new_SourceTerm_heta, xt::pyarray&lt; double &gt; &amp;new_SourceTerm_hw)=0</argsstring>
        <name>convexLimiting</name>
        <reimplementedby refid="classproteus_1_1_g_n___s_w2_d_c_v_1a930296592854f545e7a2e8a7d526fc06">convexLimiting</reimplementedby>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NNZ</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDOFs</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>lumped_mass_matrix</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>heta_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hw_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>b_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hunp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hvnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hetanp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hwnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hunp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hvnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hetanp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hwnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>MassMatrix</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dH_minus_dL</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>muH_minus_muL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hEps</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hReg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LUMPED_MASS_MATRIX</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dLow</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>huBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hvBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hetaBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hwBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>new_SourceTerm_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>new_SourceTerm_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>new_SourceTerm_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>new_SourceTerm_hw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="186" column="3"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a91e6200836683a58af1f67c642b4e992" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double proteus::GN_SW2DCV_base::calculateEdgeBasedCFL</definition>
        <argsstring>(double g, int numDOFsPerEqn, xt::pyarray&lt; double &gt; &amp;lumped_mass_matrix, xt::pyarray&lt; double &gt; &amp;h_old, xt::pyarray&lt; double &gt; &amp;hu_old, xt::pyarray&lt; double &gt; &amp;hv_old, xt::pyarray&lt; double &gt; &amp;heta_old, xt::pyarray&lt; double &gt; &amp;b_dof, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_DofLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_DofLoops, double hEps, xt::pyarray&lt; double &gt; &amp;hReg, xt::pyarray&lt; double &gt; &amp;Cx, xt::pyarray&lt; double &gt; &amp;Cy, xt::pyarray&lt; double &gt; &amp;CTx, xt::pyarray&lt; double &gt; &amp;CTy, xt::pyarray&lt; double &gt; &amp;dLow, double run_cfl, xt::pyarray&lt; double &gt; &amp;edge_based_cfl, int debug)=0</argsstring>
        <name>calculateEdgeBasedCFL</name>
        <reimplementedby refid="classproteus_1_1_g_n___s_w2_d_c_v_1a9d67704c2d056c9e00a2222b330c28b8">calculateEdgeBasedCFL</reimplementedby>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDOFsPerEqn</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>lumped_mass_matrix</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>heta_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>b_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_DofLoops</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hEps</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hReg</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>Cx</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>Cy</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>CTx</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>CTy</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dLow</declname>
        </param>
        <param>
          <type>double</type>
          <declname>run_cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>edge_based_cfl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="213" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1ae644a49fb183c7ea8d4c397d3a512138" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::GN_SW2DCV_base::calculateResidual</definition>
        <argsstring>(xt::pyarray&lt; double &gt; &amp;mesh_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_dof, xt::pyarray&lt; double &gt; &amp;mesh_velocity_dof, double MOVING_DOMAIN, xt::pyarray&lt; int &gt; &amp;mesh_l2g, xt::pyarray&lt; double &gt; &amp;dV_ref, xt::pyarray&lt; double &gt; &amp;h_trial_ref, xt::pyarray&lt; double &gt; &amp;h_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;h_test_ref, xt::pyarray&lt; double &gt; &amp;h_grad_test_ref, xt::pyarray&lt; double &gt; &amp;vel_trial_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;vel_test_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_test_ref, xt::pyarray&lt; double &gt; &amp;mesh_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;dS_ref, xt::pyarray&lt; double &gt; &amp;h_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;h_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;h_test_trace_ref, xt::pyarray&lt; double &gt; &amp;h_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_test_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;normal_ref, xt::pyarray&lt; double &gt; &amp;boundaryJac_ref, xt::pyarray&lt; double &gt; &amp;elementDiameter, int nElements_global, double useRBLES, double useMetrics, double alphaBDF, double nu, double g, xt::pyarray&lt; int &gt; &amp;h_l2g, xt::pyarray&lt; int &gt; &amp;vel_l2g, xt::pyarray&lt; double &gt; &amp;h_dof_old, xt::pyarray&lt; double &gt; &amp;hu_dof_old, xt::pyarray&lt; double &gt; &amp;hv_dof_old, xt::pyarray&lt; double &gt; &amp;heta_dof_old, xt::pyarray&lt; double &gt; &amp;hw_dof_old, xt::pyarray&lt; double &gt; &amp;b_dof, xt::pyarray&lt; double &gt; &amp;h_dof, xt::pyarray&lt; double &gt; &amp;hu_dof, xt::pyarray&lt; double &gt; &amp;hv_dof, xt::pyarray&lt; double &gt; &amp;heta_dof, xt::pyarray&lt; double &gt; &amp;hw_dof, xt::pyarray&lt; double &gt; &amp;h_dof_sge, xt::pyarray&lt; double &gt; &amp;hu_dof_sge, xt::pyarray&lt; double &gt; &amp;hv_dof_sge, xt::pyarray&lt; double &gt; &amp;heta_dof_sge, xt::pyarray&lt; double &gt; &amp;hw_dof_sge, xt::pyarray&lt; double &gt; &amp;q_mass_acc, xt::pyarray&lt; double &gt; &amp;q_mom_hu_acc, xt::pyarray&lt; double &gt; &amp;q_mom_hv_acc, xt::pyarray&lt; double &gt; &amp;q_mass_adv, xt::pyarray&lt; double &gt; &amp;q_mass_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_mom_hu_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_mom_hv_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_cfl, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hu_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hu_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hv_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hv_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hv_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hv_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hu_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hu_colind, int offset_h, int offset_hu, int offset_hv, int offset_heta, int offset_hw, int stride_h, int stride_hu, int stride_hv, int stride_heta, int stride_hw, xt::pyarray&lt; double &gt; &amp;globalResidual, int nExteriorElementBoundaries_global, xt::pyarray&lt; int &gt; &amp;exteriorElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryElementsArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryLocalElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_h, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_hu, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_hv, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_h, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_hu, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_hv, xt::pyarray&lt; int &gt; &amp;isDiffusiveFluxBoundary_hu, xt::pyarray&lt; int &gt; &amp;isDiffusiveFluxBoundary_hv, xt::pyarray&lt; double &gt; &amp;ebqe_bc_h_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mass_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mom_hu_adv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mom_hv_adv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_hu_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_hu_diff_ext, xt::pyarray&lt; double &gt; &amp;ebqe_penalty_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_hv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_hv_diff_ext, xt::pyarray&lt; double &gt; &amp;q_velocity, xt::pyarray&lt; double &gt; &amp;ebqe_velocity, xt::pyarray&lt; double &gt; &amp;flux, xt::pyarray&lt; double &gt; &amp;elementResidual_h, xt::pyarray&lt; double &gt; &amp;Cx, xt::pyarray&lt; double &gt; &amp;Cy, xt::pyarray&lt; double &gt; &amp;CTx, xt::pyarray&lt; double &gt; &amp;CTy, int numDOFsPerEqn, int NNZ, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_DofLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_DofLoops, xt::pyarray&lt; double &gt; &amp;lumped_mass_matrix, double cfl_run, double hEps, xt::pyarray&lt; double &gt; &amp;hReg, xt::pyarray&lt; double &gt; &amp;hnp1_at_quad_point, xt::pyarray&lt; double &gt; &amp;hunp1_at_quad_point, xt::pyarray&lt; double &gt; &amp;hvnp1_at_quad_point, xt::pyarray&lt; double &gt; &amp;hetanp1_at_quad_point, xt::pyarray&lt; double &gt; &amp;hwnp1_at_quad_point, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hu, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hv, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_heta, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hw, xt::pyarray&lt; double &gt; &amp;dH_minus_dL, xt::pyarray&lt; double &gt; &amp;muH_minus_muL, double cE, int LUMPED_MASS_MATRIX, double dt, int LINEAR_FRICTION, double mannings, xt::pyarray&lt; double &gt; &amp;quantDOFs, int SECOND_CALL_CALCULATE_RESIDUAL, int COMPUTE_NORMALS, xt::pyarray&lt; double &gt; &amp;normalx, xt::pyarray&lt; double &gt; &amp;normaly, xt::pyarray&lt; double &gt; &amp;dLow, xt::pyarray&lt; double &gt; &amp;hBT, xt::pyarray&lt; double &gt; &amp;huBT, xt::pyarray&lt; double &gt; &amp;hvBT, xt::pyarray&lt; double &gt; &amp;hetaBT, xt::pyarray&lt; double &gt; &amp;hwBT, int lstage, xt::pyarray&lt; double &gt; &amp;new_SourceTerm_hu, xt::pyarray&lt; double &gt; &amp;new_SourceTerm_hv, xt::pyarray&lt; double &gt; &amp;new_SourceTerm_heta, xt::pyarray&lt; double &gt; &amp;new_SourceTerm_hw)=0</argsstring>
        <name>calculateResidual</name>
        <reimplementedby refid="classproteus_1_1_g_n___s_w2_d_c_v_1aca32bd335fc1c278e46fed819a23386c">calculateResidual</reimplementedby>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_velocity_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>MOVING_DOMAIN</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>elementDiameter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useRBLES</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useMetrics</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaBDF</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>h_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>vel_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>heta_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hw_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>b_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>heta_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hw_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>heta_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hw_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mass_acc</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hu_acc</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hv_acc</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mass_adv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mass_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hu_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hv_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hu_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hu_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hv_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hv_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hv_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hv_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hu_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hu_colind</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_hu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_hv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_heta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_hw</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_hu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_hv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_heta</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>globalResidual</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDiffusiveFluxBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDiffusiveFluxBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_h_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mass_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mom_hu_adv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mom_hv_adv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_hu_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_hu_diff_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_penalty_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_hv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_hv_diff_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_velocity</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_velocity</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>elementResidual_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>Cx</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>Cy</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>CTx</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>CTy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDOFsPerEqn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NNZ</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>lumped_mass_matrix</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cfl_run</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hEps</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hReg</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hnp1_at_quad_point</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hunp1_at_quad_point</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hvnp1_at_quad_point</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hetanp1_at_quad_point</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hwnp1_at_quad_point</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dH_minus_dL</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>muH_minus_muL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cE</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LUMPED_MASS_MATRIX</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LINEAR_FRICTION</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mannings</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>quantDOFs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>SECOND_CALL_CALCULATE_RESIDUAL</declname>
        </param>
        <param>
          <type>int</type>
          <declname>COMPUTE_NORMALS</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normalx</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normaly</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dLow</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>huBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hvBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hetaBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hwBT</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lstage</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>new_SourceTerm_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>new_SourceTerm_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>new_SourceTerm_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>new_SourceTerm_hw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="224" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a005f3e1b1f1278b41c724bac7d365727" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::GN_SW2DCV_base::calculateMassMatrix</definition>
        <argsstring>(xt::pyarray&lt; double &gt; &amp;mesh_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_dof, xt::pyarray&lt; double &gt; &amp;mesh_velocity_dof, double MOVING_DOMAIN, xt::pyarray&lt; int &gt; &amp;mesh_l2g, xt::pyarray&lt; double &gt; &amp;dV_ref, xt::pyarray&lt; double &gt; &amp;h_trial_ref, xt::pyarray&lt; double &gt; &amp;h_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;h_test_ref, xt::pyarray&lt; double &gt; &amp;h_grad_test_ref, xt::pyarray&lt; double &gt; &amp;vel_trial_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;vel_test_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_test_ref, xt::pyarray&lt; double &gt; &amp;mesh_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;dS_ref, xt::pyarray&lt; double &gt; &amp;h_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;h_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;h_test_trace_ref, xt::pyarray&lt; double &gt; &amp;h_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_test_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;normal_ref, xt::pyarray&lt; double &gt; &amp;boundaryJac_ref, xt::pyarray&lt; double &gt; &amp;elementDiameter, int nElements_global, double useRBLES, double useMetrics, double alphaBDF, double nu, double g, xt::pyarray&lt; int &gt; &amp;h_l2g, xt::pyarray&lt; int &gt; &amp;vel_l2g, xt::pyarray&lt; double &gt; &amp;b_dof, xt::pyarray&lt; double &gt; &amp;h_dof, xt::pyarray&lt; double &gt; &amp;hu_dof, xt::pyarray&lt; double &gt; &amp;hv_dof, xt::pyarray&lt; double &gt; &amp;heta_dof, xt::pyarray&lt; double &gt; &amp;hw_dof, xt::pyarray&lt; double &gt; &amp;h_dof_sge, xt::pyarray&lt; double &gt; &amp;hu_dof_sge, xt::pyarray&lt; double &gt; &amp;hv_dof_sge, xt::pyarray&lt; double &gt; &amp;heta_dof_sge, xt::pyarray&lt; double &gt; &amp;hw_dof_sge, xt::pyarray&lt; double &gt; &amp;q_mass_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_mom_hu_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_mom_hv_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_cfl, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hu_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hu_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hv_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hv_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hv_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hv_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hu_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hu_colind, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_heta, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_heta, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_hw, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_hw, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_heta, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_heta, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_hw, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_hw, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_heta, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_heta, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_hw, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_hw, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_heta_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_heta_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_heta_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_heta_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_heta_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_heta_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_heta_heta, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_heta_heta, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_heta_hw, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_heta_hw, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hw_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hw_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hw_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hw_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hw_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hw_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hw_heta, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hw_heta, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hw_hw, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hw_hw, xt::pyarray&lt; double &gt; &amp;globalJacobian, int nExteriorElementBoundaries_global, xt::pyarray&lt; int &gt; &amp;exteriorElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryElementsArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryLocalElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_h, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_hu, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_hv, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_h, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_hu, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_hv, xt::pyarray&lt; int &gt; &amp;isDiffusiveFluxBoundary_hu, xt::pyarray&lt; int &gt; &amp;isDiffusiveFluxBoundary_hv, xt::pyarray&lt; double &gt; &amp;ebqe_bc_h_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mass_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mom_hu_adv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mom_hv_adv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_hu_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_hu_diff_ext, xt::pyarray&lt; double &gt; &amp;ebqe_penalty_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_hv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_hv_diff_ext, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_h_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_h_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_h_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hu_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hu_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hu_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hv_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hv_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hv_hv, double dt)=0</argsstring>
        <name>calculateMassMatrix</name>
        <reimplementedby refid="classproteus_1_1_g_n___s_w2_d_c_v_1aef28304bd2b8ec85674414998dd18066">calculateMassMatrix</reimplementedby>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_velocity_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>MOVING_DOMAIN</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>elementDiameter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useRBLES</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useMetrics</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaBDF</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>h_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>vel_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>b_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>heta_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hw_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>heta_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hw_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mass_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hu_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hv_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hu_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hu_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hv_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hv_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hv_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hv_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hu_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hu_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_heta_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_heta_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_heta_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_heta_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_heta_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_heta_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_heta_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_heta_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_heta_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_heta_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hw_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hw_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hw_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hw_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hw_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hw_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hw_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hw_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hw_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hw_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>globalJacobian</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDiffusiveFluxBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDiffusiveFluxBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_h_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mass_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mom_hu_adv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mom_hv_adv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_hu_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_hu_diff_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_penalty_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_hv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_hv_diff_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_h_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_h_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_h_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hu_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hu_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hu_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hv_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hv_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hv_hv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="297" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_g_n___s_w2_d_c_v__base_1a039102594ac7b9aa14b1c3595a2971f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::GN_SW2DCV_base::calculateLumpedMassMatrix</definition>
        <argsstring>(xt::pyarray&lt; double &gt; &amp;mesh_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_dof, xt::pyarray&lt; double &gt; &amp;mesh_velocity_dof, double MOVING_DOMAIN, xt::pyarray&lt; int &gt; &amp;mesh_l2g, xt::pyarray&lt; double &gt; &amp;dV_ref, xt::pyarray&lt; double &gt; &amp;h_trial_ref, xt::pyarray&lt; double &gt; &amp;h_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;h_test_ref, xt::pyarray&lt; double &gt; &amp;h_grad_test_ref, xt::pyarray&lt; double &gt; &amp;vel_trial_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;vel_test_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_test_ref, xt::pyarray&lt; double &gt; &amp;mesh_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;dS_ref, xt::pyarray&lt; double &gt; &amp;h_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;h_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;h_test_trace_ref, xt::pyarray&lt; double &gt; &amp;h_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_test_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;normal_ref, xt::pyarray&lt; double &gt; &amp;boundaryJac_ref, xt::pyarray&lt; double &gt; &amp;elementDiameter, int nElements_global, double useRBLES, double useMetrics, double alphaBDF, double nu, double g, xt::pyarray&lt; int &gt; &amp;h_l2g, xt::pyarray&lt; int &gt; &amp;vel_l2g, xt::pyarray&lt; double &gt; &amp;b_dof, xt::pyarray&lt; double &gt; &amp;h_dof, xt::pyarray&lt; double &gt; &amp;hu_dof, xt::pyarray&lt; double &gt; &amp;hv_dof, xt::pyarray&lt; double &gt; &amp;h_dof_sge, xt::pyarray&lt; double &gt; &amp;hu_dof_sge, xt::pyarray&lt; double &gt; &amp;hv_dof_sge, xt::pyarray&lt; double &gt; &amp;q_mass_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_mom_hu_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_mom_hv_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_cfl, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hu_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hu_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hv_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hv_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hv_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hv_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hu_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hu_colind, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_heta, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_heta, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_hw, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_hw, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_heta, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_heta, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_hw, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_hw, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_heta, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_heta, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_hw, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_hw, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_heta_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_heta_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_heta_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_heta_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_heta_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_heta_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_heta_heta, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_heta_heta, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_heta_hw, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_heta_hw, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hw_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hw_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hw_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hw_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hw_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hw_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hw_heta, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hw_heta, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hw_hw, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hw_hw, xt::pyarray&lt; double &gt; &amp;globalJacobian, int nExteriorElementBoundaries_global, xt::pyarray&lt; int &gt; &amp;exteriorElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryElementsArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryLocalElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_h, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_hu, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_hv, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_h, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_hu, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_hv, xt::pyarray&lt; int &gt; &amp;isDiffusiveFluxBoundary_hu, xt::pyarray&lt; int &gt; &amp;isDiffusiveFluxBoundary_hv, xt::pyarray&lt; double &gt; &amp;ebqe_bc_h_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mass_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mom_hu_adv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mom_hv_adv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_hu_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_hu_diff_ext, xt::pyarray&lt; double &gt; &amp;ebqe_penalty_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_hv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_hv_diff_ext, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_h_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_h_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_h_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hu_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hu_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hu_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hv_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hv_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hv_hv, double dt)=0</argsstring>
        <name>calculateLumpedMassMatrix</name>
        <reimplementedby refid="classproteus_1_1_g_n___s_w2_d_c_v_1a769d0d1426837e6db6e678ee8b92d7f1">calculateLumpedMassMatrix</reimplementedby>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_velocity_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>MOVING_DOMAIN</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>elementDiameter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useRBLES</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useMetrics</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaBDF</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>h_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>vel_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>b_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mass_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hu_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hv_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hu_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hu_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hv_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hv_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hv_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hv_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hu_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hu_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_heta_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_heta_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_heta_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_heta_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_heta_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_heta_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_heta_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_heta_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_heta_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_heta_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hw_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hw_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hw_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hw_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hw_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hw_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hw_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hw_heta</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hw_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hw_hw</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>globalJacobian</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDiffusiveFluxBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDiffusiveFluxBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_h_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mass_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mom_hu_adv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mom_hv_adv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_hu_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_hu_diff_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_penalty_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_hv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_hv_diff_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_h_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_h_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_h_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hu_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hu_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hu_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hv_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hv_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hv_hv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="370" column="16"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>proteus::GN_SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;</label>
        <link refid="classproteus_1_1_g_n___s_w2_d_c_v"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>proteus::GN_SW2DCV_base</label>
        <link refid="classproteus_1_1_g_n___s_w2_d_c_v__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>std::valarray&lt; double &gt;</label>
      </node>
      <node id="1">
        <label>proteus::GN_SW2DCV_base</label>
        <link refid="classproteus_1_1_g_n___s_w2_d_c_v__base"/>
        <childnode refid="2" relation="usage">
          <edgelabel>Kmax</edgelabel>
          <edgelabel>Rneg</edgelabel>
          <edgelabel>Rneg_heta</edgelabel>
          <edgelabel>Rpos</edgelabel>
          <edgelabel>Rpos_heta</edgelabel>
          <edgelabel>hLow</edgelabel>
          <edgelabel>hetaLow</edgelabel>
          <edgelabel>huLow</edgelabel>
          <edgelabel>hvLow</edgelabel>
          <edgelabel>hwLow</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" line="157" column="1" bodyfile="/Users/cekees/proteus/proteus/mprans/GN_SW2DCV.h" bodystart="157" bodyend="441"/>
    <listofallmembers>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a91e6200836683a58af1f67c642b4e992" prot="public" virt="pure-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>calculateEdgeBasedCFL</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a039102594ac7b9aa14b1c3595a2971f3" prot="public" virt="pure-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>calculateLumpedMassMatrix</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a005f3e1b1f1278b41c724bac7d365727" prot="public" virt="pure-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>calculateMassMatrix</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1ae644a49fb183c7ea8d4c397d3a512138" prot="public" virt="pure-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>calculateResidual</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a18da56f2df99e04911638423634ba9b1" prot="public" virt="pure-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>convexLimiting</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a41d9659105523ade525316281a8ef504" prot="public" virt="pure-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>FCTStep</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a2446072986341eb3e593aca6beaf8b09" prot="public" virt="non-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>hetaLow</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a8056139265642caee29ad29ec52d5788" prot="public" virt="non-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>hLow</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a7e1ecdf9f3e951f87bceb7cfca83da43" prot="public" virt="non-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>huLow</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a7342dcea80aada49ec3c6e2c225501a4" prot="public" virt="non-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>hvLow</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1ab50314b4fa3cd11d2ff906d644950a03" prot="public" virt="non-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>hwLow</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a8ebe05e69da454ff3b5aa0f5bb3380ed" prot="public" virt="non-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>Kmax</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a386032927cbf93a2e5f59548981f7fde" prot="public" virt="non-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>Rneg</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a46345003835ebf7457943566b7755817" prot="public" virt="non-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>Rneg_heta</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a5057a84e11f2ba39c1a4c4c722fcafab" prot="public" virt="non-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>Rpos</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1a5eca81c279c34b9097f4b2982e8d327f" prot="public" virt="non-virtual"><scope>proteus::GN_SW2DCV_base</scope><name>Rpos_heta</name></member>
      <member refid="classproteus_1_1_g_n___s_w2_d_c_v__base_1ac6e00955095da826c07d5a65e419776c" prot="public" virt="virtual"><scope>proteus::GN_SW2DCV_base</scope><name>~GN_SW2DCV_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
