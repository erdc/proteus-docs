<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="mesh_8h" kind="file" language="C++">
    <compoundname>mesh.h</compoundname>
    <includes local="no">set</includes>
    <includes local="no">vector</includes>
    <includes local="no">algorithm</includes>
    <includes local="no">map</includes>
    <includes local="no">list</includes>
    <includes local="no">iostream</includes>
    <includes local="no">iomanip</includes>
    <includes local="no">fstream</includes>
    <includes local="no">cassert</includes>
    <includes local="no">cmath</includes>
    <includedby refid="mesh_8cpp" local="yes">mesh.cpp</includedby>
    <includedby refid="_mesh_adapt_p_u_m_i_8h" local="yes">MeshAdaptPUMI.h</includedby>
    <includedby refid="_dump_mesh_8h" local="no">DumpMesh.h</includedby>
    <includedby refid="_mesh_converter_8cpp" local="yes">MeshConverter.cpp</includedby>
    <includedby refid="_parallel_mesh_converter_8cpp" local="yes">ParallelMeshConverter.cpp</includedby>
    <includedby refid="partitioning_8h" local="yes">partitioning.h</includedby>
    <includedby refid="test_mesh_8cpp" local="yes">testMesh.cpp</includedby>
    <incdepgraph>
      <node id="944">
        <label>list</label>
      </node>
      <node id="946">
        <label>iomanip</label>
      </node>
      <node id="939">
        <label>mesh.h</label>
        <link refid="mesh_8h"/>
        <childnode refid="940" relation="include">
        </childnode>
        <childnode refid="941" relation="include">
        </childnode>
        <childnode refid="942" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
        <childnode refid="944" relation="include">
        </childnode>
        <childnode refid="945" relation="include">
        </childnode>
        <childnode refid="946" relation="include">
        </childnode>
        <childnode refid="947" relation="include">
        </childnode>
        <childnode refid="948" relation="include">
        </childnode>
        <childnode refid="949" relation="include">
        </childnode>
      </node>
      <node id="949">
        <label>cmath</label>
      </node>
      <node id="948">
        <label>cassert</label>
      </node>
      <node id="943">
        <label>map</label>
      </node>
      <node id="947">
        <label>fstream</label>
      </node>
      <node id="941">
        <label>vector</label>
      </node>
      <node id="945">
        <label>iostream</label>
      </node>
      <node id="940">
        <label>set</label>
      </node>
      <node id="942">
        <label>algorithm</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="962">
        <label>DumpMesh.cpp</label>
        <link refid="_dump_mesh_8cpp"/>
      </node>
      <node id="950">
        <label>mesh.h</label>
        <link refid="mesh_8h"/>
        <childnode refid="951" relation="include">
        </childnode>
        <childnode refid="952" relation="include">
        </childnode>
        <childnode refid="961" relation="include">
        </childnode>
        <childnode refid="956" relation="include">
        </childnode>
        <childnode refid="958" relation="include">
        </childnode>
        <childnode refid="963" relation="include">
        </childnode>
        <childnode refid="965" relation="include">
        </childnode>
      </node>
      <node id="964">
        <label>partitioning.cpp</label>
        <link refid="partitioning_8cpp"/>
      </node>
      <node id="961">
        <label>DumpMesh.h</label>
        <link refid="_dump_mesh_8h"/>
        <childnode refid="962" relation="include">
        </childnode>
        <childnode refid="958" relation="include">
        </childnode>
      </node>
      <node id="960">
        <label>VMS.cpp</label>
        <link refid="_v_m_s_8cpp"/>
      </node>
      <node id="956">
        <label>MeshConverter.cpp</label>
        <link refid="_mesh_converter_8cpp"/>
      </node>
      <node id="953">
        <label>cMeshAdaptPUMI.cpp</label>
        <link refid="c_mesh_adapt_p_u_m_i_8cpp"/>
      </node>
      <node id="963">
        <label>partitioning.h</label>
        <link refid="partitioning_8h"/>
        <childnode refid="964" relation="include">
        </childnode>
      </node>
      <node id="951">
        <label>mesh.cpp</label>
        <link refid="mesh_8cpp"/>
      </node>
      <node id="958">
        <label>ParallelMeshConverter.cpp</label>
        <link refid="_parallel_mesh_converter_8cpp"/>
      </node>
      <node id="954">
        <label>createAnalyticGeometry.cpp</label>
        <link refid="create_analytic_geometry_8cpp"/>
      </node>
      <node id="965">
        <label>testMesh.cpp</label>
        <link refid="test_mesh_8cpp"/>
      </node>
      <node id="957">
        <label>MeshFields.cpp</label>
        <link refid="_mesh_fields_8cpp"/>
      </node>
      <node id="952">
        <label>MeshAdaptPUMI.h</label>
        <link refid="_mesh_adapt_p_u_m_i_8h"/>
        <childnode refid="953" relation="include">
        </childnode>
        <childnode refid="954" relation="include">
        </childnode>
        <childnode refid="955" relation="include">
        </childnode>
        <childnode refid="956" relation="include">
        </childnode>
        <childnode refid="957" relation="include">
        </childnode>
        <childnode refid="958" relation="include">
        </childnode>
        <childnode refid="959" relation="include">
        </childnode>
        <childnode refid="960" relation="include">
        </childnode>
      </node>
      <node id="955">
        <label>ErrorResidualMethod.cpp</label>
        <link refid="_error_residual_method_8cpp"/>
      </node>
      <node id="959">
        <label>SizeField.cpp</label>
        <link refid="_size_field_8cpp"/>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_mesh" prot="public">Mesh</innerclass>
    <innerclass refid="struct_multilevel_mesh" prot="public">MultilevelMesh</innerclass>
    <innerclass refid="class_node_tuple" prot="public">NodeTuple</innerclass>
    <innerclass refid="class_node" prot="public">Node</innerclass>
    <innerclass refid="class_element_neighbors" prot="public">ElementNeighbors</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__mesh_1ga509a95e0124b5fdd0a7cd09574cb5e30" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initializeMesh</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>initializeMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="87" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="87" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga137e5d0abd63a35938eb82b9f6cc4a62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void deleteMesh</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>deleteMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="164" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="164" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga1fca12c22083b27c29a43d765d02341a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void initializeMultilevelMesh</definition>
        <argsstring>(MultilevelMesh &amp;multilevelMesh)</argsstring>
        <name>initializeMultilevelMesh</name>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="266" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="266" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaf6c44a116f31b63a8d8d082a5bd0cc0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void deleteMultilevelMesh</definition>
        <argsstring>(MultilevelMesh &amp;multilevelMesh)</argsstring>
        <name>deleteMultilevelMesh</name>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="275" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="275" bodyend="297"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gabc239fca1803721a81b882c99fc8a817" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int edgeMeshElements</definition>
        <argsstring>(const int &amp;nx, Mesh &amp;mesh)</argsstring>
        <name>edgeMeshElements</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="299" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="59" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga2dcef8d6600302d66dcc2a7261e5e506" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularEdgeMeshNodes</definition>
        <argsstring>(const int &amp;nx, const double &amp;Lx, Mesh &amp;mesh)</argsstring>
        <name>regularEdgeMeshNodes</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="300" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="73" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gabe3df821ff4ab8aec3dd150a638b26e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int globallyRefineEdgeMesh</definition>
        <argsstring>(const int &amp;nLevels, Mesh &amp;mesh, MultilevelMesh &amp;multilevelMesh, bool averageNewNodeFlags=false)</argsstring>
        <name>globallyRefineEdgeMesh</name>
        <param>
          <type>const int &amp;</type>
          <declname>nLevels</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>averageNewNodeFlags</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="301" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3959" bodyend="4052"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaf3b6657eb67edd06d7661efdd5eef570" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int locallyRefineEdgeMesh</definition>
        <argsstring>(MultilevelMesh &amp;multilevelMesh, int *elementTagArray)</argsstring>
        <name>locallyRefineEdgeMesh</name>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementTagArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="302" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="5799" bodyend="5948"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga336f7c853f7c2889c3d57a0702ada9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int locallyRefineTriangleMesh</definition>
        <argsstring>(MultilevelMesh &amp;multilevelMesh, int *elementTagArray)</argsstring>
        <name>locallyRefineTriangleMesh</name>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementTagArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="304" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="5949" bodyend="6126"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaed3a370167525bf808917033346a7aa8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int locallyRefineTriangleMesh_4T</definition>
        <argsstring>(MultilevelMesh &amp;multilevelMesh, int *elementTagArray)</argsstring>
        <name>locallyRefineTriangleMesh_4T</name>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementTagArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="306" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="6667" bodyend="6842"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaa0e013b44f0b757455a50e61f5e19db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int locallyRefineTriangleMesh_redGreen</definition>
        <argsstring>(MultilevelMesh &amp;multilevelMesh, int *elementTagArray)</argsstring>
        <name>locallyRefineTriangleMesh_redGreen</name>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementTagArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="308" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="6156" bodyend="6666"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga1837479558ffb93432b410f8eaf25b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setNewestNodeBasesToLongestEdge</definition>
        <argsstring>(MultilevelMesh &amp;multilevelMesh)</argsstring>
        <name>setNewestNodeBasesToLongestEdge</name>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="310" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="6128" bodyend="6154"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga399d399e9ab8c6742aff3864d7e882a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularRectangularToTriangularMeshElements</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, Mesh &amp;mesh, int triangleFlag)</argsstring>
        <name>regularRectangularToTriangularMeshElements</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>triangleFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="312" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="88" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga9b1a55a88d7b2238b2248a84f9ed5271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularRectangularToTriangularMeshNodes</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const double &amp;Lx, const double &amp;Ly, Mesh &amp;mesh)</argsstring>
        <name>regularRectangularToTriangularMeshNodes</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="313" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="166" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaeba813e2207db2b208be1bd5715a6f8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularRectangularToTriangularElementBoundaryMaterials</definition>
        <argsstring>(const double &amp;Lx, const double &amp;Ly, Mesh &amp;mesh)</argsstring>
        <name>regularRectangularToTriangularElementBoundaryMaterials</name>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="314" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="139" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gac8f50ad63a717bf616c78b8390e7744e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int globallyRefineTriangularMesh</definition>
        <argsstring>(const int &amp;nLevels, Mesh &amp;mesh, MultilevelMesh &amp;multilevelMesh, bool averageNewNodeFlags=false)</argsstring>
        <name>globallyRefineTriangularMesh</name>
        <param>
          <type>const int &amp;</type>
          <declname>nLevels</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>averageNewNodeFlags</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="315" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4054" bodyend="4177"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga554392b1260b82e3eaee5a4e02574f5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularQuadrilateralMeshElements</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, Mesh &amp;mesh)</argsstring>
        <name>regularQuadrilateralMeshElements</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="317" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="471" bodyend="497"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaadf7742fb4b66683f8a0e2788d297397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularQuadrilateralMeshElementBoundaryMaterials</definition>
        <argsstring>(const double &amp;Lx, const double &amp;Ly, Mesh &amp;mesh)</argsstring>
        <name>regularQuadrilateralMeshElementBoundaryMaterials</name>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="318" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="326" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gad4add441d1af1fc56b191bb96304fe3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int globallyRefineQuadrilateralMesh</definition>
        <argsstring>(const int &amp;nLevels, Mesh &amp;mesh, MultilevelMesh &amp;multilevelMesh, bool averageNewNodeFlags=false)</argsstring>
        <name>globallyRefineQuadrilateralMesh</name>
        <param>
          <type>const int &amp;</type>
          <declname>nLevels</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>averageNewNodeFlags</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="319" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4179" bodyend="4196"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga73b4c6525541ecae499d2dc09b7f001b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularMeshNodes</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const int &amp;nz, const double &amp;Lx, const double &amp;Ly, const double &amp;Lz, Mesh &amp;mesh)</argsstring>
        <name>regularMeshNodes</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nz</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="322" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="331" bodyend="376"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga44e77982690cf63f701bde2b8357bef9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularMeshNodes2D</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const double &amp;Lx, const double &amp;Ly, Mesh &amp;mesh)</argsstring>
        <name>regularMeshNodes2D</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="323" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="378" bodyend="414"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga372d10f8d5a2382ce7b71be9b0db2fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularHexahedralMeshElementBoundaryMaterials</definition>
        <argsstring>(const double &amp;Lx, const double &amp;Ly, const double &amp;Lz, Mesh &amp;mesh)</argsstring>
        <name>regularHexahedralMeshElementBoundaryMaterials</name>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="324" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="276" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga5fb49b127603edd31e6aab3b6e84f633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularHexahedralToTetrahedralMeshNodes</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const int &amp;nz, const double &amp;Lx, const double &amp;Ly, const double &amp;Lz, Mesh &amp;mesh)</argsstring>
        <name>regularHexahedralToTetrahedralMeshNodes</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nz</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="325" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="416" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga867bc8cc7de1299c306dcb28bf401aa2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularHexahedralToTetrahedralMeshElements</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const int &amp;nz, Mesh &amp;mesh)</argsstring>
        <name>regularHexahedralToTetrahedralMeshElements</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="326" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="197" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga02ba112acd0bc3cff45d7c317ba9d635" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularHexahedralToTetrahedralElementBoundaryMaterials</definition>
        <argsstring>(const double &amp;Lx, const double &amp;Ly, const double &amp;Lz, Mesh &amp;mesh)</argsstring>
        <name>regularHexahedralToTetrahedralElementBoundaryMaterials</name>
        <param>
          <type>const double &amp;</type>
          <declname>Lx</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Ly</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>Lz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="327" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="232" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gae1179b86882c92ec58cc40b61010d0e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularHexahedralMeshElements</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const int &amp;nz, const int &amp;px, const int &amp;py, const int &amp;pz, Mesh &amp;mesh)</argsstring>
        <name>regularHexahedralMeshElements</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nz</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>px</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>py</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>pz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="328" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="429" bodyend="469"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gae507f3c0e3b76aae899ebba0b0382653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int regularNURBSMeshElements</definition>
        <argsstring>(const int &amp;nx, const int &amp;ny, const int &amp;nz, const int &amp;px, const int &amp;py, const int &amp;pz, Mesh &amp;mesh)</argsstring>
        <name>regularNURBSMeshElements</name>
        <param>
          <type>const int &amp;</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nz</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>px</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>py</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>pz</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="329" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="499" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga68488c00a1abeb741d57a6e416c82a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int globallyRefineHexahedralMesh</definition>
        <argsstring>(const int &amp;nLevels, Mesh &amp;mesh, MultilevelMesh &amp;multilevelMesh, bool averageNewNodeFlags=false)</argsstring>
        <name>globallyRefineHexahedralMesh</name>
        <param>
          <type>const int &amp;</type>
          <declname>nLevels</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>averageNewNodeFlags</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="330" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4483" bodyend="4500"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gab4d638c87ade6bd196a81384af108e8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int globallyRefineTetrahedralMesh</definition>
        <argsstring>(const int &amp;nLevels, Mesh &amp;mesh, MultilevelMesh &amp;multilevelMesh, bool averageNewNodeFlags=false)</argsstring>
        <name>globallyRefineTetrahedralMesh</name>
        <param>
          <type>const int &amp;</type>
          <declname>nLevels</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref> &amp;</type>
          <declname>multilevelMesh</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>averageNewNodeFlags</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="332" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4198" bodyend="4481"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga0ca99f07f47c3775a54c126aa5b1cace" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArray_edge</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArray_edge</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="334" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="580" bodyend="736"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga99583103d5f83c1d3b073b917c782d69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArray_triangle</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArray_triangle</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="335" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="738" bodyend="905"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga17e8af5e2ec0c13e9c86f5e12eb4d4b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArray_quadrilateral</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArray_quadrilateral</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="336" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="907" bodyend="1074"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga82076ed1124688014a6bc263ac24d3ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArray_tetrahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArray_tetrahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="337" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="1076" bodyend="1249"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga4751b505347ed744aa5495e1e43bd2bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArray_hexahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArray_hexahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="338" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="1251" bodyend="1456"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga2aea69a4233a90a4d2e7914ce6fdeb59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArray_NURBS</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArray_NURBS</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="339" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="1459" bodyend="1679"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gabf2819715294cc6d161fdb1a30d3f6ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_edge</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_edge</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="341" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="1887" bodyend="2046"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaa1b05cb9c4d42c1d435e36a21020e46f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_triangle</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_triangle</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="342" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="2048" bodyend="2220"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga12a7f52deabde430ed8174fc71e5b652" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_quadrilateral</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_quadrilateral</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="343" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="2222" bodyend="2393"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga56a12610c9dfc7c51ed3e6d633f375e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_tetrahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_tetrahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="344" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="2395" bodyend="2571"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga71bd5b1f46b653a7be9c65b2af9499b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_edge</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_edge</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="346" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="2575" bodyend="2728"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga8fca2274c01965e94bc8855f7391332a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_triangle</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_triangle</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="347" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="2730" bodyend="2903"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaa187306a2346aeb53640156d1e1890fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_quadrilateral</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_quadrilateral</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="348" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="2905" bodyend="3058"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaf0f4c6fcb9b418b4096b9fe1a62329d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_tetrahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_tetrahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="349" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3060" bodyend="3237"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga11c306c06b8fe371531389373dac48d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_hexahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_hexahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="350" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3239" bodyend="3426"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga928d08a58ffb5a778e738d6847115f47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_NURBS</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_NURBS</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="351" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="1681" bodyend="1885"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga273d705930d0ad0775498d0be44c739d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int writeElements</definition>
        <argsstring>(std::ostream &amp;meshFile, const Mesh &amp;mesh)</argsstring>
        <name>writeElements</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>meshFile</declname>
        </param>
        <param>
          <type>const <ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="353" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4764" bodyend="4805"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga093904f19cdbf5c7f0076e6a6c56081e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int writeNodes</definition>
        <argsstring>(std::ostream &amp;meshFile, const Mesh &amp;mesh)</argsstring>
        <name>writeNodes</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>meshFile</declname>
        </param>
        <param>
          <type>const <ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="354" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4752" bodyend="4762"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gac9bf9640ca027ca766ace6272e16400c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readElements</definition>
        <argsstring>(std::istream &amp;meshFile, Mesh &amp;mesh)</argsstring>
        <name>readElements</name>
        <param>
          <type>std::istream &amp;</type>
          <declname>meshFile</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="355" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4688" bodyend="4750"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gad97db4b6e238c242afedd5fa8b914e3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateGeometricInfo_tetrahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>allocateGeometricInfo_tetrahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="357" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3469" bodyend="3479"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga1ad1cf0d175b08dec8e1ed161e065295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateGeometricInfo_triangle</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>allocateGeometricInfo_triangle</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="358" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3688" bodyend="3698"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga8b4def6a8ea5675441b05b5a7061713b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateGeometricInfo_edge</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>allocateGeometricInfo_edge</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="359" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3858" bodyend="3868"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga7a5874cc209a0c576ed8391e77111a9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateGeometricInfo_quadrilateral</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>allocateGeometricInfo_quadrilateral</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="360" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3788" bodyend="3796"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga0d4a836f32fdf0cacb6250884aafe10b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateGeometricInfo_hexahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>allocateGeometricInfo_hexahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="361" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3583" bodyend="3593"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gad36c6af3da3b8edd3b32f5dd8f7b5f18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateGeometricInfo_NURBS</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>allocateGeometricInfo_NURBS</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="362" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3675" bodyend="3679"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaff191b3e806b335cd6d0916218132c96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeGeometricInfo_tetrahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>computeGeometricInfo_tetrahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="364" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3481" bodyend="3573"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaad90ffdf6bb84d92b74bf824f8662a4b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeGeometricInfo_triangle</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>computeGeometricInfo_triangle</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="365" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3700" bodyend="3786"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga88041ad8d6afe29f23c6e30837b777db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeGeometricInfo_edge</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>computeGeometricInfo_edge</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="366" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3870" bodyend="3937"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gafdde7ba7852d7a8a4da1e3dc6bf91b36" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeGeometricInfo_hexahedron</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>computeGeometricInfo_hexahedron</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="367" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3595" bodyend="3673"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaad2c7d05554f0bb51a7ccfb6855baeb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeGeometricInfo_quadrilateral</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>computeGeometricInfo_quadrilateral</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="368" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3798" bodyend="3856"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga0f4f89b6fc203f8443bc671f2ce24c2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int computeGeometricInfo_NURBS</definition>
        <argsstring>(Mesh &amp;mesh)</argsstring>
        <name>computeGeometricInfo_NURBS</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="369" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3681" bodyend="3685"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga8c801b37609c0f42a31d52ad7ad52dca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int assignElementBoundaryMaterialTypesFromParent</definition>
        <argsstring>(Mesh &amp;parentMesh, Mesh &amp;childMesh, const int *levelElementParentsArray, const int &amp;nSpace_global)</argsstring>
        <name>assignElementBoundaryMaterialTypesFromParent</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>parentMesh</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>childMesh</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>levelElementParentsArray</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>nSpace_global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="371" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4502" bodyend="4685"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gac6cbf9a86158a88ef7393e0bfc997afd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int allocateNodeAndElementNodeDataStructures</definition>
        <argsstring>(Mesh &amp;mesh, int nElements_global, int nNodes_global, int nNodes_element)</argsstring>
        <name>allocateNodeAndElementNodeDataStructures</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nNodes_global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nNodes_element</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="373" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="3939" bodyend="3956"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gafb3cbd692f5aaeee1411ca2776b69db9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setFromTriangleElements</definition>
        <argsstring>(triangulateio *trimesh, Mesh &amp;mesh, int base)</argsstring>
        <name>setFromTriangleElements</name>
        <param>
          <type>triangulateio *</type>
          <declname>trimesh</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="377" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4808" bodyend="4840"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga5fdf05986fe93c06aad3ca6cdcadcb4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int setFromTriangleNodes</definition>
        <argsstring>(triangulateio *trimesh, Mesh &amp;mesh, int base)</argsstring>
        <name>setFromTriangleNodes</name>
        <param>
          <type>triangulateio *</type>
          <declname>trimesh</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="378" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4842" bodyend="4878"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gab1c1f7cc1d5b1041de2941eb89df59a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readTriangleMesh</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int base)</argsstring>
        <name>readTriangleMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="379" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4915" bodyend="4973"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga2eb6d5e2b747bef66fe94c02182a6f62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readTriangleElementBoundaryMaterialTypes</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int base)</argsstring>
        <name>readTriangleElementBoundaryMaterialTypes</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="380" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="5005" bodyend="5061"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga08c052ee267f328592995e357a2f023f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int writeTriangleMesh</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int base)</argsstring>
        <name>writeTriangleMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="381" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4975" bodyend="5003"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga1e23f5a53d60b3a60f8a62d641216a07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readTetgenMesh</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int base)</argsstring>
        <name>readTetgenMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="382" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="5063" bodyend="5121"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaf88d232634fffcb9c0ca4d89636d8e1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readTetgenElementBoundaryMaterialTypes</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int base)</argsstring>
        <name>readTetgenElementBoundaryMaterialTypes</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="383" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="5122" bodyend="5398"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gab46b1f709ad5c07ad957ab8366c84838" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int writeTetgenMesh</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int base)</argsstring>
        <name>writeTetgenMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="384" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="5400" bodyend="5433"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga226ca058f8a8bb3741f729b4bbd68467" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read3DM</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int indexBase)</argsstring>
        <name>read3DM</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="385" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="5435" bodyend="5517"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga5585bb85360aa0ce9512f685661094ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int read2DM</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int indexBase)</argsstring>
        <name>read2DM</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="386" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="5519" bodyend="5600"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gac9c66ee0f6dbc487ee09b2b1fc0a0242" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readHex</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int indexBase)</argsstring>
        <name>readHex</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="387" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="5602" bodyend="5675"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga75f5fa8f64804d57c1e5742f67756106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int readBC</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int indexBase)</argsstring>
        <name>readBC</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="388" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="5677" bodyend="5714"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gad89a88a5a0b744cb8809b15bb55b28f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int write3dmMesh</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int base)</argsstring>
        <name>write3dmMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="389" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="5715" bodyend="5734"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga3ea5e89286c9123ed49826f60722de05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int write2dmMesh</definition>
        <argsstring>(Mesh &amp;mesh, const char *filebase, int base)</argsstring>
        <name>write2dmMesh</name>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="390" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="5735" bodyend="5754"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gae23507317ccd53c375b133ecd3b483c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int copyElementBoundaryMaterialTypesFromTriangle</definition>
        <argsstring>(triangulateio *trimesh, Mesh &amp;mesh, int base)</argsstring>
        <name>copyElementBoundaryMaterialTypesFromTriangle</name>
        <param>
          <type>triangulateio *</type>
          <declname>trimesh</declname>
        </param>
        <param>
          <type><ref refid="struct_mesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>base</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="391" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="4880" bodyend="4913"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaf267e35a377acc7186fd2bf6ceb77fe1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>nNodes</declname>
            <defname>nNodes</defname>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const NodeTuple&lt; nNodes &gt; &amp;left, const NodeTuple&lt; nNodes &gt; &amp;right)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_node_tuple" kindref="compound">NodeTuple</ref>&lt; nNodes &gt; &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="class_node_tuple" kindref="compound">NodeTuple</ref>&lt; nNodes &gt; &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="431" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="431" bodyend="441"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void midpoint</definition>
        <argsstring>(const double *left, const double *right, Node &amp;midpoint)</argsstring>
        <name>midpoint</name>
        <param>
          <type>const double *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>right</declname>
        </param>
        <param>
          <type><ref refid="class_node" kindref="compound">Node</ref> &amp;</type>
          <declname>midpoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="451" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="451" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gabd444116e6f1d057ac96e61c4020920d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double edgeLength</definition>
        <argsstring>(const Node &amp;left, const Node &amp;right)</argsstring>
        <name>edgeLength</name>
        <param>
          <type>const <ref refid="class_node" kindref="compound">Node</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="class_node" kindref="compound">Node</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="458" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="458" bodyend="463"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gad28ab11ba6f458a55f43945086b06a41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double edgeLengthFromNodeNumbers</definition>
        <argsstring>(double *nodeArray, const int &amp;left, const int &amp;right)</argsstring>
        <name>edgeLengthFromNodeNumbers</name>
        <param>
          <type>double *</type>
          <declname>nodeArray</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const int &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="465" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="465" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga51096f2bf3ee6239c1765c3f66b337b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool operator&lt;</definition>
        <argsstring>(const Node &amp;left, const Node &amp;right)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="class_node" kindref="compound">Node</ref> &amp;</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="class_node" kindref="compound">Node</ref> &amp;</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="472" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="472" bodyend="487"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga402d2f87bc6f94428e66b13a8eaa5f31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int newEdge</definition>
        <argsstring>(int eN, int *nodes, int n0, int n1)</argsstring>
        <name>newEdge</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="497" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="497" bodyend="503"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int newTriangle</definition>
        <argsstring>(int eN, int *nodes, int n0, int n1, int n2)</argsstring>
        <name>newTriangle</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="504" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="504" bodyend="511"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int newTetrahedron</definition>
        <argsstring>(int eN, int *nodes, int n0, int n1, int n2, int n3)</argsstring>
        <name>newTetrahedron</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="512" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="512" bodyend="520"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga4dce22164025e81bd9577bdd7a52f005" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int newQuadrilateral</definition>
        <argsstring>(int eN, int *nodes, int n0, int n1, int n2, int n3)</argsstring>
        <name>newQuadrilateral</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="522" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="522" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga93e498155737b8aca6e6d858e4958db1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int newHexahedron</definition>
        <argsstring>(int eN, int *nodes, int n0, int n1, int n2, int n3, int n4, int n5, int n6, int n7)</argsstring>
        <name>newHexahedron</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n0</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n1</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n3</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n4</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n5</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n6</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="532" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.h" bodystart="532" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gaa53580028be0d07c170f9f826dac1c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool newestNodeBisect</definition>
        <argsstring>(int eN, int &amp;nElements_global, int &amp;nNodes_global, std::vector&lt; double &gt; &amp;nodeArray, std::vector&lt; int &gt; &amp;elementNodesArray, std::vector&lt; int &gt; &amp;elementNeighborsArray, std::vector&lt; std::list&lt; int &gt; &gt; &amp;childrenList, std::vector&lt; int &gt; &amp;elementParentsArray, std::vector&lt; int &gt; &amp;bases, std::vector&lt; bool &gt; &amp;refined)</argsstring>
        <name>newestNodeBisect</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nNodes_global</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; double &gt; &amp;</type>
          <declname>nodeArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementNeighborsArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; std::list&lt; int &gt; &gt; &amp;</type>
          <declname>childrenList</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>elementParentsArray</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>bases</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; bool &gt; &amp;</type>
          <declname>refined</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="547" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="6845" bodyend="7221"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga8c0a09d2570b320080038656fb2efba6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool add4TnodesForRefinement2d</definition>
        <argsstring>(int eN, int &amp;nNodes_global, std::vector&lt; bool &gt; &amp;refined, std::vector&lt; int &gt; &amp;edgeMidNodesArray, const int *elementNodesArray, const int *elementBoundariesArray, const int *elementNeighborsArray, const double *nodeArray)</argsstring>
        <name>add4TnodesForRefinement2d</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nNodes_global</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; bool &gt; &amp;</type>
          <declname>refined</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>edgeMidNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundariesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNeighborsArray</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="559" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="7223" bodyend="7279"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga5dce5689b08b93d8ae8d051e70e96391" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool add4TnodesForConformity2d</definition>
        <argsstring>(int eN, int ebN_longest, int ebN_neig, int eN_neig, int &amp;nNodes_global, std::vector&lt; bool &gt; &amp;refined, std::vector&lt; int &gt; &amp;edgeMidNodesArray, const int *elementNodesArray, const int *elementBoundariesArray, const int *elementNeighborsArray, const double *nodeArray)</argsstring>
        <name>add4TnodesForConformity2d</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ebN_longest</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ebN_neig</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eN_neig</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nNodes_global</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; bool &gt; &amp;</type>
          <declname>refined</declname>
        </param>
        <param>
          <type><ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>edgeMidNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundariesArray</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNeighborsArray</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="568" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="7281" bodyend="7351"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1ga5a2a76e1649bbe26a65e708b39e38bf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int findLocalLongestEdge2d</definition>
        <argsstring>(int eN, const int *elementNodesArray, const double *nodeArray)</argsstring>
        <name>findLocalLongestEdge2d</name>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNodesArray</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="578" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="7352" bodyend="7378"/>
      </memberdef>
      <memberdef kind="function" id="group__mesh_1gac307634f2b836753119cb91562215cd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool subdivideTriangle4T</definition>
        <argsstring>(int eN_parent, int &amp;eN_new, int *elementParentsArray, int *elementChildrenOffsets, int *elementChildrenArray, int *elementNodesArray_child, const std::vector&lt; int &gt; &amp;edgeMidNodesArray, const std::vector&lt; bool &gt; &amp;refined, const int *elementNodesArray_parent, const int *elementBoundariesArray_parent, const double *nodeArray_parent)</argsstring>
        <name>subdivideTriangle4T</name>
        <param>
          <type>int</type>
          <declname>eN_parent</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>eN_new</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementParentsArray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementChildrenOffsets</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementChildrenArray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementNodesArray_child</declname>
        </param>
        <param>
          <type>const <ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; int &gt; &amp;</type>
          <declname>edgeMidNodesArray</declname>
        </param>
        <param>
          <type>const <ref refid="jf_8h_1ad6a1294cda25bf40114e0b9a56cd0445" kindref="member">std::vector</ref>&lt; bool &gt; &amp;</type>
          <declname>refined</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNodesArray_parent</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundariesArray_parent</declname>
        </param>
        <param>
          <type>const double *</type>
          <declname>nodeArray_parent</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/cekees/proteus/proteus/mesh.h" line="582" column="1" bodyfile="/home/cekees/proteus/proteus/mesh.cpp" bodystart="7380" bodyend="7683"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>#include &lt;mach/mach_time.h&gt; </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>MESH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MESH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;algorithm&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;map&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iomanip&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor">#include<sp/>&lt;cassert&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight></codeline>
<codeline lineno="22"><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>simple<sp/>array<sp/>based<sp/>interface<sp/>to<sp/>meshes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//forward<sp/>declaration</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="struct_mesh" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_mesh" kindref="compound">Mesh</ref></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>you<sp/>change<sp/>this<sp/>make<sp/>sure<sp/>to<sp/>update<sp/><sp/>initialize<sp/>and<sp/>delete<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>,</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh_1a6f5879bf09d44edbad753f9f39616bf7" kindref="member">max_nElements_node</ref>,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh_1aa4f5f67da601632a68e00c0aea778c14" kindref="member">max_nNodeNeighbors_node</ref>;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,<sp/></highlight><highlight class="comment">//the<sp/>nodes<sp/>numbers<sp/>for<sp/>each<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>element<sp/>numbers<sp/>for<sp/>each<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//offsets<sp/>for<sp/>indexing<sp/>into<sp/>nodeElementsArray,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>elment<sp/>numbers<sp/>for<sp/>each<sp/>neighboring<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>,<sp/><sp/><sp/></highlight><highlight class="comment">//the<sp/>global<sp/>elementBoundary<sp/>numbers<sp/>for<sp/>each<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>,<sp/></highlight><highlight class="comment">//the<sp/>element<sp/>numbers<sp/>for<sp/>each<sp/>element<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>,<sp/></highlight><highlight class="comment">//the<sp/>local<sp/>element<sp/>boundary<sp/>number<sp/>for<sp/>the<sp/>left<sp/>and<sp/>right<sp/>neighbors<sp/>of<sp/>the<sp/>element<sp/>boundary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>,<sp/></highlight><highlight class="comment">//the<sp/>element<sp/>boundary<sp/>numbers<sp/>of<sp/>the<sp/>interior<sp/>element<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>,<sp/></highlight><highlight class="comment">//the<sp/>element<sp/>boundary<sp/>numbers<sp/>of<sp/>the<sp/>exterior<sp/>element<sp/>boundaries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ids<sp/>for<sp/>classifying<sp/>elements,element<sp/>boundaries,nodes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>,</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NURBS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="struct_mesh_1a0523657cb6cfdce7d0da88820680794c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a0523657cb6cfdce7d0da88820680794c" kindref="member">elementIJK</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cartesian<sp/>indices<sp/>of<sp/>element<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="struct_mesh_1a793f466f5106361d2dec620afdb58db3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="struct_mesh_1a793f466f5106361d2dec620afdb58db3" kindref="member">weights</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NURBS<sp/>weight</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="struct_mesh_1a547f0b4951a4e4000b1df74961accc34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="struct_mesh_1ab2c4fedd881b06d39fb00a716cbd28a9" kindref="member">U_KNOT</ref>,*<ref refid="struct_mesh_1ae691477076082597d4ca0e6dbd603f93" kindref="member">V_KNOT</ref>,*<ref refid="struct_mesh_1a547f0b4951a4e4000b1df74961accc34" kindref="member">W_KNOT</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Knot<sp/>vectors<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="struct_mesh_1aeda5d14f9cec8ccea61a4c1af632caf5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_mesh_1a05eb17a6df74f735b305bbe456d1d84f" kindref="member">nx</ref>,<ref refid="struct_mesh_1ad94801e2c9bd9c7e66deefad68f5707d" kindref="member">ny</ref>,<ref refid="struct_mesh_1aeda5d14f9cec8ccea61a4c1af632caf5" kindref="member">nz</ref>;</highlight></codeline>
<codeline lineno="64" refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>,<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>,<ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NURBS<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,*<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>,*<ref refid="struct_mesh_1abf9b852488d1bcee92c20efddced5ca4" kindref="member">elementInnerDiametersArray</ref>,*<ref refid="struct_mesh_1a7ce07e95c74c63e9548357c54492dec7" kindref="member">elementBoundaryDiametersArray</ref>;</highlight></codeline>
<codeline lineno="68" refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>,<sp/>*<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>;</highlight></codeline>
<codeline lineno="69" refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>,*<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>;</highlight></codeline>
<codeline lineno="70" refid="struct_mesh_1a77b3cbcd0ac8b21666b5319f36376ab1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="struct_mesh_1afe5d77b8a3696af225b8a9fa627bac39" kindref="member">h</ref>,<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref>,<ref refid="struct_mesh_1a75885c0e7c16f82e7747a58bc5277a56" kindref="member">sigmaMax</ref>,<ref refid="struct_mesh_1a77b3cbcd0ac8b21666b5319f36376ab1" kindref="member">volume</ref>;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>adaptive<sp/>mesh<sp/>refinement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/><ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//for<sp/>parallel<sp/>computations</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="struct_mesh_1a9c5445d99949e9311ff67a900cf40a3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="struct_mesh_1a6d8c1e8a3743ccf2b9ac61d79d2aed42" kindref="member">elementOffsets_subdomain_owned</ref>,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a9a62f7c5208b688193ad82dfb8cc3b4c" kindref="member">elementNumbering_subdomain2global</ref>,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a9c5445d99949e9311ff67a900cf40a3a" kindref="member">nodeOffsets_subdomain_owned</ref>,</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a26d2763692e6a60ebdd57fe5b985c569" kindref="member">nodeNumbering_subdomain2global</ref>,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a5806b14e322aa308b7b2332137195d0e" kindref="member">elementBoundaryOffsets_subdomain_owned</ref>,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a18cf197b92cbab062e2a294849766cf1" kindref="member">elementBoundaryNumbering_subdomain2global</ref>,</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1aad6fb618bfc1b53f688723ae41b0ce3f" kindref="member">edgeOffsets_subdomain_owned</ref>,</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*<ref refid="struct_mesh_1a087e6d20726837e45bd1caaf1f4bd404" kindref="member">edgeNumbering_subdomain2global</ref>;</highlight></codeline>
<codeline lineno="84" refid="struct_mesh_1abb9c745014c9e5efdc6f9545592b8d9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>*<sp/><ref refid="struct_mesh_1abb9c745014c9e5efdc6f9545592b8d9e" kindref="member">subdomainp</ref>;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="87" refid="group__mesh_1ga509a95e0124b5fdd0a7cd09574cb5e30" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga509a95e0124b5fdd0a7cd09574cb5e30" kindref="member">initializeMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>=0;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>=0;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>=0;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>=0;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>=0;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>=0;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>=0;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>=0;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6f5879bf09d44edbad753f9f39616bf7" kindref="member">max_nElements_node</ref>=0;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>=0;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>=NULL;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>=NULL;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>=NULL;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>=NULL;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>=NULL;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>=NULL;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>=NULL;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>=NULL;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>=NULL;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>=NULL;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>=NULL;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>=NULL;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>=NULL;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>=NULL;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref>=NULL;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6d8c1e8a3743ccf2b9ac61d79d2aed42" kindref="member">elementOffsets_subdomain_owned</ref>=NULL;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9a62f7c5208b688193ad82dfb8cc3b4c" kindref="member">elementNumbering_subdomain2global</ref>=NULL;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9c5445d99949e9311ff67a900cf40a3a" kindref="member">nodeOffsets_subdomain_owned</ref>=NULL;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a26d2763692e6a60ebdd57fe5b985c569" kindref="member">nodeNumbering_subdomain2global</ref>=NULL;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a5806b14e322aa308b7b2332137195d0e" kindref="member">elementBoundaryOffsets_subdomain_owned</ref>=NULL;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a18cf197b92cbab062e2a294849766cf1" kindref="member">elementBoundaryNumbering_subdomain2global</ref>=NULL;</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aad6fb618bfc1b53f688723ae41b0ce3f" kindref="member">edgeOffsets_subdomain_owned</ref>=NULL;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a087e6d20726837e45bd1caaf1f4bd404" kindref="member">edgeNumbering_subdomain2global</ref>=NULL;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NURBS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a05eb17a6df74f735b305bbe456d1d84f" kindref="member">nx</ref>=mesh.<ref refid="struct_mesh_1ad94801e2c9bd9c7e66deefad68f5707d" kindref="member">ny</ref>=mesh.<ref refid="struct_mesh_1aeda5d14f9cec8ccea61a4c1af632caf5" kindref="member">nz</ref>=0;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>=mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>=mesh.<ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref>=0;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0523657cb6cfdce7d0da88820680794c" kindref="member">elementIJK</ref>=NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a793f466f5106361d2dec620afdb58db3" kindref="member">weights</ref>=NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab2c4fedd881b06d39fb00a716cbd28a9" kindref="member">U_KNOT</ref>=NULL;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae691477076082597d4ca0e6dbd603f93" kindref="member">V_KNOT</ref>=NULL;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a547f0b4951a4e4000b1df74961accc34" kindref="member">W_KNOT</ref>=NULL;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NURBS<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//geometry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>=NULL;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1afe5d77b8a3696af225b8a9fa627bac39" kindref="member">h</ref>=0.0;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ad6461ab438d3ec71a40cd15799213346" kindref="member">hMin</ref>=0.0;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75885c0e7c16f82e7747a58bc5277a56" kindref="member">sigmaMax</ref>=0.0;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a77b3cbcd0ac8b21666b5319f36376ab1" kindref="member">volume</ref>=0.0;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6d8c1e8a3743ccf2b9ac61d79d2aed42" kindref="member">elementOffsets_subdomain_owned</ref>=NULL;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9a62f7c5208b688193ad82dfb8cc3b4c" kindref="member">elementNumbering_subdomain2global</ref>=NULL;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9c5445d99949e9311ff67a900cf40a3a" kindref="member">nodeOffsets_subdomain_owned</ref>=NULL;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a26d2763692e6a60ebdd57fe5b985c569" kindref="member">nodeNumbering_subdomain2global</ref>=NULL;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a5806b14e322aa308b7b2332137195d0e" kindref="member">elementBoundaryOffsets_subdomain_owned</ref>=NULL;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a18cf197b92cbab062e2a294849766cf1" kindref="member">elementBoundaryNumbering_subdomain2global</ref>=NULL;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aad6fb618bfc1b53f688723ae41b0ce3f" kindref="member">edgeOffsets_subdomain_owned</ref>=NULL;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a087e6d20726837e45bd1caaf1f4bd404" kindref="member">edgeNumbering_subdomain2global</ref>=NULL;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abb9c745014c9e5efdc6f9545592b8d9e" kindref="member">subdomainp</ref>=NULL;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="group__mesh_1ga137e5d0abd63a35938eb82b9f6cc4a62" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga137e5d0abd63a35938eb82b9f6cc4a62" kindref="member">deleteMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>=0;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>=0;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>=0;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a23828f68c8378cc9cba4f12da8efab1c" kindref="member">nNodes_elementBoundary</ref>=0;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a8bef0eb2839ee8e5e520471073ccc893" kindref="member">nElementBoundaries_element</ref>=0;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae88b87eca5860ae8f0faf5ddf8edd55e" kindref="member">nElementBoundaries_global</ref>=0;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac4c81e5919b922684341f2e9f4fe1054" kindref="member">nInteriorElementBoundaries_global</ref>=0;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a82b53fc6597fe4f29edddeb858bd716d" kindref="member">nExteriorElementBoundaries_global</ref>=0;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6f5879bf09d44edbad753f9f39616bf7" kindref="member">max_nElements_node</ref>=0;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a1ab38b6ade39987726268e990e3e24e7" kindref="member">nEdges_global</ref>=0;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//arrays</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>;</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a33db44f726dd430707fd7c93d1a5c592" kindref="member">elementDiametersArray</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1ae390b049ea87b78184f8d094869949cb" kindref="member">nodeDiametersArray</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a6052bace6fa51aa24de5835ef0fb7e17" kindref="member">nodeSupportArray</ref>;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1acb8395aa478d9beb2983e921a156d4b6" kindref="member">newestNodeBases</ref>;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NURBS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a05eb17a6df74f735b305bbe456d1d84f" kindref="member">nx</ref>=mesh.<ref refid="struct_mesh_1ad94801e2c9bd9c7e66deefad68f5707d" kindref="member">ny</ref>=mesh.<ref refid="struct_mesh_1aeda5d14f9cec8ccea61a4c1af632caf5" kindref="member">nz</ref>=0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>=mesh.<ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>=mesh.<ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref>=0;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a0523657cb6cfdce7d0da88820680794c" kindref="member">elementIJK</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a0523657cb6cfdce7d0da88820680794c" kindref="member">elementIJK</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a793f466f5106361d2dec620afdb58db3" kindref="member">weights</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a793f466f5106361d2dec620afdb58db3" kindref="member">weights</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1ab2c4fedd881b06d39fb00a716cbd28a9" kindref="member">U_KNOT</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1ab2c4fedd881b06d39fb00a716cbd28a9" kindref="member">U_KNOT</ref>;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1ae691477076082597d4ca0e6dbd603f93" kindref="member">V_KNOT</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1ae691477076082597d4ca0e6dbd603f93" kindref="member">V_KNOT</ref>;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a547f0b4951a4e4000b1df74961accc34" kindref="member">W_KNOT</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a547f0b4951a4e4000b1df74961accc34" kindref="member">W_KNOT</ref>;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NURBS<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a6d8c1e8a3743ccf2b9ac61d79d2aed42" kindref="member">elementOffsets_subdomain_owned</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a6d8c1e8a3743ccf2b9ac61d79d2aed42" kindref="member">elementOffsets_subdomain_owned</ref>;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a9a62f7c5208b688193ad82dfb8cc3b4c" kindref="member">elementNumbering_subdomain2global</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a9a62f7c5208b688193ad82dfb8cc3b4c" kindref="member">elementNumbering_subdomain2global</ref>;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a9c5445d99949e9311ff67a900cf40a3a" kindref="member">nodeOffsets_subdomain_owned</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a9c5445d99949e9311ff67a900cf40a3a" kindref="member">nodeOffsets_subdomain_owned</ref>;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a26d2763692e6a60ebdd57fe5b985c569" kindref="member">nodeNumbering_subdomain2global</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a26d2763692e6a60ebdd57fe5b985c569" kindref="member">nodeNumbering_subdomain2global</ref>;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a5806b14e322aa308b7b2332137195d0e" kindref="member">elementBoundaryOffsets_subdomain_owned</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a5806b14e322aa308b7b2332137195d0e" kindref="member">elementBoundaryOffsets_subdomain_owned</ref>;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a18cf197b92cbab062e2a294849766cf1" kindref="member">elementBoundaryNumbering_subdomain2global</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a18cf197b92cbab062e2a294849766cf1" kindref="member">elementBoundaryNumbering_subdomain2global</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1aad6fb618bfc1b53f688723ae41b0ce3f" kindref="member">edgeOffsets_subdomain_owned</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1aad6fb618bfc1b53f688723ae41b0ce3f" kindref="member">edgeOffsets_subdomain_owned</ref>;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(mesh.<ref refid="struct_mesh_1a087e6d20726837e45bd1caaf1f4bd404" kindref="member">edgeNumbering_subdomain2global</ref>!=NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>mesh.<ref refid="struct_mesh_1a087e6d20726837e45bd1caaf1f4bd404" kindref="member">edgeNumbering_subdomain2global</ref>;<sp/></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a60c946aca5fb10c00847f2595024f645" kindref="member">nodeElementsArray</ref>=NULL;</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a50cba320e431088d67f5567d80308a05" kindref="member">nodeElementOffsets</ref>=NULL;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>=NULL;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a005d4b8e1dde115eea69745da68ce51e" kindref="member">elementBoundaryNodesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a42b5669b961653b62ad86094940ff599" kindref="member">elementBoundaryElementsArray</ref>=NULL;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80fee2f34a4f1ce046b8d238ca6eb44d" kindref="member">elementBoundaryLocalElementBoundariesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ada24a4a97b51d0796ef5d7041a538baa" kindref="member">interiorElementBoundariesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a80b82e649bdf89cfb40a4d63128dfe8f" kindref="member">exteriorElementBoundariesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aabe8196d403a4e08ab8ae82add6c95ad" kindref="member">edgeNodesArray</ref>=NULL;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a74dac6068c1cd0a5224d70dff687541f" kindref="member">nodeStarArray</ref>=NULL;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0d6da5259c422d0a0e7725f7f4194fd4" kindref="member">nodeStarOffsets</ref>=NULL;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aa7d0c5c7194c72ae5673282fd26f80e6" kindref="member">elementMaterialTypes</ref>=NULL;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9d8f135ebe113d6c9d1ef60e2ea56cb1" kindref="member">elementBoundaryMaterialTypes</ref>=NULL;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ae91c6279fa8161e18e52543079aa8cf6" kindref="member">nodeMaterialTypes</ref>=NULL;</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>=NULL;</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1ab31abbfccc0c4d695624f2123dd97bbc" kindref="member">elementBarycentersArray</ref>=NULL;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a0ba00ec42c4dd93a3cffe5052d4b7edd" kindref="member">elementBoundaryBarycentersArray</ref>=NULL;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parallel</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a6d8c1e8a3743ccf2b9ac61d79d2aed42" kindref="member">elementOffsets_subdomain_owned</ref>=NULL;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9a62f7c5208b688193ad82dfb8cc3b4c" kindref="member">elementNumbering_subdomain2global</ref>=NULL;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a9c5445d99949e9311ff67a900cf40a3a" kindref="member">nodeOffsets_subdomain_owned</ref>=NULL;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a26d2763692e6a60ebdd57fe5b985c569" kindref="member">nodeNumbering_subdomain2global</ref>=NULL;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a5806b14e322aa308b7b2332137195d0e" kindref="member">elementBoundaryOffsets_subdomain_owned</ref>=NULL;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a18cf197b92cbab062e2a294849766cf1" kindref="member">elementBoundaryNumbering_subdomain2global</ref>=NULL;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1aad6fb618bfc1b53f688723ae41b0ce3f" kindref="member">edgeOffsets_subdomain_owned</ref>=NULL;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1a087e6d20726837e45bd1caaf1f4bd404" kindref="member">edgeNumbering_subdomain2global</ref>=NULL;</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>mesh.<ref refid="struct_mesh_1abb9c745014c9e5efdc6f9545592b8d9e" kindref="member">subdomainp</ref>=NULL;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="257" refid="struct_multilevel_mesh" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="259" refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>;</highlight></codeline>
<codeline lineno="260" refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>*<sp/><ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>;</highlight></codeline>
<codeline lineno="261" refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>**<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>,<sp/></highlight><highlight class="comment">//nLevels<sp/><sp/>x<sp/>nElements_global_level</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>**elementChildrenArray,</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>**elementChildrenOffsets;<sp/></highlight><highlight class="comment">//nLevels<sp/>x<sp/>nElements_global_level<sp/>x<sp/>nElementChildren_element</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="266" refid="group__mesh_1ga1fca12c22083b27c29a43d765d02341a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga1fca12c22083b27c29a43d765d02341a" kindref="member">initializeMultilevelMesh</ref>(<ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh)</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>=0;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>=NULL;</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>=NULL;</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>=NULL;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>=NULL;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="group__mesh_1gaf6c44a116f31b63a8d8d082a5bd0cc0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaf6c44a116f31b63a8d8d082a5bd0cc0e" kindref="member">deleteMultilevelMesh</ref>(<ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>;i++)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&gt;0)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i]<sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>[i];</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i&lt;multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>-1)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i]<sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>[i];</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i]<sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>[i];</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref><sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref><sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref><sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref><sp/>!=<sp/>NULL)<sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>[]<sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6548922b35b3b706b7c204b506678d36" kindref="member">nLevels</ref>=0;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1afac2870657d5f0b10216e12a4193eee7" kindref="member">meshArray</ref>=NULL;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1a6ada5eb59a4afae6c8300ecaeca2d9bb" kindref="member">elementParentsArray</ref>=NULL;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1abd7168c12797775bfefbb4dc915190d8" kindref="member">elementChildrenArray</ref>=NULL;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelMesh.<ref refid="struct_multilevel_mesh_1acf9305656a51158e04d5e613c26880ce" kindref="member">elementChildrenOffsets</ref>=NULL;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gabc239fca1803721a81b882c99fc8a817" kindref="member">edgeMeshElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><ref refid="struct_mesh_1a05eb17a6df74f735b305bbe456d1d84f" kindref="member">nx</ref>,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga2dcef8d6600302d66dcc2a7261e5e506" kindref="member">regularEdgeMeshNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gabe3df821ff4ab8aec3dd150a638b26e3" kindref="member">globallyRefineEdgeMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nLevels,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>averageNewNodeFlags=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaf3b6657eb67edd06d7661efdd5eef570" kindref="member">locallyRefineEdgeMesh</ref>(<ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>elementTagArray);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga336f7c853f7c2889c3d57a0702ada9d8" kindref="member">locallyRefineTriangleMesh</ref>(<ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>elementTagArray);</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaed3a370167525bf808917033346a7aa8" kindref="member">locallyRefineTriangleMesh_4T</ref>(<ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>elementTagArray);</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaa0e013b44f0b757455a50e61f5e19db8" kindref="member">locallyRefineTriangleMesh_redGreen</ref>(<ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/>elementTagArray);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga1837479558ffb93432b410f8eaf25b39" kindref="member">setNewestNodeBasesToLongestEdge</ref>(<ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga399d399e9ab8c6742aff3864d7e882a8" kindref="member">regularRectangularToTriangularMeshElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><ref refid="struct_mesh_1ad94801e2c9bd9c7e66deefad68f5707d" kindref="member">ny</ref>,<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>triangleFlag);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga9b1a55a88d7b2238b2248a84f9ed5271" kindref="member">regularRectangularToTriangularMeshNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaeba813e2207db2b208be1bd5715a6f8b" kindref="member">regularRectangularToTriangularElementBoundaryMaterials</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gac8f50ad63a717bf616c78b8390e7744e" kindref="member">globallyRefineTriangularMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nLevels,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>averageNewNodeFlags=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga554392b1260b82e3eaee5a4e02574f5b" kindref="member">regularQuadrilateralMeshElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaadf7742fb4b66683f8a0e2788d297397" kindref="member">regularQuadrilateralMeshElementBoundaryMaterials</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gad4add441d1af1fc56b191bb96304fe3b" kindref="member">globallyRefineQuadrilateralMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nLevels,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>averageNewNodeFlags=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga73b4c6525541ecae499d2dc09b7f001b" kindref="member">regularMeshNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><ref refid="struct_mesh_1aeda5d14f9cec8ccea61a4c1af632caf5" kindref="member">nz</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lz,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga44e77982690cf63f701bde2b8357bef9" kindref="member">regularMeshNodes2D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga372d10f8d5a2382ce7b71be9b0db2fbe" kindref="member">regularHexahedralMeshElementBoundaryMaterials</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lz,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga5fb49b127603edd31e6aab3b6e84f633" kindref="member">regularHexahedralToTetrahedralMeshNodes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lz,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga867bc8cc7de1299c306dcb28bf401aa2" kindref="member">regularHexahedralToTetrahedralMeshElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nz,<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga02ba112acd0bc3cff45d7c317ba9d635" kindref="member">regularHexahedralToTetrahedralElementBoundaryMaterials</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Ly,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>Lz,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gae1179b86882c92ec58cc40b61010d0e1" kindref="member">regularHexahedralMeshElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nz,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><ref refid="struct_mesh_1abc76092e9f0d48b311c47122dd847d92" kindref="member">px</ref>,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><ref refid="struct_mesh_1a7fdce7c323f95480164d26da8bd73b65" kindref="member">py</ref>,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><ref refid="struct_mesh_1a84f3e389f9666f4e40a65cb50499d712" kindref="member">pz</ref>,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gae507f3c0e3b76aae899ebba0b0382653" kindref="member">regularNURBSMeshElements</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nx,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>ny,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nz,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>px,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>py,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>pz,<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga68488c00a1abeb741d57a6e416c82a53" kindref="member">globallyRefineHexahedralMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nLevels,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>averageNewNodeFlags=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gab4d638c87ade6bd196a81384af108e8e" kindref="member">globallyRefineTetrahedralMesh</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nLevels,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/><ref refid="struct_multilevel_mesh" kindref="compound">MultilevelMesh</ref>&amp;<sp/>multilevelMesh,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>averageNewNodeFlags=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga0ca99f07f47c3775a54c126aa5b1cace" kindref="member">constructElementBoundaryElementsArray_edge</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga99583103d5f83c1d3b073b917c782d69" kindref="member">constructElementBoundaryElementsArray_triangle</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga17e8af5e2ec0c13e9c86f5e12eb4d4b9" kindref="member">constructElementBoundaryElementsArray_quadrilateral</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga82076ed1124688014a6bc263ac24d3ae" kindref="member">constructElementBoundaryElementsArray_tetrahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga4751b505347ed744aa5495e1e43bd2bc" kindref="member">constructElementBoundaryElementsArray_hexahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga2aea69a4233a90a4d2e7914ce6fdeb59" kindref="member">constructElementBoundaryElementsArray_NURBS</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gabf2819715294cc6d161fdb1a30d3f6ee" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_edge</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaa1b05cb9c4d42c1d435e36a21020e46f" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_triangle</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga12a7f52deabde430ed8174fc71e5b652" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_quadrilateral</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga56a12610c9dfc7c51ed3e6d633f375e3" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryNumbers_tetrahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga71bd5b1f46b653a7be9c65b2af9499b4" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_edge</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga8fca2274c01965e94bc8855f7391332a" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_triangle</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaa187306a2346aeb53640156d1e1890fe" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_quadrilateral</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaf0f4c6fcb9b418b4096b9fe1a62329d3" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_tetrahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga11c306c06b8fe371531389373dac48d5" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_hexahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga928d08a58ffb5a778e738d6847115f47" kindref="member">constructElementBoundaryElementsArrayWithGivenElementBoundaryAndEdgeNumbers_NURBS</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga273d705930d0ad0775498d0be44c739d" kindref="member">writeElements</ref>(std::ostream&amp;<sp/>meshFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga093904f19cdbf5c7f0076e6a6c56081e" kindref="member">writeNodes</ref>(std::ostream&amp;<sp/>meshFile,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gac9bf9640ca027ca766ace6272e16400c" kindref="member">readElements</ref>(std::istream&amp;<sp/>meshFile,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gad97db4b6e238c242afedd5fa8b914e3e" kindref="member">allocateGeometricInfo_tetrahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga1ad1cf0d175b08dec8e1ed161e065295" kindref="member">allocateGeometricInfo_triangle</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga8b4def6a8ea5675441b05b5a7061713b" kindref="member">allocateGeometricInfo_edge</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga7a5874cc209a0c576ed8391e77111a9c" kindref="member">allocateGeometricInfo_quadrilateral</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga0d4a836f32fdf0cacb6250884aafe10b" kindref="member">allocateGeometricInfo_hexahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gad36c6af3da3b8edd3b32f5dd8f7b5f18" kindref="member">allocateGeometricInfo_NURBS</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaff191b3e806b335cd6d0916218132c96" kindref="member">computeGeometricInfo_tetrahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaad90ffdf6bb84d92b74bf824f8662a4b" kindref="member">computeGeometricInfo_triangle</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga88041ad8d6afe29f23c6e30837b777db" kindref="member">computeGeometricInfo_edge</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gafdde7ba7852d7a8a4da1e3dc6bf91b36" kindref="member">computeGeometricInfo_hexahedron</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaad2c7d05554f0bb51a7ccfb6855baeb5" kindref="member">computeGeometricInfo_quadrilateral</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga0f4f89b6fc203f8443bc671f2ce24c2e" kindref="member">computeGeometricInfo_NURBS</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh);</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga8c801b37609c0f42a31d52ad7ad52dca" kindref="member">assignElementBoundaryMaterialTypesFromParent</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>parentMesh,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>childMesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>levelElementParentsArray,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>nSpace_global);</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gac6cbf9a86158a88ef7393e0bfc997afd" kindref="member">allocateNodeAndElementNodeDataStructures</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_mesh_1a410907bc17e0cf51e268e4db2b8be459" kindref="member">nNodes_element</ref>);</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//mwf<sp/>added<sp/>for<sp/>converting<sp/>from<sp/>triangle<sp/>data<sp/>structure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">triangulateio;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gafb3cbd692f5aaeee1411ca2776b69db9" kindref="member">setFromTriangleElements</ref>(triangulateio*<sp/>trimesh,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga5fdf05986fe93c06aad3ca6cdcadcb4c" kindref="member">setFromTriangleNodes</ref>(triangulateio*<sp/>trimesh,<sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gab1c1f7cc1d5b1041de2941eb89df59a3" kindref="member">readTriangleMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga2eb6d5e2b747bef66fe94c02182a6f62" kindref="member">readTriangleElementBoundaryMaterialTypes</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga08c052ee267f328592995e357a2f023f" kindref="member">writeTriangleMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga1e23f5a53d60b3a60f8a62d641216a07" kindref="member">readTetgenMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaf88d232634fffcb9c0ca4d89636d8e1c" kindref="member">readTetgenElementBoundaryMaterialTypes</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gab46b1f709ad5c07ad957ab8366c84838" kindref="member">writeTetgenMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga226ca058f8a8bb3741f729b4bbd68467" kindref="member">read3DM</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexBase);</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga5585bb85360aa0ce9512f685661094ee" kindref="member">read2DM</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexBase);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gac9c66ee0f6dbc487ee09b2b1fc0a0242" kindref="member">readHex</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexBase);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga75f5fa8f64804d57c1e5742f67756106" kindref="member">readBC</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>indexBase);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gad89a88a5a0b744cb8809b15bb55b28f0" kindref="member">write3dmMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga3ea5e89286c9123ed49826f60722de05" kindref="member">write2dmMesh</ref>(<ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>filebase,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gae23507317ccd53c375b133ecd3b483c9" kindref="member">copyElementBoundaryMaterialTypesFromTriangle</ref>(triangulateio*<sp/>trimesh,<sp/></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_mesh" kindref="compound">Mesh</ref>&amp;<sp/>mesh,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>base);</highlight></codeline>
<codeline lineno="393"><highlight class="normal">}</highlight><highlight class="comment">//extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>A<sp/>sorted<sp/>tuple<sp/>of<sp/>node<sp/>numbers<sp/>to<sp/>use<sp/>as<sp/>a<sp/>key<sp/>in<sp/>maps<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNodes&gt;</highlight></codeline>
<codeline lineno="397" refid="class_node_tuple" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_node_tuple" kindref="compound">NodeTuple</ref></highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="400" refid="class_node_tuple_1a3d054282fa666881d75a2c4d9920453f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_node_tuple_1a3d054282fa666881d75a2c4d9920453f" kindref="member">NodeTuple</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>nodesIn)</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sort</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>position;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nNodes;i++)</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position=0;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//dumb<sp/>sorting<sp/>seems<sp/>fast<sp/>enough<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j=0;j&lt;nNodes;j++)</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(nodesIn[i]<sp/>&gt;<sp/>nodesIn[j])</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>position++;</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[position]=nodesIn[i];</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes_unsorted[i]<sp/>=<sp/>nodesIn[i];</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>for(int<sp/>i=0;i&lt;nNodes;i++)<sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[i]<sp/>=<sp/>nodesIn[i];</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::sort(nodes,nodes+nNodes);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="418" refid="class_node_tuple_1ab3179c2de3d5e1db0b8e6144a0f150bc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_node_tuple_1ab3179c2de3d5e1db0b8e6144a0f150bc" kindref="member">NodeTuple</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;nNodes&gt;</ref>&amp;<sp/>nt)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nNodes;i++)</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[i]=nt.<ref refid="class_node_tuple_1a98190f7d23c18d48b64d61112ffed25a" kindref="member">nodes</ref>[i];<sp/></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes_unsorted[i]=nt.<ref refid="class_node_tuple_1a0a76cdad7456130cb26e1fa8b53b5b9a" kindref="member">nodes_unsorted</ref>[i];</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426" refid="class_node_tuple_1a98190f7d23c18d48b64d61112ffed25a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes[nNodes];</highlight></codeline>
<codeline lineno="427" refid="class_node_tuple_1a0a76cdad7456130cb26e1fa8b53b5b9a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes_unsorted[nNodes];</highlight></codeline>
<codeline lineno="428"><highlight class="normal">};</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNodes&gt;</highlight></codeline>
<codeline lineno="431" refid="group__mesh_1gaf267e35a377acc7186fd2bf6ceb77fe1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator&lt;(const<sp/>NodeTuple&lt;nNodes&gt;&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_node_tuple" kindref="compound">NodeTuple&lt;nNodes&gt;</ref>&amp;<sp/>right)</highlight></codeline>
<codeline lineno="432"><highlight class="normal">{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;i&lt;nNodes;i++)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(left.nodes[i]&lt;right.nodes[i])</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(left.nodes[i]&gt;right.nodes[i])</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="class_node" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_node" kindref="compound">Node</ref></highlight></codeline>
<codeline lineno="444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="446" refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_node_1af9a13a246e6032d3c8c52aa8fb92e426" kindref="member">nN</ref>;</highlight></codeline>
<codeline lineno="447" refid="class_node_1a8797bf8ce04cc01920b7fa33f1792a36" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/>x,y,<ref refid="class_node_1a8797bf8ce04cc01920b7fa33f1792a36" kindref="member">z</ref>;</highlight></codeline>
<codeline lineno="448" refid="class_node_1a634d962b5b31079d131cf747da8b5475" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_node_1a634d962b5b31079d131cf747da8b5475" kindref="member">flag</ref>;</highlight></codeline>
<codeline lineno="449"><highlight class="normal">};</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight></codeline>
<codeline lineno="451" refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>right,<sp/><ref refid="class_node" kindref="compound">Node</ref>&amp;<sp/><ref refid="group__mesh_1gab916ec485e9e87fa99331208ea9e876e" kindref="member">midpoint</ref>)</highlight></codeline>
<codeline lineno="452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/>midpoint.<ref refid="class_node_1a1082fca4b71cc3cc02d78c35108f9059" kindref="member">x</ref><sp/>=<sp/>0.5*(left[0]+right[0]);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>midpoint.<ref refid="class_node_1a441d3c5ba86597f4c391408d9fe6d242" kindref="member">y</ref><sp/>=<sp/>0.5*(left[1]+right[1]);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>midpoint.<ref refid="class_node_1a8797bf8ce04cc01920b7fa33f1792a36" kindref="member">z</ref><sp/>=<sp/>0.5*(left[2]+right[2]);</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight></codeline>
<codeline lineno="458" refid="group__mesh_1gabd444116e6f1d057ac96e61c4020920d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gabd444116e6f1d057ac96e61c4020920d" kindref="member">edgeLength</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_node" kindref="compound">Node</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_node" kindref="compound">Node</ref>&amp;<sp/>right)</highlight></codeline>
<codeline lineno="459"><highlight class="normal">{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(<sp/>(right.<ref refid="class_node_1a1082fca4b71cc3cc02d78c35108f9059" kindref="member">x</ref><sp/>-<sp/>left.<ref refid="class_node_1a1082fca4b71cc3cc02d78c35108f9059" kindref="member">x</ref>)*(right.<ref refid="class_node_1a1082fca4b71cc3cc02d78c35108f9059" kindref="member">x</ref><sp/>-<sp/>left.<ref refid="class_node_1a1082fca4b71cc3cc02d78c35108f9059" kindref="member">x</ref>)<sp/>+</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(right.<ref refid="class_node_1a441d3c5ba86597f4c391408d9fe6d242" kindref="member">y</ref><sp/>-<sp/>left.<ref refid="class_node_1a441d3c5ba86597f4c391408d9fe6d242" kindref="member">y</ref>)*(right.<ref refid="class_node_1a441d3c5ba86597f4c391408d9fe6d242" kindref="member">y</ref><sp/>-<sp/>left.<ref refid="class_node_1a441d3c5ba86597f4c391408d9fe6d242" kindref="member">y</ref>)<sp/>+</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(right.<ref refid="class_node_1a8797bf8ce04cc01920b7fa33f1792a36" kindref="member">z</ref><sp/>-<sp/>left.<ref refid="class_node_1a8797bf8ce04cc01920b7fa33f1792a36" kindref="member">z</ref>)*(right.<ref refid="class_node_1a8797bf8ce04cc01920b7fa33f1792a36" kindref="member">z</ref><sp/>-<sp/>left.<ref refid="class_node_1a8797bf8ce04cc01920b7fa33f1792a36" kindref="member">z</ref>)<sp/>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight></codeline>
<codeline lineno="465" refid="group__mesh_1gad28ab11ba6f458a55f43945086b06a41" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gad28ab11ba6f458a55f43945086b06a41" kindref="member">edgeLengthFromNodeNumbers</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/><ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>right)</highlight></codeline>
<codeline lineno="466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>sqrt(<sp/>(nodeArray[right*3+0]<sp/>-<sp/>nodeArray[left*3+0])*(nodeArray[right*3+0]<sp/>-<sp/>nodeArray[left*3+0])<sp/>+</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nodeArray[right*3+1]<sp/>-<sp/>nodeArray[left*3+1])*(nodeArray[right*3+1]<sp/>-<sp/>nodeArray[left*3+1])<sp/>+</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(nodeArray[right*3+2]<sp/>-<sp/>nodeArray[left*3+2])*(nodeArray[right*3+2]<sp/>-<sp/>nodeArray[left*3+2])<sp/>);</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472" refid="group__mesh_1ga51096f2bf3ee6239c1765c3f66b337b9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaf267e35a377acc7186fd2bf6ceb77fe1" kindref="member">operator&lt;</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_node" kindref="compound">Node</ref>&amp;<sp/>left,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_node" kindref="compound">Node</ref>&amp;<sp/>right)</highlight></codeline>
<codeline lineno="473"><highlight class="normal">{</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(left.<ref refid="class_node_1a1082fca4b71cc3cc02d78c35108f9059" kindref="member">x</ref><sp/>&lt;<sp/>right.<ref refid="class_node_1a1082fca4b71cc3cc02d78c35108f9059" kindref="member">x</ref>)<sp/></highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left.<ref refid="class_node_1a1082fca4b71cc3cc02d78c35108f9059" kindref="member">x</ref><sp/>&gt;<sp/>right.<ref refid="class_node_1a1082fca4b71cc3cc02d78c35108f9059" kindref="member">x</ref>)</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left.<ref refid="class_node_1a441d3c5ba86597f4c391408d9fe6d242" kindref="member">y</ref><sp/>&lt;<sp/>right.<ref refid="class_node_1a441d3c5ba86597f4c391408d9fe6d242" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left.<ref refid="class_node_1a441d3c5ba86597f4c391408d9fe6d242" kindref="member">y</ref><sp/>&gt;<sp/>right.<ref refid="class_node_1a441d3c5ba86597f4c391408d9fe6d242" kindref="member">y</ref>)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left.<ref refid="class_node_1a8797bf8ce04cc01920b7fa33f1792a36" kindref="member">z</ref><sp/>&lt;<sp/>right.<ref refid="class_node_1a8797bf8ce04cc01920b7fa33f1792a36" kindref="member">z</ref>)</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(left.<ref refid="class_node_1a8797bf8ce04cc01920b7fa33f1792a36" kindref="member">z</ref><sp/>&gt;<sp/>left.<ref refid="class_node_1a8797bf8ce04cc01920b7fa33f1792a36" kindref="member">z</ref>)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="487"><highlight class="normal">}</highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="class_element_neighbors" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_element_neighbors" kindref="compound">ElementNeighbors</ref></highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="492" refid="class_element_neighbors_1a32c2d5d2d3ead9c4171d31100daf9e0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_element_neighbors_1a32c2d5d2d3ead9c4171d31100daf9e0e" kindref="member">ElementNeighbors</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>leftIn,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left_ebN_elementIn){left=leftIn;left_ebN_element=left_ebN_elementIn;right=-1;right_ebN_element=-1;}</highlight></codeline>
<codeline lineno="493" refid="class_element_neighbors_1a34e6aeed56a6aa90e6bf5e6f005b5aba" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_element_neighbors_1a34e6aeed56a6aa90e6bf5e6f005b5aba" kindref="member">ElementNeighbors</ref>(){left=-1;left_ebN_element=-1;right=-1;right_ebN_element=-1;}</highlight></codeline>
<codeline lineno="494" refid="class_element_neighbors_1a7730233f396093085694757ce6bc0057" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>left,left_ebN_element,right,<ref refid="class_element_neighbors_1a7730233f396093085694757ce6bc0057" kindref="member">right_ebN_element</ref>;</highlight></codeline>
<codeline lineno="495"><highlight class="normal">};</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497" refid="group__mesh_1ga402d2f87bc6f94428e66b13a8eaa5f31" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga402d2f87bc6f94428e66b13a8eaa5f31" kindref="member">newEdge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>nodes,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1)</highlight></codeline>
<codeline lineno="498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/>nodes[eN*2+0]<sp/>=<sp/>n0;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>nodes[eN*2+1]<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/>eN++;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eN;</highlight></codeline>
<codeline lineno="503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="504" refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga98d9de4aac538b3beae2fc391fe57582" kindref="member">newTriangle</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>nodes,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2)</highlight></codeline>
<codeline lineno="505"><highlight class="normal">{</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>nodes[eN*3+0]<sp/>=<sp/>n0;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/>nodes[eN*3+1]<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/>nodes[eN*3+2]<sp/>=<sp/>n2;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/>eN++;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eN;</highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512" refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga03c5355cb55caff8361b64a88951adc4" kindref="member">newTetrahedron</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>nodes,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n3)</highlight></codeline>
<codeline lineno="513"><highlight class="normal">{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/>nodes[eN*4+0]<sp/>=<sp/>n0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/>nodes[eN*4+1]<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/>nodes[eN*4+2]<sp/>=<sp/>n2;</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/>nodes[eN*4+3]<sp/>=<sp/>n3;</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/>eN++;</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eN;</highlight></codeline>
<codeline lineno="520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight></codeline>
<codeline lineno="522" refid="group__mesh_1ga4dce22164025e81bd9577bdd7a52f005" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga4dce22164025e81bd9577bdd7a52f005" kindref="member">newQuadrilateral</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>nodes,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n3)</highlight></codeline>
<codeline lineno="523"><highlight class="normal">{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/>nodes[eN*4+0]<sp/>=<sp/>n0;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/>nodes[eN*4+1]<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/>nodes[eN*4+2]<sp/>=<sp/>n2;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/>nodes[eN*4+3]<sp/>=<sp/>n3;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/>eN++;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eN;</highlight></codeline>
<codeline lineno="530"><highlight class="normal">}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532" refid="group__mesh_1ga93e498155737b8aca6e6d858e4958db1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga93e498155737b8aca6e6d858e4958db1" kindref="member">newHexahedron</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>nodes,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n0,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n1,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n2,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n3,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n4,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n5,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n6,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n7)</highlight></codeline>
<codeline lineno="533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/>nodes[eN*8+0]<sp/>=<sp/>n0;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/>nodes[eN*8+1]<sp/>=<sp/>n1;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/>nodes[eN*8+2]<sp/>=<sp/>n2;</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/>nodes[eN*8+3]<sp/>=<sp/>n3;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/>nodes[eN*8+4]<sp/>=<sp/>n4;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/>nodes[eN*8+5]<sp/>=<sp/>n5;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/>nodes[eN*8+6]<sp/>=<sp/>n6;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/>nodes[eN*8+7]<sp/>=<sp/>n7;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/>eN++;</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eN;</highlight></codeline>
<codeline lineno="544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gaa53580028be0d07c170f9f826dac1c97" kindref="member">newestNodeBisect</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><ref refid="struct_mesh_1a67e33052617d0e53ebe053d71412dee8" kindref="member">nElements_global</ref>,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;&amp;<sp/><ref refid="struct_mesh_1a22b669f60fea89c7f47dfbe0ee4fd80c" kindref="member">nodeArray</ref>,</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/><ref refid="struct_mesh_1a75f9e7d19dc4a7e7589f712f2e8fe849" kindref="member">elementNodesArray</ref>,</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/><ref refid="struct_mesh_1a7dc84c8761e788b972cadef8126c3714" kindref="member">elementNeighborsArray</ref>,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_allocation_8h_1a3e3ccfdcdd496df99eaa29f65fe68b31" kindref="member">std::vector</ref>&lt;std::list&lt;int&gt;<sp/>&gt;&amp;<sp/>childrenList,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>bases,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;&amp;<sp/>refined);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga8c0a09d2570b320080038656fb2efba6" kindref="member">add4TnodesForRefinement2d</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight><highlight class="comment">//element<sp/>to<sp/>be<sp/>refined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight><highlight class="comment">//number<sp/>of<sp/>nodes<sp/>in<sp/>mesh,<sp/>will<sp/>grow<sp/>as<sp/>refine</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;&amp;<sp/>refined,<sp/><sp/></highlight><highlight class="comment">//is<sp/>an<sp/>element<sp/>to<sp/>be<sp/>refined<sp/>or<sp/>not?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>edgeMidNodesArray,</highlight><highlight class="comment">//edge--&gt;<sp/>new<sp/>node<sp/>from<sp/>bisection<sp/>(-1<sp/>=<sp/>none)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNodesArray,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent<sp/>mesh<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>nodeArray);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga5dce5689b08b93d8ae8d051e70e96391" kindref="member">add4TnodesForConformity2d</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_longest,<sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ebN_neig,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_neig,</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/><ref refid="struct_mesh_1a7038fb145b0b7b77e5fd0cd162ae2fed" kindref="member">nNodes_global</ref>,</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;bool&gt;&amp;<sp/>refined,</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;int&gt;&amp;<sp/>edgeMidNodesArray,</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNodesArray,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//parent<sp/>mesh<sp/>representation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="struct_mesh_1ac7e8f6ef5efc37bb959e4811f1d19f0d" kindref="member">elementBoundariesArray</ref>,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNeighborsArray,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>nodeArray);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1ga5a2a76e1649bbe26a65e708b39e38bf8" kindref="member">findLocalLongestEdge2d</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNodesArray,</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*<sp/>nodeArray);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="group__mesh_1gac307634f2b836753119cb91562215cd9" kindref="member">subdivideTriangle4T</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eN_parent,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&amp;<sp/>eN_new,</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementParentsArray,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementChildrenOffsets,</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementChildrenArray,</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNodesArray_child,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;int&gt;&amp;<sp/>edgeMidNodesArray,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::vector&lt;bool&gt;&amp;<sp/>refined,</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementNodesArray_parent,</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>elementBoundariesArray_parent,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>nodeArray_parent);</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/cekees/proteus/proteus/mesh.h"/>
  </compounddef>
</doxygen>
