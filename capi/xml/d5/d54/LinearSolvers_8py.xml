<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d5/d54/LinearSolvers_8py" kind="file" language="Python">
    <compoundname>LinearSolvers.py</compoundname>
    <innerclass refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver" prot="public">proteus::LinearSolvers::LinearSolver</innerclass>
    <innerclass refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU" prot="public">proteus::LinearSolvers::LU</innerclass>
    <innerclass refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py" prot="public">proteus::LinearSolvers::KSP_petsc4py</innerclass>
    <innerclass refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor" prot="public">proteus::LinearSolvers::SchurOperatorConstructor</innerclass>
    <innerclass refid="d7/da9/classproteus_1_1LinearSolvers_1_1KSP__Preconditioner" prot="public">proteus::LinearSolvers::KSP_Preconditioner</innerclass>
    <innerclass refid="de/d58/classproteus_1_1LinearSolvers_1_1petsc__ASM" prot="public">proteus::LinearSolvers::petsc_ASM</innerclass>
    <innerclass refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU" prot="public">proteus::LinearSolvers::petsc_LU</innerclass>
    <innerclass refid="d9/dde/classproteus_1_1LinearSolvers_1_1DofOrderInfo" prot="public">proteus::LinearSolvers::DofOrderInfo</innerclass>
    <innerclass refid="dd/dec/classproteus_1_1LinearSolvers_1_1BlockedDofOrderType" prot="public">proteus::LinearSolvers::BlockedDofOrderType</innerclass>
    <innerclass refid="de/dae/classproteus_1_1LinearSolvers_1_1InterlacedDofOrderType" prot="public">proteus::LinearSolvers::InterlacedDofOrderType</innerclass>
    <innerclass refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo" prot="public">proteus::LinearSolvers::ModelInfo</innerclass>
    <innerclass refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon" prot="public">proteus::LinearSolvers::SchurPrecon</innerclass>
    <innerclass refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp" prot="public">proteus::LinearSolvers::Schur_Qp</innerclass>
    <innerclass refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur" prot="public">proteus::LinearSolvers::NavierStokesSchur</innerclass>
    <innerclass refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp" prot="public">proteus::LinearSolvers::Schur_Sp</innerclass>
    <innerclass refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp" prot="public">proteus::LinearSolvers::Schur_Qp</innerclass>
    <innerclass refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur" prot="public">proteus::LinearSolvers::NavierStokesSchur</innerclass>
    <innerclass refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD" prot="public">proteus::LinearSolvers::NavierStokes_TwoPhasePCD</innerclass>
    <innerclass refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC" prot="public">proteus::LinearSolvers::Schur_LSC</innerclass>
    <innerclass refid="df/d30/classproteus_1_1LinearSolvers_1_1NavierStokes3D" prot="public">proteus::LinearSolvers::NavierStokes3D</innerclass>
    <innerclass refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC" prot="public">proteus::LinearSolvers::SimpleDarcyFC</innerclass>
    <innerclass refid="d4/d32/classproteus_1_1LinearSolvers_1_1NavierStokes2D" prot="public">proteus::LinearSolvers::NavierStokes2D</innerclass>
    <innerclass refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection" prot="public">proteus::LinearSolvers::NavierStokesPressureCorrection</innerclass>
    <innerclass refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC" prot="public">proteus::LinearSolvers::SimpleDarcyFC</innerclass>
    <innerclass refid="d9/d95/classproteus_1_1LinearSolvers_1_1Jacobi" prot="public">proteus::LinearSolvers::Jacobi</innerclass>
    <innerclass refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel" prot="public">proteus::LinearSolvers::GaussSeidel</innerclass>
    <innerclass refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU" prot="public">proteus::LinearSolvers::StarILU</innerclass>
    <innerclass refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU" prot="public">proteus::LinearSolvers::StarBILU</innerclass>
    <innerclass refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel" prot="public">proteus::LinearSolvers::TwoLevel</innerclass>
    <innerclass refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver" prot="public">proteus::LinearSolvers::MultilevelLinearSolver</innerclass>
    <innerclass refid="d6/d49/classproteus_1_1LinearSolvers_1_1MGM" prot="public">proteus::LinearSolvers::MGM</innerclass>
    <innerclass refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI" prot="public">proteus::LinearSolvers::NI</innerclass>
    <innerclass refid="dc/dab/classproteus_1_1LinearSolvers_1_1StorageSet" prot="public">proteus::LinearSolvers::StorageSet</innerclass>
    <innerclass refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor" prot="public">proteus::LinearSolvers::OperatorConstructor</innerclass>
    <innerclass refid="da/ddf/classproteus_1_1LinearSolvers_1_1OperatorConstructor__rans2p" prot="public">proteus::LinearSolvers::OperatorConstructor_rans2p</innerclass>
    <innerclass refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel" prot="public">proteus::LinearSolvers::OperatorConstructor_oneLevel</innerclass>
    <innerclass refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration" prot="public">proteus::LinearSolvers::ChebyshevSemiIteration</innerclass>
    <innerclass refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace" prot="public">proteus::LinearSolvers::SolverNullSpace</innerclass>
    <innerclass refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure" prot="public">proteus::LinearSolvers::NavierStokesConstantPressure</innerclass>
    <innerclass refid="df/d1e/classproteus_1_1LinearSolvers_1_1ConstantNullSpace" prot="public">proteus::LinearSolvers::ConstantNullSpace</innerclass>
    <innernamespace refid="dc/d03/namespaceproteus_1_1LinearSolvers">proteus::LinearSolvers</innernamespace>
    <innernamespace refid="d2/da6/namespaceLinearAlgebra">LinearAlgebra</innernamespace>
    <innernamespace refid="d1/d54/namespaceGnuplot">Gnuplot</innernamespace>
    <innernamespace refid="d6/d8f/namespaceRandomArray">RandomArray</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="dc/d03/namespaceproteus_1_1LinearSolvers" refkind="compound"><highlight class="stringliteral">r&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">A<sp/>hierarchy<sp/>of<sp/>classes<sp/>for<sp/>linear<sp/>algebraic<sp/>system<sp/>solvers.</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">..<sp/>inheritance-diagram::<sp/>proteus.LinearSolvers</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/><sp/><sp/>:parts:<sp/>1</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>absolute_import</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>division</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>input</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>zip</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>range</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>object</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>past.utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>old_div</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.LinearAlgebraTools<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LinearAlgebraTools<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>LAT</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>FemTools</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>clapack</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>superluWrappers</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TransportCoefficients</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cfemIntegrals</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Quadrature</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>petsc4py<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PETSc<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>p4pyPETSc</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>math<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.Profiling<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logEvent</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.mprans<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cArgumentsDict</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver" kindref="compound">LinearSolver</ref>(object):</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>The<sp/>base<sp/>class<sp/>for<sp/>linear<sp/>solvers.</highlight></codeline>
<codeline lineno="31"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="32"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Arugments</highlight></codeline>
<codeline lineno="33"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="34"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>L<sp/>:<sp/>:class:`proteus.superluWrappers.SparseMatrix`</highlight></codeline>
<codeline lineno="35"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>the<sp/>system<sp/>matrix.</highlight></codeline>
<codeline lineno="36"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ae110ee2bee4bc5a92adb434aacb8bad8" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/><sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/><sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_du<sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_du<sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>l2Norm,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>&apos;r&apos;,</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>False):</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a50139ef85ee790b845fe4bef29212aef" kindref="member">solverName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Base<sp/>Class&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref><sp/>=<sp/>L</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref><sp/>=<sp/>L.shape[0]</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref><sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a9d435081f13773ea83cc7a810ee1aff1" kindref="member">Vec</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a1e4e8b7b8182046159d91ed8a8d8b6b8" kindref="member">rtol_r</ref>=rtol_r</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3dad342e95d7508d8feec22908bb6b0c" kindref="member">atol_r</ref>=atol_r</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a0e193854f28ddddac477842cb91ecc9f" kindref="member">rtol_du</ref>=rtol_du</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1abde4726e3806122b5973b8695de1d4ff" kindref="member">atol_du</ref>=atol_du</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a0426bc93cb83ccc084d78741eebc760f" kindref="member">maxIts</ref>=maxIts</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a51634d8fa5d613668b93edfc6a14d887" kindref="member">its</ref>=0</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a29f2fca906b5d27112ad6992ec8ea71a" kindref="member">solveCalls</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a0117c2d610d281c4304ff49f38d4bc39" kindref="member">recordedIts</ref>=0</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a9831037263f6517a98bc0bdd63915e81" kindref="member">solveCalls_failed</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a66b312a9dfceb228776077d6af99c9de" kindref="member">recordedIts_failed</ref>=0</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1afc492ae110e7052ed06ee91ec34189bf" kindref="member">rReductionFactor</ref>=0.0</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7c0e84ff3c4ed33b386198f6bddb1423" kindref="member">duReductionFactor</ref>=0.0</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1adf144339761e3d8ec158eef69070650b" kindref="member">rReductionFactor_avg</ref>=0.0</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a0c5cf19469917d148c969376dd783c65" kindref="member">duReductionFactor_avg</ref>=0.0</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a466ea29b6d4ac244fee45a1d79c5c2ab" kindref="member">rReductionOrder</ref>=0.0</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7856588e6732ca30d18278c62df93d97" kindref="member">rReductionOrder_avg</ref>=0.0</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ae0ca4be09a8eb9d5e62e8643fce594e9" kindref="member">duReductionOrder</ref>=0.0</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a5a23aecffe92b902ce944208100682a1" kindref="member">duReductionOrder_avg</ref>=0.0</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ac832232fe57f683d6d307c2b0186989d" kindref="member">ratio_r_current</ref><sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a5ab9af55107904a1b82ef246ee902576" kindref="member">ratio_r_solve</ref><sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a0fc4040d257bca68db49f90151a56b08" kindref="member">ratio_du_solve</ref><sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ae858c05f8d0356a495e29ede03f064d1" kindref="member">last_log_ratio_r</ref><sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a74d0ff4a53f339501045f2b2b5caf90b" kindref="member">last_log_ratior_du</ref><sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a4b3b49d81082a848c7e2b5e62707fd3a" kindref="member">convergenceTest</ref><sp/>=<sp/>convergenceTest</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a500331ac9ba174233cb2c035f9f5d1f0" kindref="member">computeRates</ref><sp/>=<sp/>computeRates</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a2dac943a76273374c8accfb6b9690bb2" kindref="member">computeEigenvalues</ref>=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3006fd0084a2aab3d5ceccff6e2b96a1" kindref="member">printInfo</ref><sp/>=<sp/>printInfo</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a0dc288c9cb856ef952a4a01425b2f1eb" kindref="member">norm</ref><sp/>=<sp/>l2Norm</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a9cb5d40d7ced8ceac9f16445d98c8a19" kindref="member">convergenceHistoryIsCorrupt</ref>=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1adcaf0034e60a278d795e112704dd7e66" kindref="member">norm_r0</ref>=0.0</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a6a2d83a0370afd92e1e05eba41d13d84" kindref="member">norm_r</ref>=0.0</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a44bc47503703e055c45bfcf5d8305b48" kindref="member">norm_du</ref>=0.0</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a8b71b7b4674fc0869bdb5ec041ff803b" kindref="member">r</ref>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ab2572aec6649e69740b829323c18122d" kindref="member">leftEigenvectors</ref>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a1386a1543c9f3ca9e4e76359a4aaa967" kindref="member">rightEigenvectors</ref>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1afb61fb399b64d5703cbe371a7c2c80de" kindref="member">eigenvalues_r</ref>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3026971f1b2f32d11de3de6a2716ca18" kindref="member">eigenvalues_i</ref>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a1587f95c72d292caf6566ef4c8273a71" kindref="member">work</ref>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#need<sp/>some<sp/>information<sp/>about<sp/>parallel<sp/>setup?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a528ab52f2a383f6c87c8591b1dfdea6d" kindref="member">par_fullOverlap</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#whether<sp/>or<sp/>not<sp/>partitioning<sp/>has<sp/>full<sp/>overlap</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#for<sp/>petsc<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a2e73758d43d1a598746316e6d42e52de" kindref="member">xGhosted</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ad993dc080ad63211eba387364e0900e8" kindref="member">b</ref>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a0a4ec193865c1acb6de7714511741764" kindref="member">setResTol</ref>(self,rtol,atol):</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a1e4e8b7b8182046159d91ed8a8d8b6b8" kindref="member">rtol_r</ref><sp/>=<sp/>rtol</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3dad342e95d7508d8feec22908bb6b0c" kindref="member">atol_r</ref><sp/>=<sp/>atol</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a259753b8109384ab5a46e5cebccd874c" kindref="member">prepare</ref>(self,b=None):</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a357624e1146bb211513e969f14bc68e0" kindref="member">solve</ref>(self,u,r=None,b=None,par_u=None,par_b=None):</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ab51010b0597de5d9df5ebbe6a8ad3456" kindref="member">calculateEigenvalues</ref>(self):</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aceb30deec6cc954fe8d10828295824c2" kindref="member">computeResidual</ref>(self,u,r,b,initialGuessIsZero=False):</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>initialGuessIsZero:</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[:]=b</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r*=(-1.0)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.L).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[:]<sp/>=<sp/>numpy.dot(u,self.L)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.L).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.L.matvec(u,r)</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r-=b</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aa40cc0638af82bd120c9fb18553b5181" kindref="member">solveInitialize</ref>(self,u,r,b,initialGuessIsZero=True):</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.r<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.r<sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a9d435081f13773ea83cc7a810ee1aff1" kindref="member">Vec</ref>(self.n)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r=self.r</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.r=r</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>b<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.b<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.b<sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a9d435081f13773ea83cc7a810ee1aff1" kindref="member">Vec</ref>(self.n)</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b=self.b</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.b=b</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.computeResidual(u,r,b,initialGuessIsZero)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.its<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.norm_r0<sp/>=<sp/>self.norm(r)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.norm_r<sp/>=<sp/>self.norm_r0</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.ratio_r_solve<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.ratio_du_solve<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.last_log_ratio_r<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.last_log_ratior_du<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.convergenceHistoryIsCorrupt=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(r,b)</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a59d9584db6f3c23336a6da5697dcb50b" kindref="member">computeConvergenceRates</ref>(self):</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.convergenceHistoryIsCorrupt:</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.its<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.norm_r<sp/>&lt;<sp/>self.lastNorm_r:</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.ratio_r_current<sp/>=<sp/>old_div(self.norm_r,self.lastNorm_r)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.convergenceHistoryIsCorrupt=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.ratio_r_current<sp/>&gt;<sp/>1.0e-100:</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_ratio_r_current<sp/>=<sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(self.ratio_r_current)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.convergenceHistoryIsCorrupt</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.ratio_r_solve<sp/>*=<sp/>self.ratio_r_current</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rReductionFactor<sp/>=<sp/>pow(self.ratio_r_solve,old_div(1.0,self.its))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.its<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rReductionOrder<sp/>=<sp/>old_div(log_ratio_r_current,<sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.last_log_ratio_r)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.norm_du<sp/>&lt;<sp/>self.lastNorm_du:</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ratio_du_current<sp/>=<sp/>old_div(self.norm_du,self.lastNorm_du)</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.convergenceHistoryIsCorrupt=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ratio_du_current<sp/>&gt;<sp/>1.0e-100:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>log_ratio_du_current<sp/>=<sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(ratio_du_current)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.convergenceHistoryIsCorrupt=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.ratio_du_solve<sp/>*=<sp/>ratio_du_current</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.duReductionFactor<sp/>=<sp/>pow(self.ratio_du_solve,</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>old_div(1.0,(self.its-1)))</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.its<sp/>&gt;<sp/>2:</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.duReductionOrder<sp/>=<sp/>old_div(log_ratio_du_current,<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.last_log_ratio_du)</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.last_log_ratio_du<sp/>=<sp/>log_ratio_du_current</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.last_log_ratio_r<sp/>=<sp/>log_ratio_r_current</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.lastNorm_du<sp/>=<sp/>self.norm_du</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.lastNorm_r<sp/>=<sp/>self.norm_r</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ada014e7e6c0fee1d1e84357762b78505" kindref="member">converged</ref>(self,r):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergedFlag<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.norm_r<sp/>=<sp/>self.norm(r)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.norm_du<sp/>=<sp/>self.norm(self.du)</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.computeRates<sp/>==<sp/><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.computeConvergenceRates()</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.convergenceTest<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;its&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.its<sp/>==<sp/>self.maxIts:</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergedFlag<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.convergenceTest<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.its<sp/>!=<sp/>0<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.norm_r<sp/>&lt;<sp/>self.rtol_r*self.norm_r0<sp/>+<sp/>self.atol_r):</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergedFlag<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>convergedFlag<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.computeRates<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.computeAverages()</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.printInfo<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/dcc/jf_8h_1a665602667543592b4547008b72a9631b" kindref="member">print</ref>(self.info())</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>convergedFlag</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a224ea56260e3141ba383b8638997bf33" kindref="member">failed</ref>(self):</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failedFlag<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.its<sp/>==<sp/>self.maxIts:</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.solveCalls_failed+=1</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.recordedIts_failed+=self.its</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failedFlag<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.its+=1</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failedFlag</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a24bf453abb5e59bf4d19d25ec56a1776" kindref="member">computeAverages</ref>(self):</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.recordedIts+=self.its</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.solveCalls<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rReductionFactor_avg<sp/>=<sp/>self.rReductionFactor</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.duReductionFactor_avg<sp/>=<sp/>self.duReductionFactor</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rReductionOrder_avg<sp/>=<sp/>self.rReductionOrder</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.duReductionOrder_avg<sp/>=<sp/>self.duReductionOrder</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.solveCalls+=1</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rReductionFactor_avg*=self.solveCalls</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rReductionFactor_avg+=self.rReductionFactor</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.duReductionFactor_avg*=self.solveCalls</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.duReductionFactor_avg+=self.duReductionFactor</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rReductionOrder_avg*=self.solveCalls</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rReductionOrder_avg+=self.rReductionOrder</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.duReductionOrder_avg*=self.solveCalls</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.duReductionOrder_avg+=self.duReductionOrder</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.solveCalls<sp/>+=1</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rReductionFactor_avg/=self.solveCalls</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.duReductionFactor_avg/=self.solveCalls</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rReductionOrder_avg/=self.solveCalls</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.duReductionOrder_avg/=self.solveCalls</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a481512c2ad6739b426d9609d9050dab8" kindref="member">info</ref>(self):</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;************Start<sp/>Linear<sp/>Solver<sp/>Info************\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;its<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>%i<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.its</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;r<sp/>reduction<sp/>factor<sp/><sp/><sp/><sp/>=<sp/>%12.5e\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.rReductionFactor</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;du<sp/>reduction<sp/>factor<sp/><sp/><sp/>=<sp/>%12.5e\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.duReductionFactor</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;r<sp/>reduction<sp/>order<sp/><sp/><sp/><sp/><sp/>=<sp/>%12.5e\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.rReductionOrder</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;du<sp/>reduction<sp/>order<sp/><sp/><sp/><sp/>=<sp/>%12.5e\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.duReductionOrder</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;r<sp/>reduction<sp/>factor&gt;<sp/><sp/>=<sp/>%12.5e\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.rReductionFactor_avg</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;du<sp/>reduction<sp/>factor&gt;<sp/>=<sp/>%12.5e\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.duReductionFactor_avg</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;r<sp/>reduction<sp/>order&gt;<sp/><sp/><sp/>=<sp/>%12.5e\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.rReductionOrder_avg</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;&lt;du<sp/>reduction<sp/>order&gt;<sp/><sp/>=<sp/>%12.5e\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.duReductionOrder_avg</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;total<sp/>its<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>%i<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.recordedIts</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;total<sp/>its<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>%i<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.recordedIts</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;solver<sp/>calls<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>%i<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.solveCalls</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;failures<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>%i<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.solveCalls_failed</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;failed<sp/>its<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>%i<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.recordedIts_failed</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;maxIts<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>%i<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.maxIts</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;convergenceTest<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>%s<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.convergenceTest</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;atol_r<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%12.5e<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.atol_r</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;rtol_r<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%12.5e<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.rtol_r</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;norm(r0)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%12.5e<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.norm_r0</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;norm(r)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%12.5e<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.norm_r</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;norm(du)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%12.5e<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>self.norm_du</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.convergenceHistoryIsCorrupt:</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;HISTORY<sp/>IS<sp/>CORRUPT!!!<sp/>\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.infoString<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;************End<sp/>Linear<sp/>Solver<sp/>Info************\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.infoString</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a97730831526a247658d9815a8a66048d" kindref="member">printPerformance</ref>(self):</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#petsc<sp/>preconditioner<sp/>interface</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a366c0156bae1fa74aa6618b70eb32085" kindref="member">setUp</ref>(self,<sp/>pc):</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.prepare()</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a56f23802cb264bfb60a20108433d0729" kindref="member">apply</ref>(self,pc,x,y):</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.xGhosted<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.xGhosted<sp/>=<sp/>self.par_b.duplicate()</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.yGhosted<sp/>=<sp/>self.par_b.duplicate()</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.xGhosted.setArray(x.getArray())</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.xGhosted.ghostUpdateBegin(p4pyPETSc.InsertMode.INSERT,p4pyPETSc.ScatterMode.FORWARD)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.xGhosted.ghostUpdateEnd(p4pyPETSc.InsertMode.INSERT,p4pyPETSc.ScatterMode.FORWARD)</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.yGhosted.zeroEntries()</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>self.yGhosted.localForm()<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>ylf,self.xGhosted.localForm()<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>xlf:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.solve(u=ylf.getArray(),b=xlf.getArray(),initialGuessIsZero=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>y.setArray(self.yGhosted.getArray())</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU" kindref="compound">LU</ref>(<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver" kindref="compound">LinearSolver</ref>):</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>wrapper<sp/>for<sp/>pysparse&apos;s<sp/>wrapper<sp/>for<sp/>superlu.</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1a058b6c68353ef8bb619b7c865354e576" kindref="member">__init__</ref>(self,L,computeEigenvalues=False,computeEigenvectors=None):</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>copy</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearSolver.__init__(self,L)</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(L).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1abb89ebc7e3b4eb309d7e969a272ab635" kindref="member">sparseFactor</ref><sp/>=<sp/>superluWrappers.SparseFactor(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(L).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight><highlight class="comment">#mwf<sp/>was<sp/>array</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1a365c65ce4d47c5ec4db4dceaf23ddfd1" kindref="member">denseFactor</ref><sp/>=<sp/>clapack.DenseFactor(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a50139ef85ee790b845fe4bef29212aef" kindref="member">solverName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;LU&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a2dac943a76273374c8accfb6b9690bb2" kindref="member">computeEigenvalues</ref><sp/>=<sp/>computeEigenvalues<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(computeEigenvectors<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>computeEigenvectors<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;left&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;both&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ab2572aec6649e69740b829323c18122d" kindref="member">leftEigenvectors</ref>=numpy.zeros((self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1affcc9dbd88d2785b52bbddece326fbef" kindref="member">JOBVL</ref>=</highlight><highlight class="stringliteral">&apos;V&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1affcc9dbd88d2785b52bbddece326fbef" kindref="member">JOBVL</ref>=</highlight><highlight class="stringliteral">&apos;N&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>computeEigenvectors<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;right&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;both&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a1386a1543c9f3ca9e4e76359a4aaa967" kindref="member">rightEigenvectors</ref>=numpy.zeros((self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1a9297c019cfa3e9fc2f3caf5f8b2c1ac8" kindref="member">JOBVR</ref>=</highlight><highlight class="stringliteral">&apos;V&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1a9297c019cfa3e9fc2f3caf5f8b2c1ac8" kindref="member">JOBVR</ref>=</highlight><highlight class="stringliteral">&apos;N&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>computeEigenvalues<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>computeEigenvectors<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1a4152806ef0d1c206b4a92d4ff7effd40" kindref="member">Leig</ref>=copy.deepcopy(L)</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a1587f95c72d292caf6566ef4c8273a71" kindref="member">work</ref>=numpy.zeros((self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>*5,),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1afb61fb399b64d5703cbe371a7c2c80de" kindref="member">eigenvalues_r</ref><sp/>=<sp/>numpy.zeros((self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3026971f1b2f32d11de3de6a2716ca18" kindref="member">eigenvalues_i</ref><sp/>=<sp/>numpy.zeros((self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1ae8afd4688493eb4978109b39caeea6a2" kindref="member">prepare</ref>(self,</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b=None,</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>superluWrappers.sparseFactorPrepare(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>,self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1abb89ebc7e3b4eb309d7e969a272ab635" kindref="member">sparseFactor</ref>)</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a2dac943a76273374c8accfb6b9690bb2" kindref="member">computeEigenvalues</ref>:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1a4152806ef0d1c206b4a92d4ff7effd40" kindref="member">Leig</ref>[:]=self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ab51010b0597de5d9df5ebbe6a8ad3456" kindref="member">calculateEigenvalues</ref>()</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clapack.denseFactorPrepare(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>,</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1a365c65ce4d47c5ec4db4dceaf23ddfd1" kindref="member">denseFactor</ref>)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1afa60e2d8db06ff692069b0a4ccfc7612" kindref="member">solve</ref>(self,u,r=None,b=None,par_u=None,par_b=None,initialGuessIsZero=False):</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(r,b)<sp/>=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aa40cc0638af82bd120c9fb18553b5181" kindref="member">solveInitialize</ref>(u,r,b,initialGuessIsZero)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[:]=u</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ada014e7e6c0fee1d1e84357762b78505" kindref="member">converged</ref>(r)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a224ea56260e3141ba383b8638997bf33" kindref="member">failed</ref>()</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u[:]=b</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>superluWrappers.sparseFactorSolve(self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1abb89ebc7e3b4eb309d7e969a272ab635" kindref="member">sparseFactor</ref>,u)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clapack.denseFactorSolve(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>,</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1a365c65ce4d47c5ec4db4dceaf23ddfd1" kindref="member">denseFactor</ref>,</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u)</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aceb30deec6cc954fe8d10828295824c2" kindref="member">computeResidual</ref>(u,r,b)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref><sp/>-=<sp/>u</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ada014e7e6c0fee1d1e84357762b78505" kindref="member">converged</ref>(r)</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1ad9f2620bbe0002b3c6d65fcc93136490" kindref="member">calculateEigenvalues</ref>(self):</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clapack.denseCalculateEigenvalues(self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1affcc9dbd88d2785b52bbddece326fbef" kindref="member">JOBVL</ref>,</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1a9297c019cfa3e9fc2f3caf5f8b2c1ac8" kindref="member">JOBVR</ref>,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU_1a4152806ef0d1c206b4a92d4ff7effd40" kindref="member">Leig</ref>,</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1afb61fb399b64d5703cbe371a7c2c80de" kindref="member">eigenvalues_r</ref>,</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3026971f1b2f32d11de3de6a2716ca18" kindref="member">eigenvalues_i</ref>,</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ab2572aec6649e69740b829323c18122d" kindref="member">leftEigenvectors</ref>,</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a1386a1543c9f3ca9e4e76359a4aaa967" kindref="member">rightEigenvectors</ref>,</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a1587f95c72d292caf6566ef4c8273a71" kindref="member">work</ref>,</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5*self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eigen_mags<sp/>=<sp/>numpy.sqrt(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1afb61fb399b64d5703cbe371a7c2c80de" kindref="member">eigenvalues_r</ref>**2<sp/>+<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3026971f1b2f32d11de3de6a2716ca18" kindref="member">eigenvalues_i</ref>**2)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;Minimum<sp/>eigenvalue<sp/>magnitude&quot;</highlight><highlight class="normal">+repr(eigen_mags.min()))</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>eigenvalue<sp/>magnitude&quot;</highlight><highlight class="normal">+repr(eigen_mags.max()))</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;Minimum<sp/>real<sp/>part<sp/>of<sp/>eigenvalue<sp/>&quot;</highlight><highlight class="normal">+repr(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1afb61fb399b64d5703cbe371a7c2c80de" kindref="member">eigenvalues_r</ref>.<ref refid="db/dcc/jf_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>()))</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>real<sp/>part<sp/>of<sp/>eigenvalue<sp/>&quot;</highlight><highlight class="normal">+repr(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1afb61fb399b64d5703cbe371a7c2c80de" kindref="member">eigenvalues_r</ref>.<ref refid="d7/daa/group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>()))</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;Minimum<sp/>complex<sp/>part<sp/>of<sp/>eigenvalue<sp/>&quot;</highlight><highlight class="normal">+repr(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3026971f1b2f32d11de3de6a2716ca18" kindref="member">eigenvalues_i</ref>.<ref refid="db/dcc/jf_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>()))</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;Maximum<sp/>complex<sp/>part<sp/>of<sp/>eigenvalue<sp/>&quot;</highlight><highlight class="normal">+repr(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3026971f1b2f32d11de3de6a2716ca18" kindref="member">eigenvalues_i</ref>.<ref refid="d7/daa/group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>()))</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py" kindref="compound">KSP_petsc4py</ref>(<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver" kindref="compound">LinearSolver</ref>):</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>A<sp/>class<sp/>that<sp/>interfaces<sp/>Proteus<sp/>with<sp/>PETSc<sp/>KSP.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ab0d0048b0951936ef6a8638fa711651f" kindref="member">__init__</ref>(self,L,par_L,</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/><sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/><sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/><sp/><sp/><sp/>=<sp/>l2Norm,</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>&apos;r&apos;,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>False,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=None,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Preconditioner=None,</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionList=None,</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearSolverLocalBlockSize=1,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preconditionerOptions<sp/>=<sp/>None):</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Initialize<sp/>a<sp/>petsc4py<sp/>KSP<sp/>object.</highlight></codeline>
<codeline lineno="366"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="367"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----------</highlight></codeline>
<codeline lineno="369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>:<sp/>:class:<sp/>`.superluWrappers.SparseMatrix`</highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_L<sp/>:<sp/><sp/>:class:<sp/>`.LinearAlgebraTools.ParMat_petsc4py`</highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/>:<sp/>float</highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/>:<sp/>float</highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>:<sp/>int</highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>:<sp/><sp/><sp/>norm<sp/>type</highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>:</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates:<sp/>bool</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Preconditioner<sp/>:<sp/>:class:<sp/>`.LinearSolvers.KSP_Preconditioner`</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionList<sp/>:</highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearSolverLocalBlockSize<sp/>:<sp/>int</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preconditionerOptions<sp/>:<sp/>tuple</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>list<sp/>of<sp/>optional<sp/>preconditioner<sp/>settings.</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearSolver.__init__(self,</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r=rtol_r,</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r=atol_r,</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts=maxIts,</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>l2Norm,</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest=convergenceTest,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates=computeRates,</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo=printInfo)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(L).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;petsc4py<sp/>PETSc<sp/>can<sp/>only<sp/>be<sp/>called<sp/>with<sp/>a<sp/>local<sp/>sparse<sp/>matrix&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>isinstance(par_L,ParMat_petsc4py)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5a90b107c9dbaf10e8d57d36d3baf4b6" kindref="member">preconditionerOptions</ref><sp/>=<sp/>preconditionerOptions</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a50139ef85ee790b845fe4bef29212aef" kindref="member">solverName</ref><sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;PETSc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a528ab52f2a383f6c87c8591b1dfdea6d" kindref="member">par_fullOverlap</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a573edaeb7ff546547960c847908156a0" kindref="member">par_firstAssembly</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1aadcd940b4dd8ffb115308b98c266add1" kindref="member">par_L</ref><sp/><sp/><sp/>=<sp/>par_L</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref><sp/>=<sp/>par_L</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a98b22d734ddc28751b2e6fe39ae51c2a" kindref="member">csr_rep_local</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.csr_rep_local</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a2c3ee81a9a3a53a7c2ba10ad82722e28" kindref="member">csr_rep</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.csr_rep</highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>create<sp/>petsc4py<sp/>KSP<sp/>object<sp/>and<sp/>attach<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref><sp/>=<sp/>p4pyPETSc.KSP().create()</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1aa9e5d53d1d6fc26cd60539a6df69c83e" kindref="member">_setMatOperators</ref>()</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.setOperators(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>,self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a0a4ec193865c1acb6de7714511741764" kindref="member">setResTol</ref>(rtol_r,atol_r)</highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>prefix<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.setOptionsPrefix(prefix)</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Preconditioner<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ae0fb742a3e726f2d55a46db49b24e501" kindref="member">_setPreconditioner</ref>(Preconditioner,par_L,prefix)</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.setPC(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref>)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.max_it<sp/>=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a0426bc93cb83ccc084d78741eebc760f" kindref="member">maxIts</ref></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.setFromOptions()</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>set<sp/>null<sp/>space<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ac6ee3c2a3e0442528b4d17a2155c798c" kindref="member">null_space</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1afd0d6150f588beee23913bdbbd8016f1" kindref="member">_set_null_space_class</ref>()</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5f299d200b17f5539f340b451315626a" kindref="member">converged_on_maxit</ref>=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>convergenceTest<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[</highlight><highlight class="stringliteral">&apos;r-true&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;rits-true&apos;</highlight><highlight class="normal">]:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a3a4aa0e0b46bbdd98bc46a606cf2573d" kindref="member">r_work</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.getVecLeft()</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ac641612cd4fe3cbd26fac11ba5b7027f" kindref="member">rnorm0</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.setConvergenceTest(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a886f38d1dc5a1af3b0efcb95042a5da8" kindref="member">_converged_trueRes</ref>)</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>convergenceTest<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;rits-true&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5f299d200b17f5539f340b451315626a" kindref="member">converged_on_maxit</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a3a4aa0e0b46bbdd98bc46a606cf2573d" kindref="member">r_work</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a25520feb2b1c1dc39337ff24a9c795b6" kindref="member">setResTol</ref>(self,rtol,atol):</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Set<sp/>the<sp/>ksp<sp/>object&apos;s<sp/>residual<sp/>and<sp/>maximum<sp/>interations.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a1e4e8b7b8182046159d91ed8a8d8b6b8" kindref="member">rtol_r</ref><sp/>=<sp/>rtol</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3dad342e95d7508d8feec22908bb6b0c" kindref="member">atol_r</ref><sp/>=<sp/>atol</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.rtol<sp/>=<sp/>rtol</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.atol<sp/>=<sp/>atol</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;KSP<sp/>atol<sp/>%e<sp/>rtol<sp/>%e&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.atol,self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.rtol))</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a3c0b22a65d73f813a486e9abb7df2c35" kindref="member">prepare</ref>(self,</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b=None,</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc_setup_stage<sp/>=<sp/>p4pyPETSc.Log.Stage(</highlight><highlight class="stringliteral">&apos;pc_setup_stage&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc_setup_stage.push()</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.zeroEntries()</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.getBlockSize()<sp/>==<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;petsc4py<sp/>wrappers<sp/>currently<sp/>require<sp/>&apos;simple&apos;<sp/>blockVec<sp/>(blockSize=1)<sp/>approach&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.proteus_jacobian<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a2c3ee81a9a3a53a7c2ba10ad82722e28" kindref="member">csr_rep</ref>[2][self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.nzval_proteus2petsc]<sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.proteus_csr_rep[2][:]</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a528ab52f2a383f6c87c8591b1dfdea6d" kindref="member">par_fullOverlap</ref><sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.setValuesLocalCSR(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a98b22d734ddc28751b2e6fe39ae51c2a" kindref="member">csr_rep_local</ref>[0],self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a98b22d734ddc28751b2e6fe39ae51c2a" kindref="member">csr_rep_local</ref>[1],self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a98b22d734ddc28751b2e6fe39ae51c2a" kindref="member">csr_rep_local</ref>[2],p4pyPETSc.InsertMode.INSERT_VALUES)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a573edaeb7ff546547960c847908156a0" kindref="member">par_firstAssembly</ref>:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.setOption(p4pyPETSc.Mat.Option.NEW_NONZERO_LOCATION_ERR,</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a573edaeb7ff546547960c847908156a0" kindref="member">par_firstAssembly</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.setOption(p4pyPETSc.Mat.Option.NEW_NONZERO_LOCATION_ERR,</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.setValuesLocalCSR(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a2c3ee81a9a3a53a7c2ba10ad82722e28" kindref="member">csr_rep</ref>[0],self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a2c3ee81a9a3a53a7c2ba10ad82722e28" kindref="member">csr_rep</ref>[1],self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a2c3ee81a9a3a53a7c2ba10ad82722e28" kindref="member">csr_rep</ref>[2],p4pyPETSc.InsertMode.ADD_VALUES)</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.assemblyBegin()</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.assemblyEnd()</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.setOperators(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>,self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>)</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref>.setOperators(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>,self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref>.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a366c0156bae1fa74aa6618b70eb32085" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref>:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref>.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a366c0156bae1fa74aa6618b70eb32085" kindref="member">setUp</ref>(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>,newton_its)</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a366c0156bae1fa74aa6618b70eb32085" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.pc.setUp()</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pc_setup_stage.pop()</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a91fc04931c710cfbd75f55cf5bda72a7" kindref="member">solve</ref>(self,u,r=None,b=None,par_u=None,par_b=None,initialGuessIsZero=True):</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solve_stage<sp/>=<sp/>p4pyPETSc.Log.Stage(</highlight><highlight class="stringliteral">&apos;lin_solve&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solve_stage.push()</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>par_b.proteus2petsc_subdomain<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_b.proteus_array[:]<sp/>=<sp/>par_b.proteus_array[par_b.petsc2proteus_subdomain]</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_u.proteus_array[:]<sp/>=<sp/>par_u.proteus_array[par_u.petsc2proteus_subdomain]</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>if<sp/>self.petsc_L.isSymmetric(tol=1.0e-12):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>self.petsc_L.setOption(p4pyPETSc.Mat.Option.SYMMETRIC,<sp/>True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>print<sp/>&quot;Matrix<sp/>is<sp/>symmetric&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>else:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>print<sp/>&quot;MATRIX<sp/>IS<sp/>NONSYMMETRIC&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;before<sp/>ksp.rtol=<sp/>%s<sp/>ksp.atol=<sp/>%s<sp/>ksp.converged=<sp/>%s<sp/>ksp.its=<sp/>%s<sp/>ksp.norm=<sp/>%s<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.rtol,</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.atol,</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.converged,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.its,</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.norm))</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref>.par_b<sp/>=<sp/>par_b</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref>.par_u<sp/>=<sp/>par_u</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ade000c981eef35f4d9443cb4f4df3e06" kindref="member">matcontext</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ade000c981eef35f4d9443cb4f4df3e06" kindref="member">matcontext</ref>.par_b<sp/>=<sp/>par_b</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ac6ee3c2a3e0442528b4d17a2155c798c" kindref="member">null_space</ref>.apply_ns(par_b)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a91fc04931c710cfbd75f55cf5bda72a7" kindref="member">solve</ref>(par_b,par_u)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;after<sp/>ksp.rtol=<sp/>%s<sp/>ksp.atol=<sp/>%s<sp/>ksp.converged=<sp/>%s<sp/>ksp.its=<sp/>%s<sp/>ksp.norm=<sp/>%s<sp/>reason<sp/>=<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.rtol,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.atol,</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.converged,</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.its,</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.norm,</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.reason))</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a51634d8fa5d613668b93edfc6a14d887" kindref="member">its</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.its</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3006fd0084a2aab3d5ceccff6e2b96a1" kindref="member">printInfo</ref>:</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a481512c2ad6739b426d9609d9050dab8" kindref="member">info</ref>()</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>par_b.proteus2petsc_subdomain<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_b.proteus_array[:]<sp/>=<sp/>par_b.proteus_array[par_b.proteus2petsc_subdomain]</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_u.proteus_array[:]<sp/>=<sp/>par_u.proteus_array[par_u.proteus2petsc_subdomain]</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solve_stage.pop()</highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5904156f13d4a60b038af9ee15cf58b1" kindref="member">converged</ref>(self,r):</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="514"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>decide<sp/>on<sp/>convention<sp/>to<sp/>match<sp/>norms,<sp/>convergence<sp/>criteria</highlight></codeline>
<codeline lineno="515"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.converged</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6a5496653b15bed05123078339b321cf" kindref="member">failed</ref>(self):</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failedFlag<sp/>=<sp/>LinearSolver.failed(self)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;KSPpetsc4py<sp/>return<sp/>flag<sp/>{0}&quot;</highlight><highlight class="normal">.format(failedFlag))</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;KSP<sp/>converged<sp/>flag<sp/>{0}&quot;</highlight><highlight class="normal">.format(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.converged))</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>failedFlag<sp/>=<sp/>failedFlag<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.converged)</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>failedFlag</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a2299db7fdec60fc85d1c8aecb6f09c1b" kindref="member">info</ref>(self):</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a0e83368f5ff17dc0c8e17429623f09e2" kindref="member">ksp</ref>.view()</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_setMatOperators(self):</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Initializes<sp/>python<sp/>context<sp/>for<sp/>the<sp/>ksp<sp/>matrix<sp/>operator<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a37df1921f1cd2847775deba0ee050fb9" kindref="member">Lshell</ref><sp/>=<sp/>p4pyPETSc.Mat().create()</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_sizes<sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.getSizes()</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_range<sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.getOwnershipRange()</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a37df1921f1cd2847775deba0ee050fb9" kindref="member">Lshell</ref>.setSizes(L_sizes)</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a37df1921f1cd2847775deba0ee050fb9" kindref="member">Lshell</ref>.setType(</highlight><highlight class="stringliteral">&apos;python&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ade000c981eef35f4d9443cb4f4df3e06" kindref="member">matcontext</ref><sp/><sp/>=<sp/><ref refid="d0/d47/classproteus_1_1LinearAlgebraTools_1_1SparseMatShell" kindref="compound">SparseMatShell</ref>(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a114e9dcc8e7270d210ab1787f609931b" kindref="member">petsc_L</ref>.ghosted_csr_mat)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a37df1921f1cd2847775deba0ee050fb9" kindref="member">Lshell</ref>.setPythonContext(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ade000c981eef35f4d9443cb4f4df3e06" kindref="member">matcontext</ref>)</highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_converged_trueRes(self,ksp,its,rnorm):</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Function<sp/>handle<sp/>to<sp/>feed<sp/>to<sp/>ksp&apos;s<sp/>setConvergenceTest<sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp.buildResidual(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a3a4aa0e0b46bbdd98bc46a606cf2573d" kindref="member">r_work</ref>)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>truenorm<sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a3a4aa0e0b46bbdd98bc46a606cf2573d" kindref="member">r_work</ref>.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a0dc288c9cb856ef952a4a01425b2f1eb" kindref="member">norm</ref>()</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>its<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ac641612cd4fe3cbd26fac11ba5b7027f" kindref="member">rnorm0</ref><sp/>=<sp/>truenorm</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NumericalAnalytics<sp/>KSPOuterResidual:<sp/>%12.5e&quot;</highlight><highlight class="normal"><sp/>%(truenorm),<sp/>level=7)</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ac641612cd4fe3cbd26fac11ba5b7027f" kindref="member">rnorm0</ref><sp/>==<sp/>0.:</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NumericalAnalytics<sp/>KSPOuterResidual(relative):<sp/>N/A<sp/>(residual<sp/>vector<sp/>is<sp/>zero)&quot;</highlight><highlight class="normal">,<sp/>level=7<sp/>)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KSP<sp/>it<sp/>%i<sp/>norm(r)<sp/>=<sp/>%e<sp/><sp/>norm(r)/|b|<sp/>=<sp/>N/A<sp/>(residual<sp/>vector<sp/>is<sp/>zero)<sp/>;<sp/>atol=%e<sp/>rtol=%e<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>(its,</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>truenorm,</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp.atol,</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp.rtol))</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NumericalAnalytics<sp/>KSPOuterResidual(relative):<sp/>%12.5e&quot;</highlight><highlight class="normal"><sp/>%(old_div(truenorm,<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ac641612cd4fe3cbd26fac11ba5b7027f" kindref="member">rnorm0</ref>)),<sp/>level=7<sp/>)</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KSP<sp/>it<sp/>%i<sp/>norm(r)<sp/>=<sp/>%e<sp/><sp/>norm(r)/|b|<sp/>=<sp/>%e<sp/>;<sp/>atol=%e<sp/>rtol=%e<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>(its,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>truenorm,</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(old_div(truenorm,<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ac641612cd4fe3cbd26fac11ba5b7027f" kindref="member">rnorm0</ref>)),</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp.atol,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp.rtol))</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NumericalAnalytics<sp/>KSPOuterResidual:<sp/>%12.5e&quot;</highlight><highlight class="normal"><sp/>%(truenorm),<sp/>level=7)</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NumericalAnalytics<sp/>KSPOuterResidual(relative):<sp/>%12.5e&quot;</highlight><highlight class="normal"><sp/>%(old_div(truenorm,<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ac641612cd4fe3cbd26fac11ba5b7027f" kindref="member">rnorm0</ref>)),<sp/>level=7)</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KSP<sp/>it<sp/>%i<sp/>norm(r)<sp/>=<sp/>%e<sp/><sp/>norm(r)/|b|<sp/>=<sp/>%e<sp/>;<sp/>atol=%e<sp/>rtol=%e<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>(its,</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>truenorm,</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(old_div(truenorm,<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ac641612cd4fe3cbd26fac11ba5b7027f" kindref="member">rnorm0</ref>)),</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp.atol,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp.rtol))</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>truenorm<sp/>&lt;<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1ac641612cd4fe3cbd26fac11ba5b7027f" kindref="member">rnorm0</ref>*ksp.rtol:</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p4pyPETSc.KSP.ConvergedReason.CONVERGED_RTOL</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>truenorm<sp/>&lt;<sp/>ksp.atol:</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p4pyPETSc.KSP.ConvergedReason.CONVERGED_ATOL</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5f299d200b17f5539f340b451315626a" kindref="member">converged_on_maxit</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>its<sp/>==<sp/>ksp.max_it:</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p4pyPETSc.KSP.ConvergedReason.CONVERGED_ITS</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_setPreconditioner(self,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Preconditioner,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_L,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix):</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Sets<sp/>the<sp/>preconditioner<sp/>type<sp/>used<sp/>in<sp/>the<sp/>KSP<sp/>object<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Preconditioner<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>petsc_LU:</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NAHeader<sp/>Precondtioner<sp/>LU&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU" kindref="compound">petsc_LU</ref>(par_L,</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix)</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref>.pc</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>petsc_ASM:</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NAHead<sp/>Preconditioner<sp/>ASM&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="de/d58/classproteus_1_1LinearSolvers_1_1petsc__ASM" kindref="compound">petsc_ASM</ref>(par_L,</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref>.pc</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>Jacobi:</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref>=<sp/>Preconditioner(L,</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=1.0,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r=rtol_r,</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r=atol_r,</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts=1,</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>l2Norm,</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest=</highlight><highlight class="stringliteral">&apos;its&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>p4pyPETSc.PC().createPython(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref>)</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>GaussSeidel:</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref>=<sp/>Preconditioner(connectionList,</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=1.0,</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r=rtol_r,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r=atol_r,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts=1,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>l2Norm,</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest=</highlight><highlight class="stringliteral">&apos;its&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>p4pyPETSc.PC().createPython(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref>)</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>LU:</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#ARB<sp/>-<sp/>parallel<sp/>matrices<sp/>from<sp/>PETSc4py<sp/>don&apos;t<sp/>work<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref><sp/>=<sp/>Preconditioner(L)</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>p4pyPETSc.PC().createPython(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref>)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>StarILU:</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref>=<sp/>Preconditioner(connectionList,</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=1.0,</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r=rtol_r,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r=atol_r,</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts=1,</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>l2Norm,</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest=</highlight><highlight class="stringliteral">&apos;its&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>p4pyPETSc.PC().createPython(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref>)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>StarBILU:</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref>=<sp/>Preconditioner(connectionList,</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bs=linearSolverLocalBlockSize,</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=1.0,</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r=rtol_r,</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r=atol_r,</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts=1,</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>l2Norm,</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest=</highlight><highlight class="stringliteral">&apos;its&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>p4pyPETSc.PC().createPython(self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a6f455fe4a745174e5334eb2b1fc4b711" kindref="member">pccontext</ref>)</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>SimpleNavierStokes3D:</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NAHeader<sp/>Preconditioner<sp/>SimpleNavierStokes&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="dc/d03/namespaceproteus_1_1LinearSolvers_1ad7d344c3a1f924d39337442213ae2b5b" kindref="member">SimpleNavierStokes3D</ref>(par_L,</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix,</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner=self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5a90b107c9dbaf10e8d57d36d3baf4b6" kindref="member">preconditionerOptions</ref>[0])</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>IndexError:</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;Preconditioner<sp/>options<sp/>not<sp/>specified,<sp/>using<sp/>defaults&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="dc/d03/namespaceproteus_1_1LinearSolvers_1ad7d344c3a1f924d39337442213ae2b5b" kindref="member">SimpleNavierStokes3D</ref>(par_L,</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix)</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref>.pc</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>SimpleNavierStokes2D:</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NAHeader<sp/>Preconditioner<sp/>SimpleNavierStokes&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="dc/d03/namespaceproteus_1_1LinearSolvers_1a3a4ca1b252c01b1b612bc83649f407c0" kindref="member">SimpleNavierStokes2D</ref>(par_L,</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix,</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner=self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5a90b107c9dbaf10e8d57d36d3baf4b6" kindref="member">preconditionerOptions</ref>[0])</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>IndexError:</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;Preconditioner<sp/>options<sp/>not<sp/>specified,<sp/>using<sp/>defaults&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="dc/d03/namespaceproteus_1_1LinearSolvers_1a3a4ca1b252c01b1b612bc83649f407c0" kindref="member">SimpleNavierStokes2D</ref>(par_L,</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref>.pc</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>Schur_Sp:</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NAHeader<sp/>Preconditioner<sp/>selfp&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp" kindref="compound">Schur_Sp</ref>(par_L,</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix,</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner=self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5a90b107c9dbaf10e8d57d36d3baf4b6" kindref="member">preconditionerOptions</ref>[0])</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>IndexError:</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;Preconditioner<sp/>options<sp/>not<sp/>specified,<sp/>using<sp/>defaults&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp" kindref="compound">Schur_Sp</ref>(par_L,</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix)</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref>.pc</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>Schur_Qp:</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NAHeader<sp/>Preconditioner<sp/>Qp&quot;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp" kindref="compound">Schur_Qp</ref>(par_L,</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix)</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref>.pc</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>NavierStokes_TwoPhasePCD:</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NAHeader<sp/>Preconditioner<sp/>TwoPhasePCD&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD" kindref="compound">NavierStokes_TwoPhasePCD</ref>(par_L,</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>density_scaling=self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5a90b107c9dbaf10e8d57d36d3baf4b6" kindref="member">preconditionerOptions</ref>[0],</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numerical_viscosity=self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5a90b107c9dbaf10e8d57d36d3baf4b6" kindref="member">preconditionerOptions</ref>[1],</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped=self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5a90b107c9dbaf10e8d57d36d3baf4b6" kindref="member">preconditionerOptions</ref>[2],</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_chebyshev_its=self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5a90b107c9dbaf10e8d57d36d3baf4b6" kindref="member">preconditionerOptions</ref>[3],</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>laplace_null_space=self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5a90b107c9dbaf10e8d57d36d3baf4b6" kindref="member">preconditionerOptions</ref>[4],</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner=self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5a90b107c9dbaf10e8d57d36d3baf4b6" kindref="member">preconditionerOptions</ref>[5])</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>IndexError:</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;Preconditioner<sp/>options<sp/>not<sp/>specified,<sp/>using<sp/>defaults&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD" kindref="compound">NavierStokes_TwoPhasePCD</ref>(par_L,</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix)</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref>.pc</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>Schur_LSC:</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NAHeader<sp/>Preconditioner<sp/>LSC&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC" kindref="compound">Schur_LSC</ref>(par_L,</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix)</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref>.pc</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>SimpleDarcyFC:</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC" kindref="compound">SimpleDarcyFC</ref>(par_L)</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref>.pc</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>Preconditioner<sp/>==<sp/>NavierStokesPressureCorrection:</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref><sp/>=<sp/><ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection" kindref="compound">NavierStokesPressureCorrection</ref>(par_L,</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix)</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1a5954fa2d847fd696a31e08f70da6883d" kindref="member">pc</ref><sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1acd06557feefb547529136178064508e3" kindref="member">preconditioner</ref>.pc</highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_set_null_space_class(self):</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_module<sp/>=<sp/>sys.modules[__name__]</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_space_cls_name<sp/>=<sp/>self.<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py_1aadcd940b4dd8ffb115308b98c266add1" kindref="member">par_L</ref>.pde.coefficients.nullSpace</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_space_cls<sp/>=<sp/>getattr(current_module,</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_space_cls_name)</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null_space_cls(self)</highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717" refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor" kindref="compound">SchurOperatorConstructor</ref>(object):</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="719"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Generate<sp/>matrices<sp/>for<sp/>use<sp/>in<sp/>Schur<sp/>complement<sp/>preconditioner<sp/>operators.</highlight></codeline>
<codeline lineno="720"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ae7f4daa73943cdf86429458cdc7794e9" kindref="member">__init__</ref>(self,<sp/>linear_smoother,<sp/>pde_type=&apos;general_saddle_point&apos;):</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="723"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>a<sp/>Schur<sp/>Operator<sp/>constructor.</highlight></codeline>
<codeline lineno="724"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="725"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="726"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="727"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linear_smoother<sp/>:<sp/>class</highlight></codeline>
<codeline lineno="728"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Provides<sp/>the<sp/>data<sp/>about<sp/>the<sp/>problem.</highlight></codeline>
<codeline lineno="729"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pde_type<sp/>:<sp/><sp/>str</highlight></codeline>
<codeline lineno="730"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Currently<sp/>supports<sp/>Stokes<sp/>and<sp/>navierStokes</highlight></codeline>
<codeline lineno="731"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="d1/d5a/namespaceproteus_1_1mprans" kindref="compound">proteus.mprans</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>RANS2P</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>linear_smoother.PCType!=</highlight><highlight class="stringliteral">&apos;schur&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>Exception(</highlight><highlight class="stringliteral">&apos;This<sp/>function<sp/>only<sp/>works<sp/>with<sp/>the&apos;</highlight><highlight class="normal"><sp/>\</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;LinearSmoothers<sp/>for<sp/>Schur<sp/>Complements.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a0b9164180a98d52931015236cb828f1f" kindref="member">linear_smoother</ref>=linear_smoother</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref><sp/>=<sp/>linear_smoother.L</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a13f2b5aadc82497ef518a7e4a9775443" kindref="member">pde_type</ref><sp/>=<sp/>pde_type</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ARB<sp/>TODO<sp/>:<sp/>the<sp/>Schur<sp/>class<sp/>should<sp/>be<sp/>refactored<sp/>to<sp/>avoid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>follow<sp/>expection<sp/>statement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde,<sp/>RANS2P.LevelModel):</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref><sp/>=<sp/><ref refid="da/ddf/classproteus_1_1LinearSolvers_1_1OperatorConstructor__rans2p" kindref="compound">OperatorConstructor_rans2p</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde)</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref><sp/>=<sp/><ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel" kindref="compound">OperatorConstructor_oneLevel</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde)</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a951933a26e5fbc22bbff1ed256070438" kindref="member">_phase_func</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde.coefficients.which_region</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_initializeMat(self,jacobian):</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Comm</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm<sp/>=<sp/>Comm.get()</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>transport<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowptr,<sp/>colind,<sp/>nzval<sp/>=<sp/>jacobian.getCSRrepresentation()</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowptr_petsc<sp/>=<sp/>rowptr.copy()</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colind_petsc<sp/>=<sp/>colind.copy()</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval[:]<sp/>=<sp/>numpy.arange(nzval.shape[0])</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_petsc<sp/>=<sp/>nzval.copy()</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_proteus2petsc=colind.copy()</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_petsc2proteus=colind.copy()</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowptr_petsc[0]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm.beginSequential()</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(LAT.ParInfo_petsc4py.par_n+LAT.ParInfo_petsc4py.par_nghost):</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_proteus<sp/>=<sp/>rowptr[LAT.ParInfo_petsc4py.petsc2proteus_subdomain[i]]</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_proteus<sp/>=<sp/>rowptr[LAT.ParInfo_petsc4py.petsc2proteus_subdomain[i]+1]</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzrow<sp/>=<sp/><sp/>end_proteus<sp/>-<sp/>start_proteus</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowptr_petsc[i+1]<sp/>=<sp/>rowptr_petsc[i]<sp/>+<sp/>nzrow</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_petsc<sp/>=<sp/>rowptr_petsc[i]</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end_petsc<sp/>=<sp/>rowptr_petsc[i+1]</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>petsc_cols_i<sp/>=<sp/>LAT.ParInfo_petsc4py.proteus2petsc_subdomain[colind[start_proteus:end_proteus]]</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j_sorted<sp/>=<sp/>petsc_cols_i.argsort()</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colind_petsc[start_petsc:end_petsc]<sp/>=<sp/>petsc_cols_i[j_sorted]</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_petsc[start_petsc:end_petsc]<sp/>=<sp/>nzval[start_proteus:end_proteus][j_sorted]</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j_petsc,<sp/>j_proteus<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(numpy.arange(start_petsc,end_petsc),</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numpy.arange(start_proteus,end_proteus)[j_sorted]):</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_petsc2proteus[j_petsc]<sp/>=<sp/>j_proteus</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_proteus2petsc[j_proteus]<sp/>=<sp/>j_petsc</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm.endSequential()</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(nzval_petsc.shape[0]<sp/>==<sp/>colind_petsc.shape[0]<sp/>==<sp/>rowptr_petsc[-1]<sp/>-<sp/>rowptr_petsc[0])</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>petsc_a<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proteus_a<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(transport.dim):</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j,k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(colind[rowptr[i]:rowptr[i+1]],list(range(rowptr[i],rowptr[i+1]))):</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval[k]<sp/>=<sp/>i*transport.dim+j</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proteus_a[i,j]<sp/>=<sp/>nzval[k]</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>petsc_a[LAT.ParInfo_petsc4py.proteus2petsc_subdomain[i],LAT.ParInfo_petsc4py.proteus2petsc_subdomain[j]]<sp/>=<sp/>nzval[k]</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(transport.dim):</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j,k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(colind_petsc[rowptr_petsc[i]:rowptr_petsc[i+1]],list(range(rowptr_petsc[i],rowptr_petsc[i+1]))):</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_petsc[k]<sp/>=<sp/>petsc_a[i,j]</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a42ae20ab68e5e9fc1025868daed76eea" kindref="member">SparseMat</ref>(transport.dim,transport.dim,nzval_petsc.shape[0],<sp/>nzval_petsc,<sp/>colind_petsc,<sp/>rowptr_petsc)</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a3ebf8d434dffcb7eed8a3e6e2bc04536" kindref="member">initializeTwoPhaseCp_rho</ref>(self):</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Initialize<sp/>a<sp/>two<sp/>phase<sp/>scaled<sp/>advection<sp/>operator<sp/>Cp.</highlight></codeline>
<codeline lineno="800"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="801"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="802"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="803"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two_phase_Cp_rho<sp/>:<sp/>matrix</highlight></codeline>
<codeline lineno="804"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Comm</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm<sp/>=<sp/>Comm.get()</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.attachTPAdvectionOperator()</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a0b9164180a98d52931015236cb828f1f" kindref="member">linear_smoother</ref>.L.pde.par_info</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>comm.size()<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPScaledAdvectionOperator,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.subdomain2global)</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mixed<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mixed<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a317567070666bc1fbd20428faf17bfa9" kindref="member">petsc_two_phase_Cp_rho</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1add8bcb97a428a5f220b5e70a0166d107" kindref="member">_initializeMat</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPScaledAdvectionOperator)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a317567070666bc1fbd20428faf17bfa9" kindref="member">petsc_two_phase_Cp_rho</ref>,</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.petsc_subdomain2global_petsc,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pde=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proteus_jacobian=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPScaledAdvectionOperator,</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_proteus2petsc=par_info.nzval_proteus2petsc)</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPScaledAdvectionOperator,</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.subdomain2global,</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pde=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aade7512eddeaca483bdb0fdb1773f4d9" kindref="member">two_phase_Cp_rho_csr_rep</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref>.csr_rep</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a72e106f783e60c813b8b83a4cfc8f8bb" kindref="member">two_phase_Cp_rho_csr_rep_local</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref>.csr_rep_local</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref></highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a4fa24791da6dc40a2f16156564ce7733" kindref="member">initializeTwoPhaseInvScaledAp</ref>(self):</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Initialize<sp/>a<sp/>two<sp/>phase<sp/>scaled<sp/>laplace<sp/>operator<sp/>Ap.</highlight></codeline>
<codeline lineno="843"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="844"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="845"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="846"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two_phase_Ap_inv<sp/>:<sp/>matrix</highlight></codeline>
<codeline lineno="847"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Comm</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm<sp/>=<sp/>Comm.get()</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.attachLaplaceOperator()</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a0b9164180a98d52931015236cb828f1f" kindref="member">linear_smoother</ref>.L.pde.par_info</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>comm.size()<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPInvScaledLaplaceOperator,</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.subdomain2global)</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mixed<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mixed<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a0bba971fceeadda004ef708a970a9510" kindref="member">petsc_two_phase_Ap_inv</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1add8bcb97a428a5f220b5e70a0166d107" kindref="member">_initializeMat</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPInvScaledLaplaceOperator)</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a0bba971fceeadda004ef708a970a9510" kindref="member">petsc_two_phase_Ap_inv</ref>,</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.petsc_subdomain2global_petsc,</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pde=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde,</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proteus_jacobian=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPInvScaledLaplaceOperator,</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_proteus2petsc=par_info.nzval_proteus2petsc)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPInvScaledLaplaceOperator,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.subdomain2global,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pde=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a8df2f11201c532d2c45737c80410f9b9" kindref="member">two_phase_Ap_inv_csr_rep</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref>.csr_rep</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a3759c44f634829d4ff28dd9dac652dae" kindref="member">two_phase_Ap_inv_csr_rep_local</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref>.csr_rep_local</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1af13c90f2c1f88afc3cf50a6e4c5c9b47" kindref="member">initializeTwoPhaseQp_rho</ref>(self):</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Initialize<sp/>a<sp/>two<sp/>phase<sp/>scaled<sp/>mass<sp/>matrix.</highlight></codeline>
<codeline lineno="886"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="887"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="888"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="889"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two_phase_Ap_inv<sp/>:<sp/>matrix</highlight></codeline>
<codeline lineno="890"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Comm</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm<sp/>=<sp/>Comm.get()</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.attachScaledMassOperator()</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a0b9164180a98d52931015236cb828f1f" kindref="member">linear_smoother</ref>.L.pde.par_info</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>comm.size()<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPScaledMassOperator,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.subdomain2global)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mixed<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mixed<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a18bad331ec54912b4909bf258aeb5b35" kindref="member">petsc_two_phase_Qp_scaled</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1add8bcb97a428a5f220b5e70a0166d107" kindref="member">_initializeMat</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPScaledMassOperator)</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a18bad331ec54912b4909bf258aeb5b35" kindref="member">petsc_two_phase_Qp_scaled</ref>,</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.petsc_subdomain2global_petsc,</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pde=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde,</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proteus_jacobian=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPScaledMassOperator,</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_proteus2petsc=par_info.nzval_proteus2petsc)</highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPScaledMassOperator,</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.subdomain2global)</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a9c995f3445312a175006f1d937ca598a" kindref="member">two_phase_Qp_scaled_csr_rep</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref>.csr_rep</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a29aa5bc3d2524712848a633647717e5b" kindref="member">two_phase_Qp_scaled_csr_rep_local</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref>.csr_rep_local</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a3deca3dfa9807d74b0f9fd6d41a7526c" kindref="member">initializeTwoPhaseInvScaledQp</ref>(self):</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Initialize<sp/>a<sp/>two<sp/>phase<sp/>scaled<sp/>mass<sp/>operator<sp/>Qp.</highlight></codeline>
<codeline lineno="928"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="929"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="930"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="931"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two_phase_Ap_inv<sp/>:<sp/>matrix</highlight></codeline>
<codeline lineno="932"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Comm</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm<sp/>=<sp/>Comm.get()</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.attachInvScaledMassOperator()</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a0b9164180a98d52931015236cb828f1f" kindref="member">linear_smoother</ref>.L.pde.par_info</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>comm.size()<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPInvScaledMassOperator,</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.subdomain2global)</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mixed<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mixed<sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aca5c18f80c58b57d39720c9ed2955911" kindref="member">petsc_two_phase_Qp_inv</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1add8bcb97a428a5f220b5e70a0166d107" kindref="member">_initializeMat</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPInvScaledMassOperator)</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aca5c18f80c58b57d39720c9ed2955911" kindref="member">petsc_two_phase_Qp_inv</ref>,</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.petsc_subdomain2global_petsc,</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pde=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde,</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proteus_jacobian=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPInvScaledMassOperator,</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_proteus2petsc=par_info.nzval_proteus2petsc)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.TPInvScaledMassOperator,</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.subdomain2global)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a9185f156712c6ff35e9319fd6b5941ce" kindref="member">two_phase_Qp_inv_csr_rep</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref>.csr_rep</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abd1dd51fd5956bd088ca7f8609b373ad" kindref="member">two_phase_Qp_inv_csr_rep_local</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref>.csr_rep_local</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref></highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a1ab74c44155e3a827bbcd0be8b4a5487" kindref="member">initializeQ</ref>(self):</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Initialize<sp/>a<sp/>mass<sp/>matrix<sp/>Q.</highlight></codeline>
<codeline lineno="970"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="971"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="972"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="973"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q<sp/>:<sp/>matrix</highlight></codeline>
<codeline lineno="974"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>mass<sp/>matrix.</highlight></codeline>
<codeline lineno="975"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Comm</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm<sp/>=<sp/>Comm.get()</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.attachMassOperator()</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a0b9164180a98d52931015236cb828f1f" kindref="member">linear_smoother</ref>.L.pde.par_info</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>comm.size()<sp/>==<sp/>1:</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>par_info.mixed<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.MassOperator,</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.subdomain2global)</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.MassOperator,</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.subdomain2global,</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pde=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde)</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>par_info.mixed<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1adc2dcb2215481b56f2f78d05c6d4d653" kindref="member">petsc_Q</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1add8bcb97a428a5f220b5e70a0166d107" kindref="member">_initializeMat</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.MassOperator)</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.MassOperator,</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.petsc_subdomain2global_petsc,</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pde=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde,</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proteus_jacobian=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.MassOperator,</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_proteus2petsc=par_info.nzval_proteus2petsc)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref><sp/>=<sp/><ref refid="db/d32/classproteus_1_1LinearAlgebraTools_1_1ParMat__petsc4py" kindref="compound">ParMat_petsc4py</ref>(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1adc2dcb2215481b56f2f78d05c6d4d653" kindref="member">petsc_Q</ref>,</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_bs,</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_n,</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_N,</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.par_nghost,</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info.petsc_subdomain2global_petsc,</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pde=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa3b145ef516e6271c860bc8416a969e1" kindref="member">L</ref>.pde,</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proteus_jacobian=self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.MassOperator,</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nzval_proteus2petsc=par_info.nzval_proteus2petsc)</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a3cfb1526a2f921e734f6b75c2ffb2c17" kindref="member">Q_csr_rep</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref>.csr_rep</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1acc2353b91a213c816c00a517b9b74c8f" kindref="member">Q_csr_rep_local</ref><sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref>.csr_rep_local</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1acf2eff31fb69dd5011546a820bb861e5" kindref="member">updateQ</ref>(self,</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_matrix<sp/>=<sp/>False):</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1025"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update<sp/>the<sp/>mass<sp/>matrix<sp/>operator.</highlight></codeline>
<codeline lineno="1026"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1027"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1028"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1029"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_matrix<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1030"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Save<sp/>updated<sp/>mass<sp/>operator.</highlight></codeline>
<codeline lineno="1031"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.updateMassOperator()</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref>.zeroEntries()</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref>.proteus_jacobian<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a3cfb1526a2f921e734f6b75c2ffb2c17" kindref="member">Q_csr_rep</ref>[2][self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref>.nzval_proteus2petsc]<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref>.proteus_csr_rep[2][:]</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref>.setValuesLocalCSR(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1acc2353b91a213c816c00a517b9b74c8f" kindref="member">Q_csr_rep_local</ref>[0],</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1acc2353b91a213c816c00a517b9b74c8f" kindref="member">Q_csr_rep_local</ref>[1],</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1acc2353b91a213c816c00a517b9b74c8f" kindref="member">Q_csr_rep_local</ref>[2],</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4pyPETSc.InsertMode.INSERT_VALUES)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref>.assemblyBegin()</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref>.assemblyEnd()</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>output_matrix<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._exportMatrix(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a03d76a9687e95f04e2b768c4b3577024" kindref="member">Q</ref>,</highlight><highlight class="stringliteral">&apos;Q&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a3f45ef86ccefa55474e2e959e7712fd3" kindref="member">updateNp_rho</ref>(self,</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>density_scaling<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_matrix<sp/>=<sp/>False):</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1049"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update<sp/>the<sp/>two-phase<sp/>advection<sp/>operator.</highlight></codeline>
<codeline lineno="1050"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1051"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1052"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1053"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>density_scaling<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1054"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>advection<sp/>terms<sp/>should<sp/>be<sp/>scaled<sp/>with</highlight></codeline>
<codeline lineno="1055"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>density<sp/>(True)<sp/>or<sp/>1<sp/>(False)</highlight></codeline>
<codeline lineno="1056"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_matrix<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1057"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Save<sp/>updated<sp/>advection<sp/>operator.</highlight></codeline>
<codeline lineno="1058"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.updateTPAdvectionOperator(density_scaling)</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref>.zeroEntries()</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref>.proteus_jacobian<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aade7512eddeaca483bdb0fdb1773f4d9" kindref="member">two_phase_Cp_rho_csr_rep</ref>[2][self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref>.nzval_proteus2petsc]<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref>.proteus_csr_rep[2][:]</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref>.setValuesLocalCSR(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a72e106f783e60c813b8b83a4cfc8f8bb" kindref="member">two_phase_Cp_rho_csr_rep_local</ref>[0],</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a72e106f783e60c813b8b83a4cfc8f8bb" kindref="member">two_phase_Cp_rho_csr_rep_local</ref>[1],</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a72e106f783e60c813b8b83a4cfc8f8bb" kindref="member">two_phase_Cp_rho_csr_rep_local</ref>[2],</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4pyPETSc.InsertMode.INSERT_VALUES)</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref>.assemblyBegin()</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref>.assemblyEnd()</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>output_matrix<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._exportMatrix(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a67c4509b9ee23b1ebf90aa7843a5dec7" kindref="member">two_phase_Cp_rho</ref>,</highlight><highlight class="stringliteral">&apos;Cp_rho&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ab163b0d6234630f9d581f4bdbfac7a84" kindref="member">updateInvScaledAp</ref>(self,</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_matrix<sp/>=<sp/>False):</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Update<sp/>the<sp/>two-phase<sp/>laplace<sp/>operator.</highlight></codeline>
<codeline lineno="1075"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1076"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1077"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1078"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_matrix<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1079"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Save<sp/>updated<sp/>laplace<sp/>operator.</highlight></codeline>
<codeline lineno="1080"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.updateTPInvScaledLaplaceOperator()</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref>.zeroEntries()</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref>.proteus_jacobian<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a8df2f11201c532d2c45737c80410f9b9" kindref="member">two_phase_Ap_inv_csr_rep</ref>[2][self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref>.nzval_proteus2petsc]<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref>.proteus_csr_rep[2][:]</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref>.setValuesLocalCSR(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a3759c44f634829d4ff28dd9dac652dae" kindref="member">two_phase_Ap_inv_csr_rep_local</ref>[0],</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a3759c44f634829d4ff28dd9dac652dae" kindref="member">two_phase_Ap_inv_csr_rep_local</ref>[1],</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a3759c44f634829d4ff28dd9dac652dae" kindref="member">two_phase_Ap_inv_csr_rep_local</ref>[2],</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4pyPETSc.InsertMode.INSERT_VALUES)</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref>.assemblyBegin()</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref>.assemblyEnd()</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>output_matrix<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._exportMatrix(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ade305ed23147412dd88e5ac01dc31a3a" kindref="member">two_phase_Ap_inv</ref>,</highlight><highlight class="stringliteral">&apos;Cp_rho&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a2070420f384041c4e0c987c975fbebc9" kindref="member">updateTwoPhaseQp_rho</ref>(self,</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>density_scaling<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_matrix=False):</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Update<sp/>the<sp/>two-phase<sp/>inverse<sp/>viscosity<sp/>scaled<sp/>mass<sp/>matrix.</highlight></codeline>
<codeline lineno="1099"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1100"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>density<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>the<sp/>density<sp/>mass<sp/>matrix<sp/>should</highlight></codeline>
<codeline lineno="1104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>scaled<sp/>with<sp/>rho<sp/>(True)<sp/>or<sp/>1<sp/>(False).</highlight></codeline>
<codeline lineno="1105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flag<sp/>indicating<sp/>whether<sp/>the<sp/>mass<sp/>operator<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="1107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculated<sp/>as<sp/>a<sp/>lumped<sp/>matrix<sp/>(True)<sp/>or<sp/>as<sp/>a<sp/>full</highlight></codeline>
<codeline lineno="1108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>(False).</highlight></codeline>
<codeline lineno="1109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_matrix<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Save<sp/>updated<sp/>mass<sp/>operator.</highlight></codeline>
<codeline lineno="1111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.updateTwoPhaseMassOperator_rho(density_scaling<sp/>=<sp/>density_scaling,</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>=<sp/>lumped)</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref>.zeroEntries()</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref>.proteus_jacobian<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a9c995f3445312a175006f1d937ca598a" kindref="member">two_phase_Qp_scaled_csr_rep</ref>[2][self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref>.nzval_proteus2petsc]<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref>.proteus_csr_rep[2][:]</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref>.setValuesLocalCSR(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a29aa5bc3d2524712848a633647717e5b" kindref="member">two_phase_Qp_scaled_csr_rep_local</ref>[0],</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a29aa5bc3d2524712848a633647717e5b" kindref="member">two_phase_Qp_scaled_csr_rep_local</ref>[1],</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a29aa5bc3d2524712848a633647717e5b" kindref="member">two_phase_Qp_scaled_csr_rep_local</ref>[2],</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4pyPETSc.InsertMode.INSERT_VALUES)</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref>.assemblyBegin()</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref>.assemblyEnd()</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>output_matrix<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._exportMatrix(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref>,</highlight><highlight class="stringliteral">&apos;Qp_scaled&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ab68a8497233c35fa4ef9f69768e659bd" kindref="member">updateTwoPhaseInvScaledQp_visc</ref>(self,</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numerical_viscosity<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_matrix=False):</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update<sp/>the<sp/>two-phase<sp/>inverse<sp/>viscosity<sp/>scaled<sp/>mass<sp/>matrix.</highlight></codeline>
<codeline lineno="1132"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1135"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numerical_viscosity<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>the<sp/>numerical<sp/>viscosity<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="1137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>included<sp/>with<sp/>the<sp/>mass<sp/>operator<sp/>(True<sp/>to<sp/>include,</highlight></codeline>
<codeline lineno="1138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>False<sp/>to<sp/>exclude)</highlight></codeline>
<codeline lineno="1139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flag<sp/>indicating<sp/>whether<sp/>the<sp/>mass<sp/>operator<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="1141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>calculated<sp/>as<sp/>a<sp/>lumped<sp/>matrix<sp/>(True)<sp/>or<sp/>as<sp/>a<sp/>full</highlight></codeline>
<codeline lineno="1142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrix<sp/>(False).</highlight></codeline>
<codeline lineno="1143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_matrix<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Save<sp/>updated<sp/>mass<sp/>operator.</highlight></codeline>
<codeline lineno="1145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.updateTwoPhaseInvScaledMassOperator(numerical_viscosity<sp/>=<sp/>numerical_viscosity,</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>=<sp/>lumped)</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref>.zeroEntries()</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref>.proteus_jacobian<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a9185f156712c6ff35e9319fd6b5941ce" kindref="member">two_phase_Qp_inv_csr_rep</ref>[2][self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref>.nzval_proteus2petsc]<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref>.proteus_csr_rep[2][:]</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref>.setValuesLocalCSR(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abd1dd51fd5956bd088ca7f8609b373ad" kindref="member">two_phase_Qp_inv_csr_rep_local</ref>[0],</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abd1dd51fd5956bd088ca7f8609b373ad" kindref="member">two_phase_Qp_inv_csr_rep_local</ref>[1],</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abd1dd51fd5956bd088ca7f8609b373ad" kindref="member">two_phase_Qp_inv_csr_rep_local</ref>[2],</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p4pyPETSc.InsertMode.INSERT_VALUES)</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref>.assemblyBegin()</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abca18834f8ebbae67d252cf645354329" kindref="member">two_phase_Qp_inv</ref>.assemblyEnd()</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>output_matrix<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._exportMatrix(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a560c4437accec77b9d161ea796f8745d" kindref="member">two_phase_Qp_scaled</ref>,</highlight><highlight class="stringliteral">&apos;Qp_scaled&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1aa138127f97bdffa6da55563a27659a6e" kindref="member">getQv</ref>(self,<sp/>output_matrix=False,<sp/>recalculate=False):</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Return<sp/>the<sp/>pressure<sp/>mass<sp/>matrix<sp/>Qp.</highlight></codeline>
<codeline lineno="1162"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_matrix<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Determines<sp/>whether<sp/>matrix<sp/>should<sp/>be<sp/>exported.</highlight></codeline>
<codeline lineno="1167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recalculate<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flag<sp/>indicating<sp/>whether<sp/>matrix<sp/>should<sp/>be<sp/>rebuilt<sp/>every<sp/>iteration</highlight></codeline>
<codeline lineno="1169"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="1171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="1172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qp<sp/>:<sp/>matrix</highlight></codeline>
<codeline lineno="1173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>pressure<sp/>mass<sp/>matrix.</highlight></codeline>
<codeline lineno="1174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qsys_petsc4py<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a8da1c4ed77d71f500253547b9a138c72" kindref="member">_massMatrix</ref>(recalculate<sp/>=<sp/>recalculate)</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ac0b6d7e85c3abb004f033381735c26ac" kindref="member">Qv</ref><sp/>=<sp/>Qsys_petsc4py.createSubMatrix(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a0b9164180a98d52931015236cb828f1f" kindref="member">linear_smoother</ref>.isv,</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a0b9164180a98d52931015236cb828f1f" kindref="member">linear_smoother</ref>.isv)</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>output_matrix<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._exportMatrix(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ac0b6d7e85c3abb004f033381735c26ac" kindref="member">Qv</ref>,</highlight><highlight class="stringliteral">&quot;Qv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ac0b6d7e85c3abb004f033381735c26ac" kindref="member">Qv</ref></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ae99e26577b00546ca9d04c66df82eae2" kindref="member">getQp</ref>(self,<sp/>output_matrix=False,<sp/>recalculate=False):</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Return<sp/>the<sp/>pressure<sp/>mass<sp/>matrix<sp/>Qp.</highlight></codeline>
<codeline lineno="1184"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_matrix<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Determines<sp/>whether<sp/>matrix<sp/>should<sp/>be<sp/>exported.</highlight></codeline>
<codeline lineno="1189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recalculate<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flag<sp/>indicating<sp/>whether<sp/>matrix<sp/>should<sp/>be<sp/>rebuilt<sp/>every<sp/>iteration</highlight></codeline>
<codeline lineno="1191"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="1193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="1194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qp<sp/>:<sp/>matrix</highlight></codeline>
<codeline lineno="1195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>pressure<sp/>mass<sp/>matrix.</highlight></codeline>
<codeline lineno="1196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qsys_petsc4py<sp/>=<sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a8da1c4ed77d71f500253547b9a138c72" kindref="member">_massMatrix</ref>(recalculate<sp/>=<sp/>recalculate)</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ac0b6d7e85c3abb004f033381735c26ac" kindref="member">Qv</ref><sp/>=<sp/>Qsys_petsc4py.createSubMatrix(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a0b9164180a98d52931015236cb828f1f" kindref="member">linear_smoother</ref>.isv,</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1a0b9164180a98d52931015236cb828f1f" kindref="member">linear_smoother</ref>.isv)</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>output_matrix<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._exportMatrix(self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ac0b6d7e85c3abb004f033381735c26ac" kindref="member">Qv</ref>,</highlight><highlight class="stringliteral">&quot;Qv&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1ac0b6d7e85c3abb004f033381735c26ac" kindref="member">Qv</ref></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_massMatrix(self,recalculate=False):</highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Generates<sp/>a<sp/>mass<sp/>matrix.</highlight></codeline>
<codeline lineno="1206"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>generates<sp/>and<sp/>returns<sp/>the<sp/>mass<sp/>matrix<sp/>for<sp/>the<sp/>system.<sp/>This</highlight></codeline>
<codeline lineno="1208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>function<sp/>is<sp/>internal<sp/>to<sp/>the<sp/>class<sp/>and<sp/>called<sp/>by<sp/>public<sp/>functions<sp/>which</highlight></codeline>
<codeline lineno="1209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>take<sp/>and<sp/>return<sp/>the<sp/>relevant<sp/>components<sp/>(eg.<sp/>the<sp/>pressure<sp/>or<sp/>velcoity).</highlight></codeline>
<codeline lineno="1210"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recalculate<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>matrix<sp/>should<sp/>be<sp/>rebuilt<sp/>everytime<sp/>it&apos;s<sp/>called.</highlight></codeline>
<codeline lineno="1215"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="1217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="1218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Qsys<sp/>:<sp/>matrix</highlight></codeline>
<codeline lineno="1219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>system&apos;s<sp/>mass<sp/>matrix.</highlight></codeline>
<codeline lineno="1220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor_1abbc4e150d7eebd1a79aedf6d3c169ad3" kindref="member">opBuilder</ref>.attachMassOperator()</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223" refid="d7/da9/classproteus_1_1LinearSolvers_1_1KSP__Preconditioner" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/da9/classproteus_1_1LinearSolvers_1_1KSP__Preconditioner" kindref="compound">KSP_Preconditioner</ref>(object):</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Base<sp/>class<sp/>for<sp/>PETSc<sp/>KSP<sp/>precondtioners.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d7/da9/classproteus_1_1LinearSolvers_1_1KSP__Preconditioner_1ad768d6400f91883d35c4d9daa32061a6" kindref="member">__init__</ref>(self):</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d7/da9/classproteus_1_1LinearSolvers_1_1KSP__Preconditioner_1afc996de0d847d5445818c46b64b12f61" kindref="member">setup</ref>(self,<sp/>global_ksp=None):</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231" refid="de/d58/classproteus_1_1LinearSolvers_1_1petsc__ASM" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">petsc_ASM(KSP_Preconditioner):</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;ASM<sp/>PETSc<sp/>preconditioner<sp/>class.</highlight></codeline>
<codeline lineno="1233"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>provides<sp/>an<sp/>ASM<sp/>preconditioners<sp/>for<sp/>PETSc4py<sp/>KSP</highlight></codeline>
<codeline lineno="1235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>objects.</highlight></codeline>
<codeline lineno="1236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/d58/classproteus_1_1LinearSolvers_1_1petsc__ASM_1a120ad877fef9438fa09005cf81bea040" kindref="member">__init__</ref>(self,<sp/></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=None):</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>ASMpreconditioner<sp/>for<sp/>use<sp/>with<sp/>PETSc.</highlight></codeline>
<codeline lineno="1242"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1245"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>:<sp/>the<sp/>global<sp/>system<sp/>matrix.</highlight></codeline>
<codeline lineno="1246"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="1247"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prefix<sp/>handle<sp/>for<sp/>PETSc<sp/>options.</highlight></codeline>
<codeline lineno="1248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.PCType<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;asm&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.L<sp/>=<sp/>L</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._initializePC(prefix)</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pc.setFromOptions()</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_initializePC(self,</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=None):</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Create<sp/>the<sp/>pc<sp/>object.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pc<sp/>=<sp/>p4pyPETSc.PC().create()</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pc.setOptionsPrefix(prefix)</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pc.setType(</highlight><highlight class="stringliteral">&apos;asm&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/d58/classproteus_1_1LinearSolvers_1_1petsc__ASM_1a09c4f68329a875b1fdc18be7a686359e" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp=None,</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pc.<ref refid="de/d58/classproteus_1_1LinearSolvers_1_1petsc__ASM_1a09c4f68329a875b1fdc18be7a686359e" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266" refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU" kindref="compound">petsc_LU</ref>(<ref refid="d7/da9/classproteus_1_1LinearSolvers_1_1KSP__Preconditioner" kindref="compound">KSP_Preconditioner</ref>):</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>LU<sp/>PETSc<sp/>preconditioner<sp/>class.</highlight></codeline>
<codeline lineno="1268"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>provides<sp/>an<sp/>LU<sp/>preconditioner<sp/>for<sp/>PETSc4py<sp/>KSP</highlight></codeline>
<codeline lineno="1270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>objects.<sp/><sp/>Provided<sp/>the<sp/>LU<sp/>decomposition<sp/>is<sp/>successful,<sp/>the<sp/>KSP</highlight></codeline>
<codeline lineno="1271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>iterative<sp/>will<sp/>converge<sp/>in<sp/>a<sp/>single<sp/>step.</highlight></codeline>
<codeline lineno="1272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU_1a2e41d84cf6553d599106595fb740681d" kindref="member">__init__</ref>(self,L,prefix=None):</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>LU<sp/>preconditioner<sp/>for<sp/>use<sp/>with<sp/>PETSc.</highlight></codeline>
<codeline lineno="1276"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>:<sp/>the<sp/>global<sp/>system<sp/>matrix.</highlight></codeline>
<codeline lineno="1280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="1281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prefix<sp/>handle<sp/>for<sp/>PETSc<sp/>options.</highlight></codeline>
<codeline lineno="1282"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU_1a0e09b8b75e0c411fc6293d7ed41688a8" kindref="member">PCType</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;lu&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU_1aa93cd825b005f8f15979ca534b6626a5" kindref="member">L</ref><sp/>=<sp/>L</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU_1ad33fbe88897b8b4f4a2af8adbd5f2d5a" kindref="member">_initializePC</ref>(prefix)</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU_1aceac0b55bdf55aeb51005437d806dee8" kindref="member">pc</ref>.setFromOptions()</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_initializePC(self,</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix):</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Intiailizes<sp/>the<sp/>PETSc<sp/>precondition.</highlight></codeline>
<codeline lineno="1292"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="1296"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prefix<sp/>identifier<sp/>for<sp/>command<sp/>line<sp/>PETSc<sp/>options.</highlight></codeline>
<codeline lineno="1297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU_1aceac0b55bdf55aeb51005437d806dee8" kindref="member">pc</ref><sp/>=<sp/>p4pyPETSc.PC().create()</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU_1aceac0b55bdf55aeb51005437d806dee8" kindref="member">pc</ref>.setOptionsPrefix(prefix)</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU_1aceac0b55bdf55aeb51005437d806dee8" kindref="member">pc</ref>.setType(</highlight><highlight class="stringliteral">&apos;lu&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/dd4/classproteus_1_1LinearSolvers_1_1petsc__LU_1a26c5c2bedc95555cb73442d01927cace" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp=None,</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307" refid="d9/dde/classproteus_1_1LinearSolvers_1_1DofOrderInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">DofOrderInfo(object):</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Base<sp/>class<sp/>for<sp/>managing<sp/>DOF<sp/>ordering<sp/>information</highlight></codeline>
<codeline lineno="1309"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1310"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dof_order_type<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="1312"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>describes<sp/>the<sp/>type<sp/>of<sp/>dof<sp/>ordering<sp/>that<sp/>will</highlight></codeline>
<codeline lineno="1313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>constructed.<sp/><sp/>Currently<sp/>supports:<sp/>&apos;blocked&apos;</highlight></codeline>
<codeline lineno="1314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>&apos;interlaced&apos;.</highlight></codeline>
<codeline lineno="1315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/dde/classproteus_1_1LinearSolvers_1_1DofOrderInfo_1aae380648dceccdc609c83c3d409a63b2" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dof_order_type,</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_info<sp/>=<sp/>&apos;no<sp/>model<sp/>info<sp/>set&apos;):</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.dof_order_type<sp/>=<sp/>dof_order_type</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.set_model_info(model_info)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/dde/classproteus_1_1LinearSolvers_1_1DofOrderInfo_1aa3f6331a88c43b952d075e5765912fd6" kindref="member">create_DOF_lists</ref>(self,</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownership_range,</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_equations,</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_components):</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Virtual<sp/>function<sp/>with<sp/>no<sp/>implementation&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError()</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/dde/classproteus_1_1LinearSolvers_1_1DofOrderInfo_1ae7c27c082f1623b273a5f8954cdbc295" kindref="member">set_model_info</ref>(self,<sp/>model_info):</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._model_info<sp/>=<sp/>model_info</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/dde/classproteus_1_1LinearSolvers_1_1DofOrderInfo_1aa46e0dd7a687aa558495b9ce75dd1a2d" kindref="member">get_model_info</ref>(self,<sp/>model_info):</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self._model_info</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/dde/classproteus_1_1LinearSolvers_1_1DofOrderInfo_1a9c439076eaebda6739b6e361b30c437a" kindref="member">create_IS</ref>(self,</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dof_array):</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_set<sp/>=<sp/>p4pyPETSc.IS()</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx_set.createGeneral(dof_array,comm=p4pyPETSc.COMM_WORLD)</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>idx_set</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight></codeline>
<codeline lineno="1341" refid="dd/dec/classproteus_1_1LinearSolvers_1_1BlockedDofOrderType" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/dec/classproteus_1_1LinearSolvers_1_1BlockedDofOrderType" kindref="compound">BlockedDofOrderType</ref>(<ref refid="d9/dde/classproteus_1_1LinearSolvers_1_1DofOrderInfo" kindref="compound">DofOrderInfo</ref>):</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Manages<sp/>the<sp/>DOF<sp/>for<sp/>blocked<sp/>velocity<sp/>and<sp/>pressure<sp/>ordering.</highlight></codeline>
<codeline lineno="1343"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1345"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>n_DOF_pressure<sp/>:<sp/>int</highlight></codeline>
<codeline lineno="1347"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>pressure<sp/>degrees<sp/>of<sp/>freedom.</highlight></codeline>
<codeline lineno="1348"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1349"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="1350"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-----</highlight></codeline>
<codeline lineno="1351"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Blocked<sp/>degree<sp/>of<sp/>freedom<sp/>ordering<sp/>occurs<sp/>when<sp/>all<sp/>the<sp/>pressure</highlight></codeline>
<codeline lineno="1352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>unknowns<sp/>appear<sp/>first,<sp/>followed<sp/>by<sp/>all<sp/>the<sp/>u-components<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="1353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>velocity<sp/>and<sp/>then<sp/>all<sp/>the<sp/>v-components<sp/>of<sp/>the<sp/>velocity<sp/>etc.</highlight></codeline>
<codeline lineno="1354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dd/dec/classproteus_1_1LinearSolvers_1_1BlockedDofOrderType_1a7b2042ce6ea1751adc840aec00f559c9" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_DOF_pressure,</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_info<sp/>=<sp/>&apos;no<sp/>model<sp/>info<sp/>set&apos;):</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DofOrderInfo.__init__(self,</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;blocked&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_info<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;no<sp/>model<sp/>info<sp/>set&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dec/classproteus_1_1LinearSolvers_1_1BlockedDofOrderType_1abc4b59c7c155f3b6ef511dc5c903095a" kindref="member">n_DOF_pressure</ref><sp/>=<sp/>n_DOF_pressure</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dd/dec/classproteus_1_1LinearSolvers_1_1BlockedDofOrderType_1a5216522a984e3d5b10cc49cd76268416" kindref="member">create_DOF_lists</ref>(self,</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownership_range,</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_equations,</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_components):</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Build<sp/>blocked<sp/>velocity<sp/>and<sp/>pressure<sp/>DOF<sp/>arrays.</highlight></codeline>
<codeline lineno="1368"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1370"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownership_range:<sp/>tuple</highlight></codeline>
<codeline lineno="1372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Local<sp/>ownership<sp/>range<sp/>of<sp/>DOF</highlight></codeline>
<codeline lineno="1373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_equations:<sp/>int</highlight></codeline>
<codeline lineno="1374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>local<sp/>equations</highlight></codeline>
<codeline lineno="1375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_components:<sp/>int</highlight></codeline>
<codeline lineno="1376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>pressure<sp/>and<sp/>velocity<sp/>components</highlight></codeline>
<codeline lineno="1377"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="1379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="1380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOF_output<sp/>:<sp/>lst<sp/>of<sp/>arrays</highlight></codeline>
<codeline lineno="1381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>arrays<sp/>with<sp/>the<sp/>DOF</highlight></codeline>
<codeline lineno="1382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>order.<sp/><sp/>[velocityDOF,<sp/>pressureDOF]</highlight></codeline>
<codeline lineno="1383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressureDOF<sp/>=<sp/>numpy.arange(start=ownership_range[0],</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop=ownership_range[0]+self.<ref refid="dd/dec/classproteus_1_1LinearSolvers_1_1BlockedDofOrderType_1abc4b59c7c155f3b6ef511dc5c903095a" kindref="member">n_DOF_pressure</ref>,</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocityDOF<sp/>=<sp/>numpy.arange(start=ownership_range[0]+self.<ref refid="dd/dec/classproteus_1_1LinearSolvers_1_1BlockedDofOrderType_1abc4b59c7c155f3b6ef511dc5c903095a" kindref="member">n_DOF_pressure</ref>,</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop=ownership_range[0]+num_equations,</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step=1,</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[velocityDOF,<sp/>pressureDOF]</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393" refid="de/dae/classproteus_1_1LinearSolvers_1_1InterlacedDofOrderType" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="de/dae/classproteus_1_1LinearSolvers_1_1InterlacedDofOrderType" kindref="compound">InterlacedDofOrderType</ref>(<ref refid="d9/dde/classproteus_1_1LinearSolvers_1_1DofOrderInfo" kindref="compound">DofOrderInfo</ref>):</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Manages<sp/>the<sp/>DOF<sp/>for<sp/>interlaced<sp/>velocity<sp/>and<sp/>pressure<sp/>ordering.</highlight></codeline>
<codeline lineno="1395"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1396"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="1397"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-----</highlight></codeline>
<codeline lineno="1398"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Interlaced<sp/>degrees<sp/>of<sp/>occur<sp/>when<sp/>the<sp/>degrees<sp/>of<sp/>freedom<sp/>are</highlight></codeline>
<codeline lineno="1399"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>ordered<sp/>as<sp/>(p[0],<sp/>u[0],<sp/>v[0],<sp/>p[1],<sp/>u[1],<sp/>...,<sp/>p[n],<sp/>u[n],<sp/>v[n]).</highlight></codeline>
<codeline lineno="1400"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/dae/classproteus_1_1LinearSolvers_1_1InterlacedDofOrderType_1a448a682c81b9093d32b3471f76ecbf29" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_info<sp/>=<sp/>&apos;no<sp/>model<sp/>info<sp/>set&apos;):</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DofOrderInfo.__init__(self,</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;interlaced&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>model_info<sp/>=<sp/>model_info)</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/dae/classproteus_1_1LinearSolvers_1_1InterlacedDofOrderType_1aab7432015a56fa86aec00e1264845c99" kindref="member">create_DOF_lists</ref>(self,</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownership_range,</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_equations,</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_components):</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Build<sp/>interlaced<sp/>velocity<sp/>and<sp/>pressure<sp/>DOF<sp/>arrays.</highlight></codeline>
<codeline lineno="1412"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1413"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1414"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1415"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownership_range:<sp/>tuple</highlight></codeline>
<codeline lineno="1416"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Local<sp/>ownership<sp/>range<sp/>of<sp/>DOF</highlight></codeline>
<codeline lineno="1417"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_equations:<sp/>int</highlight></codeline>
<codeline lineno="1418"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>local<sp/>equations</highlight></codeline>
<codeline lineno="1419"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_components:<sp/>int</highlight></codeline>
<codeline lineno="1420"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>pressure<sp/>and<sp/>velocity<sp/>components</highlight></codeline>
<codeline lineno="1421"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1422"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="1423"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="1424"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOF_output<sp/>:<sp/>lst<sp/>of<sp/>arrays</highlight></codeline>
<codeline lineno="1425"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>returns<sp/>a<sp/>list<sp/>of<sp/>arrays<sp/>with<sp/>the<sp/>DOF</highlight></codeline>
<codeline lineno="1426"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>order.<sp/><sp/>[velocityDOF,<sp/>pressureDOF]</highlight></codeline>
<codeline lineno="1427"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressureDOF<sp/>=<sp/>numpy.arange(start=ownership_range[0],</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop=ownership_range[0]+num_equations,</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step=num_components,</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocityDOF<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>start<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,num_components):</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocityDOF.append(numpy.arange(start=ownership_range[0]+start,</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop=ownership_range[0]+num_equations,</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step=num_components,</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocityDOF<sp/>=<sp/>numpy.vstack(velocityDOF).transpose().flatten()</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[velocityDOF,<sp/>pressureDOF]</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/dae/classproteus_1_1LinearSolvers_1_1InterlacedDofOrderType_1ad4df98fec6ece2963c7cf24a9b27e770" kindref="member">create_vel_DOF_IS</ref>(self,</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownership_range,</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_equations,</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_components):</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1446"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Build<sp/>interlaced<sp/>DOF<sp/>arrays<sp/>for<sp/>the<sp/>components<sp/>of<sp/>the<sp/>velocity.</highlight></codeline>
<codeline lineno="1447"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1448"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1449"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1450"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownership_range:<sp/>tuple</highlight></codeline>
<codeline lineno="1451"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Local<sp/>ownership<sp/>range<sp/>of<sp/>DOF</highlight></codeline>
<codeline lineno="1452"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_equations:<sp/>int</highlight></codeline>
<codeline lineno="1453"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>local<sp/>equations</highlight></codeline>
<codeline lineno="1454"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_components:<sp/>int</highlight></codeline>
<codeline lineno="1455"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>pressure<sp/>and<sp/>velocity<sp/>components</highlight></codeline>
<codeline lineno="1456"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1457"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="1458"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="1459"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DOF_output<sp/>:<sp/>lst<sp/>of<sp/>arrays</highlight></codeline>
<codeline lineno="1460"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Each<sp/>element<sp/>of<sp/>this<sp/>list<sp/>corresponds<sp/>to<sp/>a<sp/>component<sp/>of</highlight></codeline>
<codeline lineno="1461"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>velocity.<sp/><sp/>E.g.<sp/>for<sp/>u,<sp/>v,<sp/>w<sp/>:<sp/>[vel_u,vel_v,vel_w].</highlight></codeline>
<codeline lineno="1462"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Comm</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm<sp/>=<sp/>Comm.get()</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_comp_DOF<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_comp_DOF_vel=[]</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaled_ownership_range<sp/>=<sp/>ownership_range[0]<sp/>*<sp/>(num_components-1)<sp/>/<sp/>num_components</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,num_components):</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_comp_DOF.append(self.<ref refid="d9/dde/classproteus_1_1LinearSolvers_1_1DofOrderInfo_1a9c439076eaebda6739b6e361b30c437a" kindref="member">create_IS</ref>(numpy.arange(start=ownership_range[0]<sp/>+<sp/>i,</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop=ownership_range[0]<sp/>+<sp/>num_equations,</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step=num_components,</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_comp_DOF_vel.append(self.<ref refid="d9/dde/classproteus_1_1LinearSolvers_1_1DofOrderInfo_1a9c439076eaebda6739b6e361b30c437a" kindref="member">create_IS</ref>(numpy.arange(start=scaled_ownership_range<sp/>+<sp/>i<sp/>-<sp/>1,</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop=scaled_ownership_range<sp/>+<sp/>int(<sp/>num_equations<sp/>*<sp/>(num_components-1)<sp/>/<sp/>num_components<sp/>),</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step=num_components-1,</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)))</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vel_comp_DOF,<sp/>vel_comp_DOF_vel</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="de/dae/classproteus_1_1LinearSolvers_1_1InterlacedDofOrderType_1a283e56817c673f676e0600134fb620eb" kindref="member">create_no_dirichlet_bdy_nodes_is</ref>(self,</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ownership_range,</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_equations,</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_components,</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bdy_nodes):</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Build<sp/>block<sp/>velocity<sp/>DOF<sp/>arrays<sp/>excluding<sp/>Dirichlet<sp/>bdy<sp/>nodes.</highlight></codeline>
<codeline lineno="1485"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1486"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1487"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1488"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bdy_nodes<sp/>:<sp/>lst</highlight></codeline>
<codeline lineno="1489"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>a<sp/>list<sp/>of<sp/>lists<sp/>with<sp/>the<sp/>local<sp/>dof<sp/>index<sp/>for<sp/>strongly</highlight></codeline>
<codeline lineno="1490"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enforced<sp/>Dirichlet<sp/>boundary<sp/>conditions<sp/>on<sp/>the<sp/>velocity</highlight></codeline>
<codeline lineno="1491"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components.</highlight></codeline>
<codeline lineno="1492"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strong_DOF<sp/>,<sp/>local_vel_DOF<sp/>=<sp/>self.<ref refid="de/dae/classproteus_1_1LinearSolvers_1_1InterlacedDofOrderType_1ad4df98fec6ece2963c7cf24a9b27e770" kindref="member">create_vel_DOF_IS</ref>(ownership_range,</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_equations,</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_components)</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strong_DOF<sp/>=<sp/>[ele.array<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ele<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>strong_DOF]</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_vel_DOF<sp/>=<sp/>[ele.array<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ele<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>local_vel_DOF]</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask<sp/>=<sp/>[numpy.ones(len(var),<sp/>dtype=bool)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>strong_DOF]</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>bdy_node<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(bdy_nodes):</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask[i][bdy_node]<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strong_DOF<sp/>=<sp/>[strong_DOF[i][mask[i]]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(strong_DOF))]</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_vars<sp/>=<sp/>int(0)</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>strong_DOF:</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_vars<sp/>+=<sp/>int(len(var))</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strong_DOF_idx<sp/>=<sp/>numpy.empty((total_vars),dtype=</highlight><highlight class="stringliteral">&apos;int32&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>var_dof<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(strong_DOF):</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strong_DOF_idx[i::2]<sp/>=<sp/>var_dof</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d9/dde/classproteus_1_1LinearSolvers_1_1DofOrderInfo_1a9c439076eaebda6739b6e361b30c437a" kindref="member">create_IS</ref>(strong_DOF_idx)</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"></highlight></codeline>
<codeline lineno="1510" refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo" kindref="compound">ModelInfo</ref>(object):</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1512"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>stores<sp/>the<sp/>model<sp/>information<sp/>needed<sp/>to<sp/>initialize<sp/>a</highlight></codeline>
<codeline lineno="1513"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Schur<sp/>preconditioner<sp/>class.</highlight></codeline>
<codeline lineno="1514"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1515"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1516"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1517"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>num_components:<sp/>int</highlight></codeline>
<codeline lineno="1518"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>number<sp/>of<sp/>model<sp/>components</highlight></codeline>
<codeline lineno="1519"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>dof_order_type:<sp/>str</highlight></codeline>
<codeline lineno="1520"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>variable<sp/>with<sp/>the<sp/>dof_order_type<sp/>(&apos;blocked&apos;<sp/>or</highlight></codeline>
<codeline lineno="1521"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;interlaced&apos;)</highlight></codeline>
<codeline lineno="1522"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>n_DOF_pressure:<sp/>int</highlight></codeline>
<codeline lineno="1523"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>pressure<sp/>degrees<sp/>of<sp/>freedom<sp/>(required<sp/>for<sp/>blocked</highlight></codeline>
<codeline lineno="1524"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dof_order_type)</highlight></codeline>
<codeline lineno="1525"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>bdy_null_space<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="1526"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>boundary<sp/>condition<sp/>creates<sp/>a<sp/>global<sp/>null</highlight></codeline>
<codeline lineno="1527"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>space</highlight></codeline>
<codeline lineno="1528"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1ace4ca9cc909818759f195de1cbe10a73" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dof_order_type,</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_components,</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_range<sp/>=<sp/>None,</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neqns<sp/>=<sp/>None,</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_DOF_pressure<sp/>=<sp/>None,</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bdy_null_space<sp/>=<sp/>False):</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1a82799f3cf153ca394e96b0cdc843bd05" kindref="member">set_num_components</ref>(num_components)</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1aadc3896b8f9769a2bcaba6c554eeaa37" kindref="member">set_dof_order_type</ref>(dof_order_type)</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1af134bff2ac307a3612979b93b5da8257" kindref="member">const_null_space</ref><sp/>=<sp/>bdy_null_space</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dof_order_type==</highlight><highlight class="stringliteral">&apos;blocked&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>n_DOF_pressure!=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/>\</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;need<sp/>num<sp/>of<sp/>pressure<sp/>unknowns<sp/>for<sp/>blocked<sp/>dof<sp/>order<sp/>type&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1a7a54ef4f593343fa7c6b79a85cfd4c37" kindref="member">dof_order_class</ref><sp/>=<sp/><ref refid="dd/dec/classproteus_1_1LinearSolvers_1_1BlockedDofOrderType" kindref="compound">BlockedDofOrderType</ref>(n_DOF_pressure,<sp/>self)</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dof_order_type==</highlight><highlight class="stringliteral">&apos;interlaced&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1a7a54ef4f593343fa7c6b79a85cfd4c37" kindref="member">dof_order_class</ref><sp/>=<sp/><ref refid="de/dae/classproteus_1_1LinearSolvers_1_1InterlacedDofOrderType" kindref="compound">InterlacedDofOrderType</ref>(self)</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1aadc3896b8f9769a2bcaba6c554eeaa37" kindref="member">set_dof_order_type</ref>(self,<sp/>dof_order_type):</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1ac8bceed9beebecbf5d07a537d953c10d" kindref="member">_dof_order_type</ref><sp/>=<sp/>dof_order_type</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1ada6fb5780595b53e5845d9e41e55dd4d" kindref="member">get_dof_order_type</ref>(self):</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1ac8bceed9beebecbf5d07a537d953c10d" kindref="member">_dof_order_type</ref></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1a82799f3cf153ca394e96b0cdc843bd05" kindref="member">set_num_components</ref>(self,nc):</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1ae10d48e46871efbf3744aad8400899b0" kindref="member">nc</ref><sp/>=<sp/>nc</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1ae08eb477d34993e5cf78dfc5128f465a" kindref="member">get_num_components</ref>(self):</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1ae10d48e46871efbf3744aad8400899b0" kindref="member">nc</ref></highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1a3d5633a9219a845c2988851fbf76cc4a" kindref="member">get_dof_order_class</ref>(self):</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo_1a7a54ef4f593343fa7c6b79a85cfd4c37" kindref="member">dof_order_class</ref></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561" refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon" kindref="compound">SchurPrecon</ref>(<ref refid="d7/da9/classproteus_1_1LinearSolvers_1_1KSP__Preconditioner" kindref="compound">KSP_Preconditioner</ref>):</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Base<sp/>class<sp/>for<sp/>PETSc<sp/>Schur<sp/>complement<sp/>preconditioners.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a4289420c2dc1cfbd0288c5fbdda5b7cd" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=None,</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_info=None):</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1568"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>Schur<sp/>complement<sp/>preconditioner<sp/>for<sp/>use<sp/>with<sp/>PETSc.</highlight></codeline>
<codeline lineno="1569"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1570"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>class<sp/>creates<sp/>a<sp/>KSP<sp/>PETSc<sp/>solver<sp/>object<sp/>and<sp/>initializes<sp/>flags<sp/>the</highlight></codeline>
<codeline lineno="1571"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pressure<sp/>and<sp/>velocity<sp/>unknowns<sp/>for<sp/>a<sp/>general<sp/>saddle<sp/>point<sp/>problem.</highlight></codeline>
<codeline lineno="1572"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1573"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1574"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1575"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>:<sp/>provides<sp/>the<sp/>definition<sp/>of<sp/>the<sp/>problem.</highlight></codeline>
<codeline lineno="1576"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="1577"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prefix<sp/>identifier<sp/>for<sp/>command<sp/>line<sp/>PETSc<sp/>options.</highlight></codeline>
<codeline lineno="1578"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_info:<sp/>:class:`ModelInfo`</highlight></codeline>
<codeline lineno="1579"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a374e2609eef75fd3ed25cef8b9a64e07" kindref="member">PCType</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;schur&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref><sp/>=<sp/>L</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1acf3b4049801b23937782c40c8b82d984" kindref="member">_initializePC</ref>(prefix)</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>solver_info==</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1adbda8e506b57c9feed2c3198d0056077" kindref="member">_initialize_without_solver_info</ref>()</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46988b0f72024157f6064f44dfb4fba1" kindref="member">model_info</ref><sp/>=<sp/>solver_info</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46eaef9c17f2dbcef98768637126b12c" kindref="member">_initializeIS</ref>()</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1aca0576cdaffd89d0327397f9e7b83f57" kindref="member">pc</ref>.setFromOptions()</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46988b0f72024157f6064f44dfb4fba1" kindref="member">model_info</ref>.get_dof_order_type()<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;interlaced&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a6544db6d1faeffed1db7366ec38306a1" kindref="member">set_velocity_var_names</ref>()</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_initialize_without_solver_info(self):</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1597"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>ModelInfo<sp/>needed<sp/>to<sp/>create<sp/>a<sp/>Schur<sp/>Complement</highlight></codeline>
<codeline lineno="1598"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preconditioner.</highlight></codeline>
<codeline lineno="1599"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nc<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.pde.nc</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_range<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.getOwnershipRanges()</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neqns<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.getSizes()[0][0]</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.pde.u[0].dof)<sp/>==<sp/>len(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.pde.u[1].dof):</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46988b0f72024157f6064f44dfb4fba1" kindref="member">model_info</ref><sp/>=<sp/><ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo" kindref="compound">ModelInfo</ref>(</highlight><highlight class="stringliteral">&apos;interlaced&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nc,</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_range<sp/>=<sp/>L_range,</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neqns<sp/>=<sp/>neqns)</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46988b0f72024157f6064f44dfb4fba1" kindref="member">model_info</ref><sp/>=<sp/><ref refid="d4/dcc/classproteus_1_1LinearSolvers_1_1ModelInfo" kindref="compound">ModelInfo</ref>(</highlight><highlight class="stringliteral">&apos;blocked&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nc,</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_range,</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neqns,</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.pde.u[0].dof.size)</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ARB<sp/>-<sp/>this<sp/>will<sp/>come<sp/>from<sp/>coefficients,<sp/>not<sp/>pde.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a0022b7d8943266b13de488a266dedaf1" kindref="member">get_num_components</ref>(self):</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/>=<sp/>int(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>.size<sp/>/<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ae493424f7ff8e0469614be17b81d92e4" kindref="member">isp</ref>.size<sp/>+<sp/>1)</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>val</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a6544db6d1faeffed1db7366ec38306a1" kindref="member">set_velocity_var_names</ref>(self):</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nc<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a0022b7d8943266b13de488a266dedaf1" kindref="member">get_num_components</ref>()</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_names<sp/>=<sp/>(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;v&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1abe6e0df1212aa0be7294e46b9f24b8cc" kindref="member">_var_names</ref><sp/>=<sp/>[var_names[i]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nc-1)]</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1aa32787176bf03375d76c7262b88706cd" kindref="member">get_velocity_var_names</ref>(self):</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1abe6e0df1212aa0be7294e46b9f24b8cc" kindref="member">_var_names</ref></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"></highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a5bf0d6351a3b82079f92d86e8d338e36" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp,</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1632"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>up<sp/>the<sp/>NavierStokesSchur<sp/>preconditioner.</highlight></codeline>
<codeline lineno="1633"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1634"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Nothing<sp/>needs<sp/>to<sp/>be<sp/>done<sp/>here<sp/>for<sp/>a<sp/>generic<sp/>NSE<sp/>preconditioner.</highlight></codeline>
<codeline lineno="1635"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Preconditioner<sp/>arguments<sp/>can<sp/>be<sp/>set<sp/>with<sp/>PETSc<sp/>command<sp/>line.</highlight></codeline>
<codeline lineno="1636"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1abdbe21a90e3859d06325dcc279497eca" kindref="member">_setSchurlog</ref>(global_ksp)</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_setSchurlog(self,global_ksp):</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Helper<sp/>function<sp/>that<sp/>attaches<sp/>a<sp/>residual<sp/>log<sp/>to<sp/>the<sp/>inner<sp/>solve<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[1].setConvergenceTest(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac375abe7f86e088a602cc74207f0a8de" kindref="member">_converged_trueRes</ref>)</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&apos;Unable<sp/>to<sp/>access<sp/>Schur<sp/>sub-blocks.<sp/>Make<sp/>sure<sp/>petsc<sp/>&apos;</highlight><highlight class="normal">\</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;options<sp/>are<sp/>consistent<sp/>with<sp/>your<sp/>preconditioner<sp/>type.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1)</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_setSchurApproximation(self,global_ksp):</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Set<sp/>the<sp/>Schur<sp/>approximation<sp/>to<sp/>the<sp/>Schur<sp/>block.</highlight></codeline>
<codeline lineno="1650"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1651"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1652"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1653"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp<sp/>:</highlight></codeline>
<codeline lineno="1654"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.matcontext_inv<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;no<sp/>matrix<sp/>context<sp/>has<sp/>been<sp/>set.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[1].pc.setType(</highlight><highlight class="stringliteral">&apos;python&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[1].pc.setPythonContext(self.matcontext_inv)</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[1].pc.setUp()</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_initializePC(self,</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix):</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1663"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Intiailizes<sp/>the<sp/>PETSc<sp/>precondition.</highlight></codeline>
<codeline lineno="1664"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1665"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1666"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1667"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="1668"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Prefix<sp/>identifier<sp/>for<sp/>command<sp/>line<sp/>PETSc<sp/>options.</highlight></codeline>
<codeline lineno="1669"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1aca0576cdaffd89d0327397f9e7b83f57" kindref="member">pc</ref><sp/>=<sp/>p4pyPETSc.PC().create()</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1aca0576cdaffd89d0327397f9e7b83f57" kindref="member">pc</ref>.setOptionsPrefix(prefix)</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1aca0576cdaffd89d0327397f9e7b83f57" kindref="member">pc</ref>.setType(</highlight><highlight class="stringliteral">&apos;fieldsplit&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_initializeIS(self):</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;Sets<sp/>the<sp/>index<sp/>set<sp/>(IP)<sp/>for<sp/>the<sp/>pressure<sp/>and<sp/>velocity</highlight></codeline>
<codeline lineno="1676"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1677"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="1678"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----</highlight></codeline>
<codeline lineno="1679"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Proteus<sp/>orders<sp/>unknown<sp/>degrees<sp/>of<sp/>freedom<sp/>for<sp/>saddle<sp/>point</highlight></codeline>
<codeline lineno="1680"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problems<sp/>as<sp/>blocked<sp/>or<sp/>end-to-end.<sp/>Blocked<sp/>systems<sp/>are<sp/>used</highlight></codeline>
<codeline lineno="1681"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>equal<sp/>order<sp/>finite<sp/>element<sp/>spaces<sp/>(e.g.<sp/>P1-P1).<sp/><sp/>In<sp/>this</highlight></codeline>
<codeline lineno="1682"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>case,<sp/>the<sp/>degrees<sp/>of<sp/>freedom<sp/>are<sp/>interlaced<sp/>(e.g.<sp/>p[0],<sp/>u[0],</highlight></codeline>
<codeline lineno="1683"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>v[0],<sp/>p[1],<sp/>u[1],<sp/>v[1],<sp/>...).</highlight></codeline>
<codeline lineno="1684"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_range<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.getOwnershipRange()</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neqns<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.getSizes()[0][0]</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dof_order_cls<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46988b0f72024157f6064f44dfb4fba1" kindref="member">model_info</ref>.get_dof_order_class()</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dof_arrays<sp/>=<sp/>dof_order_cls.create_DOF_lists(L_range,</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neqns,</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46988b0f72024157f6064f44dfb4fba1" kindref="member">model_info</ref>.nc)</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ae493424f7ff8e0469614be17b81d92e4" kindref="member">isp</ref><sp/>=<sp/>p4pyPETSc.IS()</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ae493424f7ff8e0469614be17b81d92e4" kindref="member">isp</ref>.createGeneral(dof_arrays[1],comm=p4pyPETSc.COMM_WORLD)</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref><sp/>=<sp/>p4pyPETSc.IS()</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>.createGeneral(dof_arrays[0],comm=p4pyPETSc.COMM_WORLD)</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1aca0576cdaffd89d0327397f9e7b83f57" kindref="member">pc</ref>.setFieldSplitIS((</highlight><highlight class="stringliteral">&apos;velocity&apos;</highlight><highlight class="normal">,self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>),(</highlight><highlight class="stringliteral">&apos;pressure&apos;</highlight><highlight class="normal">,self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ae493424f7ff8e0469614be17b81d92e4" kindref="member">isp</ref>))</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_converged_trueRes(self,ksp,its,rnorm):</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Function<sp/>handle<sp/>to<sp/>feed<sp/>to<sp/>ksp&apos;s<sp/>setConvergenceTest<sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r_work<sp/>=<sp/>ksp.getOperators()[1].getVecLeft()</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp.buildResidual(r_work)</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>truenorm<sp/>=<sp/>r_work.norm()</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>its<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a8699fb03b694a0582d3daf8a438a3908" kindref="member">rnorm0</ref><sp/>=<sp/>truenorm</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NumericalAnalytics<sp/>KSPSchurResidual:<sp/>%12.5e&quot;</highlight><highlight class="normal"><sp/>%(truenorm),<sp/>level=7)</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NumericalAnalytics<sp/>KSPSchurResidual(relative):<sp/>%12.5e&quot;</highlight><highlight class="normal"><sp/>%(old_div(truenorm,<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a8699fb03b694a0582d3daf8a438a3908" kindref="member">rnorm0</ref>)),<sp/>level=7<sp/>)</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KSP<sp/>it<sp/>%i<sp/>norm(r)<sp/>=<sp/>%e<sp/><sp/>norm(r)/|b|<sp/>=<sp/>%e<sp/>;<sp/>atol=%e<sp/>rtol=%e<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>(its,</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>truenorm,</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(old_div(truenorm,<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a8699fb03b694a0582d3daf8a438a3908" kindref="member">rnorm0</ref>)),</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp.atol,</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp.rtol))</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NumericalAnalytics<sp/>KSPSchurResidual:<sp/>%12.5e&quot;</highlight><highlight class="normal"><sp/>%(truenorm),<sp/>level=7)</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;NumericalAnalytics<sp/>KSPSchurResidual(relative):<sp/>%12.5e&quot;</highlight><highlight class="normal"><sp/>%(old_div(truenorm,<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a8699fb03b694a0582d3daf8a438a3908" kindref="member">rnorm0</ref>)),<sp/>level=7)</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>KSP<sp/>it<sp/>%i<sp/>norm(r)<sp/>=<sp/>%e<sp/><sp/>norm(r)/|b|<sp/>=<sp/>%e<sp/>;<sp/>atol=%e<sp/>rtol=%e<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>(its,</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>truenorm,</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(old_div(truenorm,<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a8699fb03b694a0582d3daf8a438a3908" kindref="member">rnorm0</ref>)),</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp.atol,</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp.rtol))</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>truenorm<sp/>&lt;<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a8699fb03b694a0582d3daf8a438a3908" kindref="member">rnorm0</ref>*ksp.rtol:</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p4pyPETSc.KSP.ConvergedReason.CONVERGED_RTOL</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>truenorm<sp/>&lt;<sp/>ksp.atol:</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>p4pyPETSc.KSP.ConvergedReason.CONVERGED_ATOL</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_get_null_space_cls(self):</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_module<sp/>=<sp/>sys.modules[__name__]</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_space_cls_name<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.pde.coefficients.nullSpace</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_space_cls<sp/>=<sp/>getattr(current_module,</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_space_cls_name)</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>null_space_cls</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_is_const_pressure_null_space(self):</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46988b0f72024157f6064f44dfb4fba1" kindref="member">model_info</ref>==</highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a4b6c15cc8b633bb27d5650980d14fd93" kindref="member">_get_null_space_cls</ref>().get_name<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;constant_pressure&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46988b0f72024157f6064f44dfb4fba1" kindref="member">model_info</ref>.const_null_space</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"></highlight></codeline>
<codeline lineno="1742" refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp" kindref="compound">Schur_Qp</ref>(<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon" kindref="compound">SchurPrecon</ref>)<sp/>:</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1744"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>Navier-Stokes<sp/>(or<sp/>Stokes)<sp/>preconditioner<sp/>which<sp/>uses<sp/>the</highlight></codeline>
<codeline lineno="1745"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>viscosity<sp/>scaled<sp/>pressure<sp/>mass<sp/>matrix.</highlight></codeline>
<codeline lineno="1746"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1a2920d9fa776727902feebd80fc94f560" kindref="member">__init__</ref>(self,L,prefix=None,bdyNullSpace=False):</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1749"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>pressure<sp/>mass<sp/>matrix<sp/>class.</highlight></codeline>
<codeline lineno="1750"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1751"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1752"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="1753"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>:<sp/>petsc4py<sp/>matrix</highlight></codeline>
<codeline lineno="1754"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defines<sp/>the<sp/>problem&apos;s<sp/>operator.</highlight></codeline>
<codeline lineno="1755"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SchurPrecon.__init__(self,L,prefix,bdyNullSpace)</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1ac3c8a69273b3ee833d06ffe02919025c" kindref="member">operator_constructor</ref><sp/>=<sp/><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor" kindref="compound">SchurOperatorConstructor</ref>(self)</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1af1e1be3d0f845bd33a2379bd72d6e792" kindref="member">Q</ref><sp/>=<sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1ac3c8a69273b3ee833d06ffe02919025c" kindref="member">operator_constructor</ref>.initializeQ()</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1ac3aeea32d18b0116a54811e79ccfc9ba" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp,</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Attaches<sp/>the<sp/>pressure<sp/>mass<sp/>matrix<sp/>to<sp/>PETSc<sp/>KSP<sp/>preconditioner.</highlight></codeline>
<codeline lineno="1764"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1765"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1766"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1767"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp<sp/>:<sp/>PETSc<sp/>KSP<sp/>object</highlight></codeline>
<codeline lineno="1768"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>the<sp/>pressure<sp/>mass<sp/>matrix<sp/>and<sp/>scaxle<sp/>by<sp/>the<sp/>viscosity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1ac3c8a69273b3ee833d06ffe02919025c" kindref="member">operator_constructor</ref>.updateQ()</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1ae6bfde4aefc44e106ae620a8025cbe26" kindref="member">Qp</ref><sp/>=<sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1af1e1be3d0f845bd33a2379bd72d6e792" kindref="member">Q</ref>.createSubMatrix(self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1ac3c8a69273b3ee833d06ffe02919025c" kindref="member">operator_constructor</ref>.linear_smoother.isp,</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1ac3c8a69273b3ee833d06ffe02919025c" kindref="member">operator_constructor</ref>.linear_smoother.isp)</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1ae6bfde4aefc44e106ae620a8025cbe26" kindref="member">Qp</ref>.<ref refid="d6/d5e/namespaceproteus_1_1tests_1_1MoveMeshMonitor_1_1movemesh__monitor_1a8045a0f5d22b86f957fcbfd990136add" kindref="member">scale</ref>(1./self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.pde.coefficients.nu)</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_sizes<sp/>=<sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1ae6bfde4aefc44e106ae620a8025cbe26" kindref="member">Qp</ref>.size</highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup<sp/>a<sp/>PETSc<sp/>shell<sp/>for<sp/>the<sp/>inverse<sp/>Qp<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1a993b8f98553522908a5c70ea2ff89d49" kindref="member">QpInv_shell</ref><sp/>=<sp/>p4pyPETSc.Mat().create()</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1a993b8f98553522908a5c70ea2ff89d49" kindref="member">QpInv_shell</ref>.setSizes(L_sizes)</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1a993b8f98553522908a5c70ea2ff89d49" kindref="member">QpInv_shell</ref>.setType(</highlight><highlight class="stringliteral">&apos;python&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1a670802933d875f1da46d99c06e12654a" kindref="member">matcontext_inv</ref><sp/>=<sp/><ref refid="dd/da8/classproteus_1_1LinearAlgebraTools_1_1MatrixInvShell" kindref="compound">MatrixInvShell</ref>(self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1ae6bfde4aefc44e106ae620a8025cbe26" kindref="member">Qp</ref>)</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1a993b8f98553522908a5c70ea2ff89d49" kindref="member">QpInv_shell</ref>.setPythonContext(self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1a670802933d875f1da46d99c06e12654a" kindref="member">matcontext_inv</ref>)</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1a993b8f98553522908a5c70ea2ff89d49" kindref="member">QpInv_shell</ref>.<ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp_1ac3aeea32d18b0116a54811e79ccfc9ba" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>PETSc<sp/>Schur<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a77d1c3336f555e463ecb06496a1e400a" kindref="member">_setSchurApproximation</ref>(global_ksp)</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1abdbe21a90e3859d06325dcc279497eca" kindref="member">_setSchurlog</ref>(global_ksp)</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"></highlight></codeline>
<codeline lineno="1787" refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur" kindref="compound">NavierStokesSchur</ref>(<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon" kindref="compound">SchurPrecon</ref>):</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Schur<sp/>complement<sp/>preconditioners<sp/>for<sp/>Navier-Stokes<sp/>problems.</highlight></codeline>
<codeline lineno="1789"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1790"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>is<sp/>derived<sp/>from<sp/>SchurPrecond<sp/>and<sp/>serves<sp/>as<sp/>the<sp/>base</highlight></codeline>
<codeline lineno="1791"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>class<sp/>for<sp/>all<sp/>NavierStokes<sp/>preconditioners<sp/>which<sp/>use<sp/>the<sp/>Schur<sp/>complement</highlight></codeline>
<codeline lineno="1792"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>method.</highlight></codeline>
<codeline lineno="1793"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1ac178170f617c8e626197a11d3420c52b" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=None,</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner=True,</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_info=None):</highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SchurPrecon.__init__(self,</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=prefix,</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_info=solver_info)</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref><sp/>=<sp/><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor" kindref="compound">SchurOperatorConstructor</ref>(self,</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pde_type=</highlight><highlight class="stringliteral">&apos;navier_stokes&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a787b4a965942b032a89570b80f61ec4d" kindref="member">velocity_block_preconditioner</ref><sp/>=<sp/>velocity_block_preconditioner</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a787b4a965942b032a89570b80f61ec4d" kindref="member">velocity_block_preconditioner</ref>:</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a7771e2553c0af703e72e372ced3f2246" kindref="member">_initialize_velocity_idx</ref>()</highlight></codeline>
<codeline lineno="1808"><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_initialize_velocity_idx(self):</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1811"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>creates<sp/>index<sp/>sets<sp/>so<sp/>that<sp/>a<sp/>block</highlight></codeline>
<codeline lineno="1812"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preconditioner<sp/>ca<sp/>be<sp/>used<sp/>for<sp/>the<sp/>velocity<sp/>solve.<sp/>One<sp/>index</highlight></codeline>
<codeline lineno="1813"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>(e.g.<sp/>is_vel_*)<sp/>describes<sp/>the<sp/>global<sp/>dof<sp/>associated</highlight></codeline>
<codeline lineno="1814"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>*<sp/>component<sp/>of<sp/>the<sp/>velocity.<sp/><sp/>The<sp/>second</highlight></codeline>
<codeline lineno="1815"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>(e.g.<sp/>is*_local)<sp/>describes<sp/>the<sp/>local<sp/>dof</highlight></codeline>
<codeline lineno="1816"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexes<sp/>relative<sp/>to<sp/>the<sp/>velocity<sp/>block.</highlight></codeline>
<codeline lineno="1817"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_range<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.getOwnershipRange()</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neqns<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.getSizes()[0][0]</highlight></codeline>
<codeline lineno="1820"><highlight class="normal"></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_is_func<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46988b0f72024157f6064f44dfb4fba1" kindref="member">model_info</ref>.dof_order_class.create_vel_DOF_IS</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_DOF_full,<sp/>velocity_DOF_local<sp/>=<sp/>vel_is_func(L_range,</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neqns,</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46988b0f72024157f6064f44dfb4fba1" kindref="member">model_info</ref>.nc)</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1aa32787176bf03375d76c7262b88706cd" kindref="member">get_velocity_var_names</ref>()):</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;is_vel_&quot;</highlight><highlight class="normal"><sp/>+<sp/>var</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;is&quot;</highlight><highlight class="normal">+var+</highlight><highlight class="stringliteral">&quot;_local&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self,name_1,<sp/>velocity_DOF_full[i])</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self,name_2,<sp/>velocity_DOF_local[i])</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_initialize_velocity_block_preconditioner(self,global_ksp):</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Initialize<sp/>the<sp/>velocity<sp/>block<sp/>preconditioner.</highlight></codeline>
<codeline lineno="1835"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1836"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.setType(</highlight><highlight class="stringliteral">&apos;fieldsplit&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_lst<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1aa32787176bf03375d76c7262b88706cd" kindref="member">get_velocity_var_names</ref>():</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_local_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;is&quot;</highlight><highlight class="normal"><sp/>+<sp/>var<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_local&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_local<sp/>=<sp/>getattr(self,is_local_name)</highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_lst.append((var,is_local))</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.setFieldSplitIS(*is_lst)</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ARB<sp/>-<sp/>need<sp/>to<sp/>run<sp/>some<sp/>tests<sp/>to<sp/>see<sp/>what<sp/>the<sp/>best<sp/>option<sp/>is<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.setFieldSplitType(1)<sp/><sp/>#<sp/>This<sp/>is<sp/>for<sp/>additive<sp/>(e.g.<sp/>Jacobi)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_setup_velocity_block_preconditioner(self,global_ksp):</highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;To<sp/>improve<sp/>the<sp/>effiency<sp/>of<sp/>the<sp/>velocity-block<sp/>solve<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="1849"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Schur<sp/>complement<sp/>preconditioner,<sp/>we<sp/>can<sp/>apply<sp/>a<sp/>block</highlight></codeline>
<codeline lineno="1850"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preconditioner.<sp/><sp/>This<sp/>function<sp/>builds<sp/>an<sp/>index<sp/>set<sp/>to</highlight></codeline>
<codeline lineno="1851"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>support<sp/>this.</highlight></codeline>
<codeline lineno="1852"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1853"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1854"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1855"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp<sp/>:<sp/>xxx</highlight></codeline>
<codeline lineno="1856"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xxx</highlight></codeline>
<codeline lineno="1857"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1858"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="1859"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----</highlight></codeline>
<codeline lineno="1860"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>currently<sp/>only<sp/>set<sp/>up<sp/>for<sp/>interlaced<sp/>DOF<sp/>ordering.</highlight></codeline>
<codeline lineno="1861"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a1166bf381d3010027b5f78866a6abee3" kindref="member">velocity_sub_matrix</ref><sp/>=<sp/>global_ksp.getOperators()[0].createSubMatrix(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>,self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>)</highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1aa32787176bf03375d76c7262b88706cd" kindref="member">get_velocity_var_names</ref>()):</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;is_vel_&quot;</highlight><highlight class="normal"><sp/>+<sp/>var</highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_str_mat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;velocity_&quot;</highlight><highlight class="normal"><sp/>+<sp/>var<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_sub_matrix&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_set<sp/>=<sp/>getattr(self,<sp/>name_str)</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self,name_str_mat,<sp/>global_ksp.getOperators()[0].createSubMatrix(is_set,</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_set))</highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.getFieldSplitSubKSP()[i].setOperators(getattr(self,name_str_mat),</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getattr(self,name_str_mat))</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.getFieldSplitSubKSP()[i].setFromOptions()</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.getFieldSplitSubKSP()[i].<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a5bf0d6351a3b82079f92d86e8d338e36" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a5bf0d6351a3b82079f92d86e8d338e36" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.setUp()</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"></highlight></codeline>
<codeline lineno="1879" refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp" kindref="compound">Schur_Sp</ref>(<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur" kindref="compound">NavierStokesSchur</ref>):</highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1881"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Implements<sp/>the<sp/>SIMPLE<sp/>Schur<sp/>complement<sp/>approximation<sp/>proposed</highlight></codeline>
<codeline lineno="1882"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>in<sp/>2009<sp/>by<sp/>Rehman,<sp/>Vuik<sp/>and<sp/>Segal.</highlight></codeline>
<codeline lineno="1883"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1884"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1885"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1886"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>L:<sp/>:class:`p4pyPETSc.Mat`</highlight></codeline>
<codeline lineno="1887"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>prefix:<sp/>str</highlight></codeline>
<codeline lineno="1888"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Specifies<sp/>PETSc<sp/>preconditioner<sp/>prefix<sp/>for<sp/>setting<sp/>options</highlight></codeline>
<codeline lineno="1889"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1890"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="1891"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-----</highlight></codeline>
<codeline lineno="1892"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>Schur<sp/>complement<sp/>approximation<sp/>is<sp/>also<sp/>avaliable<sp/>in<sp/>PETSc</highlight></codeline>
<codeline lineno="1893"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>by<sp/>the<sp/>name<sp/>selfp.</highlight></codeline>
<codeline lineno="1894"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1895"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>One<sp/>drawback<sp/>of<sp/>this<sp/>operator<sp/>is<sp/>that<sp/>it<sp/>must<sp/>be<sp/>constructed<sp/>from</highlight></codeline>
<codeline lineno="1896"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>the<sp/>component<sp/>pieces.<sp/><sp/>For<sp/>small<sp/>problems<sp/>this<sp/>is<sp/>okay,</highlight></codeline>
<codeline lineno="1897"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>but<sp/>for<sp/>large<sp/>problems<sp/>this<sp/>process<sp/>may<sp/>not<sp/>scale<sp/>well<sp/>and<sp/>often</highlight></codeline>
<codeline lineno="1898"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>a<sp/>pure<sp/>Laplace<sp/>operator<sp/>will<sp/>prove<sp/>a<sp/>more<sp/>effective<sp/>choice<sp/>of</highlight></codeline>
<codeline lineno="1899"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>preconditioner.</highlight></codeline>
<codeline lineno="1900"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a823c7d70f3be204b37963e2a25829663" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix,</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner=False,</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_info=None):</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(Schur_Sp,<sp/>self).<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a823c7d70f3be204b37963e2a25829663" kindref="member">__init__</ref>(L,</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix,</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner,</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_info=solver_info)</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a787b4a965942b032a89570b80f61ec4d" kindref="member">velocity_block_preconditioner</ref>:</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a6349d3add5877589879595a71277d3d9" kindref="member">velocity_block_preconditioner_set</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a74fea3dd628cc368df53a5d770461e20" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp,</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a6349d3add5877589879595a71277d3d9" kindref="member">velocity_block_preconditioner_set</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1ac7c8003556df969b2477fad5a1fc5049" kindref="member">_initialize_velocity_block_preconditioner</ref>(global_ksp)</highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a6349d3add5877589879595a71277d3d9" kindref="member">velocity_block_preconditioner_set</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1abdbe21a90e3859d06325dcc279497eca" kindref="member">_setSchurlog</ref>(global_ksp)</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a7090b45c43778499923a845cf3be6420" kindref="member">A00</ref><sp/>=<sp/>global_ksp.getOperators()[0].createSubMatrix(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>,</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>)</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a2b5c16c2d84165c1a62825555f61963f" kindref="member">A01</ref><sp/>=<sp/>global_ksp.getOperators()[0].createSubMatrix(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>,</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ae493424f7ff8e0469614be17b81d92e4" kindref="member">isp</ref>)</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1aaec226642e3020c576d5d92bb37e8e12" kindref="member">A10</ref><sp/>=<sp/>global_ksp.getOperators()[0].createSubMatrix(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ae493424f7ff8e0469614be17b81d92e4" kindref="member">isp</ref>,</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>)</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a51bc58b3c14e30f8d74ff8edbef97086" kindref="member">A11</ref><sp/>=<sp/>global_ksp.getOperators()[0].createSubMatrix(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ae493424f7ff8e0469614be17b81d92e4" kindref="member">isp</ref>,</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ae493424f7ff8e0469614be17b81d92e4" kindref="member">isp</ref>)</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_sizes<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ae493424f7ff8e0469614be17b81d92e4" kindref="member">isp</ref>.sizes</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a4b673a5ca407313183a544b4fe5b5139" kindref="member">SpInv_shell</ref><sp/>=<sp/>p4pyPETSc.Mat().create()</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a4b673a5ca407313183a544b4fe5b5139" kindref="member">SpInv_shell</ref>.setSizes(L_sizes)</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a4b673a5ca407313183a544b4fe5b5139" kindref="member">SpInv_shell</ref>.setType(</highlight><highlight class="stringliteral">&apos;python&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constNullSpace<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ae9abf2f9332649ea98325a3ea3f4cf3e" kindref="member">_is_const_pressure_null_space</ref>()</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a9f7e18691a2841179b1ecb24ef470413" kindref="member">matcontext_inv</ref><sp/>=<sp/><ref refid="d8/d3c/classproteus_1_1LinearAlgebraTools_1_1SpInv__shell" kindref="compound">SpInv_shell</ref>(self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a7090b45c43778499923a845cf3be6420" kindref="member">A00</ref>,</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a51bc58b3c14e30f8d74ff8edbef97086" kindref="member">A11</ref>,</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a2b5c16c2d84165c1a62825555f61963f" kindref="member">A01</ref>,</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1aaec226642e3020c576d5d92bb37e8e12" kindref="member">A10</ref>,</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constNullSpace)</highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a4b673a5ca407313183a544b4fe5b5139" kindref="member">SpInv_shell</ref>.setPythonContext(self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a9f7e18691a2841179b1ecb24ef470413" kindref="member">matcontext_inv</ref>)</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a4b673a5ca407313183a544b4fe5b5139" kindref="member">SpInv_shell</ref>.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a74fea3dd628cc368df53a5d770461e20" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>PETSc<sp/>Schur<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[1].pc.setType(</highlight><highlight class="stringliteral">&apos;python&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[1].pc.setPythonContext(self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a9f7e18691a2841179b1ecb24ef470413" kindref="member">matcontext_inv</ref>)</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[1].pc.setUp()</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/dab/classproteus_1_1LinearSolvers_1_1Schur__Qp" kindref="compound">Schur_Qp</ref>(<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon" kindref="compound">SchurPrecon</ref>)<sp/>:</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1952"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>Navier-Stokes<sp/>(or<sp/>Stokes)<sp/>preconditioner<sp/>which<sp/>uses<sp/>the</highlight></codeline>
<codeline lineno="1953"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>viscosity<sp/>scaled<sp/>pressure<sp/>mass<sp/>matrix.</highlight></codeline>
<codeline lineno="1954"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a823c7d70f3be204b37963e2a25829663" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=None):</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1959"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>pressure<sp/>mass<sp/>matrix<sp/>class.</highlight></codeline>
<codeline lineno="1960"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1961"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1962"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="1963"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>:<sp/>petsc4py<sp/>matrix</highlight></codeline>
<codeline lineno="1964"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defines<sp/>the<sp/>problem&apos;s<sp/>operator.</highlight></codeline>
<codeline lineno="1965"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="1966"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Specifies<sp/>PETSc<sp/>preconditioner<sp/>prefix<sp/>for<sp/>setting<sp/>options</highlight></codeline>
<codeline lineno="1967"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SchurPrecon.__init__(self,</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix)</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref><sp/>=<sp/><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor" kindref="compound">SchurOperatorConstructor</ref>(self)</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.Q<sp/>=<sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.initializeQ()</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a74fea3dd628cc368df53a5d770461e20" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp,</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Attaches<sp/>the<sp/>pressure<sp/>mass<sp/>matrix<sp/>to<sp/>PETSc<sp/>KSP<sp/>preconditioner.</highlight></codeline>
<codeline lineno="1978"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="1979"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="1980"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="1981"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp<sp/>:<sp/>PETSc<sp/>KSP<sp/>object</highlight></codeline>
<codeline lineno="1982"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Create<sp/>the<sp/>pressure<sp/>mass<sp/>matrix<sp/>and<sp/>scaxle<sp/>by<sp/>the<sp/>viscosity.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.updateQ()</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.Qp<sp/>=<sp/>self.Q.createSubMatrix(self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.linear_smoother.isp,</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.linear_smoother.isp)</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.Qp.<ref refid="d6/d5e/namespaceproteus_1_1tests_1_1MoveMeshMonitor_1_1movemesh__monitor_1a8045a0f5d22b86f957fcbfd990136add" kindref="member">scale</ref>(old_div(1.,self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.pde.coefficients.nu))</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_sizes<sp/>=<sp/>self.Qp.size</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Setup<sp/>a<sp/>PETSc<sp/>shell<sp/>for<sp/>the<sp/>inverse<sp/>Qp<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.QpInv_shell<sp/>=<sp/>p4pyPETSc.Mat().create()</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.QpInv_shell.setSizes(L_sizes)</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.QpInv_shell.setType(</highlight><highlight class="stringliteral">&apos;python&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a9f7e18691a2841179b1ecb24ef470413" kindref="member">matcontext_inv</ref><sp/>=<sp/><ref refid="dd/da8/classproteus_1_1LinearAlgebraTools_1_1MatrixInvShell" kindref="compound">MatrixInvShell</ref>(self.Qp)</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.QpInv_shell.setPythonContext(self.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a9f7e18691a2841179b1ecb24ef470413" kindref="member">matcontext_inv</ref>)</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.QpInv_shell.<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a74fea3dd628cc368df53a5d770461e20" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Set<sp/>PETSc<sp/>Schur<sp/>operator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a77d1c3336f555e463ecb06496a1e400a" kindref="member">_setSchurApproximation</ref>(global_ksp)</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1abdbe21a90e3859d06325dcc279497eca" kindref="member">_setSchurlog</ref>(global_ksp)</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur" kindref="compound">NavierStokesSchur</ref>(<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon" kindref="compound">SchurPrecon</ref>):</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Schur<sp/>complement<sp/>preconditioners<sp/>for<sp/>Navier-Stokes<sp/>problems.</highlight></codeline>
<codeline lineno="2003"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2004"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>This<sp/>class<sp/>is<sp/>derived<sp/>from<sp/>SchurPrecond<sp/>and<sp/>serves<sp/>as<sp/>the<sp/>base</highlight></codeline>
<codeline lineno="2005"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>class<sp/>for<sp/>all<sp/>NavierStokes<sp/>preconditioners<sp/>which<sp/>use<sp/>the<sp/>Schur<sp/>complement</highlight></codeline>
<codeline lineno="2006"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>method.</highlight></codeline>
<codeline lineno="2007"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a823c7d70f3be204b37963e2a25829663" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=None,</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner=True,</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_info=None):</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2014"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>a<sp/>base<sp/>class<sp/>for<sp/>Navier-Stokes<sp/>Schur<sp/>complement</highlight></codeline>
<codeline lineno="2015"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preconditioners.</highlight></codeline>
<codeline lineno="2016"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2017"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="2018"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="2019"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>:<sp/>petsc4py<sp/>matrix</highlight></codeline>
<codeline lineno="2020"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defines<sp/>the<sp/>problem&apos;s<sp/>operator</highlight></codeline>
<codeline lineno="2021"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="2022"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Specifies<sp/>PETSc<sp/>preconditioner<sp/>prefix<sp/>for<sp/>setting<sp/>options</highlight></codeline>
<codeline lineno="2023"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner<sp/>:<sp/>Bool</highlight></codeline>
<codeline lineno="2024"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>the<sp/>velocity<sp/>block<sp/>should<sp/>be<sp/>solved<sp/>as</highlight></codeline>
<codeline lineno="2025"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>block<sp/>preconditioner</highlight></codeline>
<codeline lineno="2026"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SchurPrecon.__init__(self,</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix,</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_info=solver_info)</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref><sp/>=<sp/><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor" kindref="compound">SchurOperatorConstructor</ref>(self,</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pde_type=</highlight><highlight class="stringliteral">&apos;navier_stokes&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a787b4a965942b032a89570b80f61ec4d" kindref="member">velocity_block_preconditioner</ref><sp/>=<sp/>velocity_block_preconditioner</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a787b4a965942b032a89570b80f61ec4d" kindref="member">velocity_block_preconditioner</ref>:</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a7771e2553c0af703e72e372ced3f2246" kindref="member">_initialize_velocity_idx</ref>()</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_initialize_velocity_idx(self):</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2039"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>creates<sp/>index<sp/>sets<sp/>so<sp/>that<sp/>a<sp/>block</highlight></codeline>
<codeline lineno="2040"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preconditioner<sp/>ca<sp/>be<sp/>used<sp/>for<sp/>the<sp/>velocity<sp/>solve.<sp/>One<sp/>index</highlight></codeline>
<codeline lineno="2041"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set<sp/>(e.g.<sp/>is_vel_*)<sp/>describes<sp/>the<sp/>global<sp/>dof<sp/>associated</highlight></codeline>
<codeline lineno="2042"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>*<sp/>component<sp/>of<sp/>the<sp/>velocity.<sp/><sp/>The<sp/>second</highlight></codeline>
<codeline lineno="2043"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>(e.g.<sp/>is*_local)<sp/>describes<sp/>the<sp/>local<sp/>dof</highlight></codeline>
<codeline lineno="2044"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indexes<sp/>relative<sp/>to<sp/>the<sp/>velocity<sp/>block.</highlight></codeline>
<codeline lineno="2045"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_range<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.getOwnershipRange()</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neqns<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.getSizes()[0][0]</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vel_is_func<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46988b0f72024157f6064f44dfb4fba1" kindref="member">model_info</ref>.dof_order_class.create_vel_DOF_IS</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_DOF_full,<sp/>velocity_DOF_local<sp/>=<sp/>vel_is_func(L_range,</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neqns,</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a46988b0f72024157f6064f44dfb4fba1" kindref="member">model_info</ref>.nc)</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1aa32787176bf03375d76c7262b88706cd" kindref="member">get_velocity_var_names</ref>()):</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_1<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;is_vel_&quot;</highlight><highlight class="normal"><sp/>+<sp/>var</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_2<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;is&quot;</highlight><highlight class="normal">+var+</highlight><highlight class="stringliteral">&quot;_local&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self,name_1,<sp/>velocity_DOF_full[i])</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self,name_2,<sp/>velocity_DOF_local[i])</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_initialize_velocity_block_preconditioner(self,global_ksp):</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Initialize<sp/>the<sp/>velocity<sp/>block<sp/>preconditioner.</highlight></codeline>
<codeline lineno="2063"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2064"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.setType(</highlight><highlight class="stringliteral">&apos;fieldsplit&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_lst<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1aa32787176bf03375d76c7262b88706cd" kindref="member">get_velocity_var_names</ref>():</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_local_name<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;is&quot;</highlight><highlight class="normal"><sp/>+<sp/>var<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_local&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_local<sp/>=<sp/>getattr(self,is_local_name)</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_lst.append((var,is_local))</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.setFieldSplitIS(*is_lst)</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>ARB<sp/>-<sp/>need<sp/>to<sp/>run<sp/>some<sp/>tests<sp/>to<sp/>see<sp/>what<sp/>the<sp/>best<sp/>option<sp/>is<sp/>here</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.setFieldSplitType(1)<sp/><sp/>#<sp/>This<sp/>is<sp/>for<sp/>additive<sp/>(e.g.<sp/>Jacobi)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_setup_velocity_block_preconditioner(self,global_ksp):</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;To<sp/>improve<sp/>the<sp/>effiency<sp/>of<sp/>the<sp/>velocity-block<sp/>solve<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="2077"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Schur<sp/>complement<sp/>preconditioner,<sp/>we<sp/>can<sp/>apply<sp/>a<sp/>block</highlight></codeline>
<codeline lineno="2078"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preconditioner.<sp/><sp/>This<sp/>function<sp/>builds<sp/>an<sp/>index<sp/>set<sp/>to</highlight></codeline>
<codeline lineno="2079"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>support<sp/>this.</highlight></codeline>
<codeline lineno="2080"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2081"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="2082"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="2083"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp<sp/>:<sp/>xxx</highlight></codeline>
<codeline lineno="2084"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xxx</highlight></codeline>
<codeline lineno="2085"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2086"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="2087"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----</highlight></codeline>
<codeline lineno="2088"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>is<sp/>currently<sp/>only<sp/>set<sp/>up<sp/>for<sp/>interlaced<sp/>DOF<sp/>ordering.</highlight></codeline>
<codeline lineno="2089"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a1166bf381d3010027b5f78866a6abee3" kindref="member">velocity_sub_matrix</ref><sp/>=<sp/>global_ksp.getOperators()[0].createSubMatrix(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>,self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>)</highlight></codeline>
<codeline lineno="2091"><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>var<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1aa32787176bf03375d76c7262b88706cd" kindref="member">get_velocity_var_names</ref>()):</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_str<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;is_vel_&quot;</highlight><highlight class="normal"><sp/>+<sp/>var</highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name_str_mat<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;velocity_&quot;</highlight><highlight class="normal"><sp/>+<sp/>var<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;_sub_matrix&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_set<sp/>=<sp/>getattr(self,<sp/>name_str)</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setattr(self,name_str_mat,<sp/>global_ksp.getOperators()[0].createSubMatrix(is_set,</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is_set))</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.getFieldSplitSubKSP()[i].setOperators(getattr(self,name_str_mat),</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getattr(self,name_str_mat))</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.getFieldSplitSubKSP()[i].setFromOptions()</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.getFieldSplitSubKSP()[i].<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a74fea3dd628cc368df53a5d770461e20" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].<ref refid="d3/d61/classproteus_1_1LinearSolvers_1_1Schur__Sp_1a74fea3dd628cc368df53a5d770461e20" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.setUp()</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight></codeline>
<codeline lineno="2107" refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD" kindref="compound">NavierStokes_TwoPhasePCD</ref>(<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur" kindref="compound">NavierStokesSchur</ref>):</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">r&quot;&quot;&quot;<sp/>Two-phase<sp/>PCD<sp/>Schur<sp/>complement<sp/>approximation<sp/>class.</highlight></codeline>
<codeline lineno="2109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Details<sp/>of<sp/>this<sp/>operator<sp/>are<sp/>in<sp/>the<sp/>forthcoming<sp/>paper</highlight></codeline>
<codeline lineno="2110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&apos;Preconditioners<sp/>for<sp/>Two-Phase<sp/>Incompressible<sp/>Navier-Stokes</highlight></codeline>
<codeline lineno="2111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Flow&apos;,<sp/>Bootland<sp/>et.<sp/>al.<sp/>2017.</highlight></codeline>
<codeline lineno="2112"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Since<sp/>the<sp/>two-phase<sp/>Navier-Stokes<sp/>problem<sp/>used<sp/>in<sp/>the<sp/>MPRANS</highlight></codeline>
<codeline lineno="2114"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>module<sp/>of<sp/>Proteus</highlight></codeline>
<codeline lineno="2115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>has<sp/>some<sp/>additional<sp/>features<sp/>not<sp/>include<sp/>in<sp/>the<sp/>above<sp/>paper,</highlight></codeline>
<codeline lineno="2116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>few<sp/>additional<sp/>flags<sp/>and<sp/>options<sp/>are<sp/>avaliable.</highlight></codeline>
<codeline lineno="2117"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>density<sp/>scaling<sp/>-<sp/>This<sp/>flag<sp/>allows<sp/>the<sp/>user<sp/>to<sp/>specify</highlight></codeline>
<codeline lineno="2119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>whether<sp/>the<sp/>advection<sp/>and<sp/>mass<sp/>terms<sp/>in<sp/>the<sp/>second<sp/>term</highlight></codeline>
<codeline lineno="2120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>of<sp/>the<sp/>PCD<sp/>operator<sp/>should<sp/>use<sp/>the<sp/>actual<sp/>density<sp/>or<sp/>the</highlight></codeline>
<codeline lineno="2121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scale<sp/>with<sp/>the<sp/>number<sp/>one.</highlight></codeline>
<codeline lineno="2122"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>numerical<sp/>viscosity<sp/>-<sp/>This<sp/>flag<sp/>specifies<sp/>whether<sp/>the</highlight></codeline>
<codeline lineno="2124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>additional<sp/>viscosity<sp/>introduced<sp/>from<sp/>shock<sp/>capturing</highlight></codeline>
<codeline lineno="2125"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stabilization<sp/>should<sp/>be<sp/>included<sp/>as<sp/>part<sp/>of<sp/>the<sp/>viscosity</highlight></codeline>
<codeline lineno="2126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefficient.</highlight></codeline>
<codeline lineno="2127"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>mass<sp/>form<sp/>-<sp/>This<sp/>flag<sp/>allows<sp/>the<sp/>user<sp/>to<sp/>specify<sp/>what<sp/>form</highlight></codeline>
<codeline lineno="2129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>mass<sp/>matrix<sp/>takes,<sp/>lumped<sp/>(True)<sp/>or<sp/>full<sp/>(False).</highlight></codeline>
<codeline lineno="2130"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>number<sp/>chebyshev<sp/>its<sp/>-<sp/>This<sp/>integer<sp/>allows<sp/>the<sp/>user<sp/>to</highlight></codeline>
<codeline lineno="2132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>specify<sp/>how<sp/>many<sp/>Chebyshev<sp/>its<sp/>to<sp/>use<sp/>if<sp/>a<sp/>full<sp/>mass<sp/>matrix</highlight></codeline>
<codeline lineno="2133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>is<sp/>used<sp/>and<sp/>a<sp/>direct<sp/>solver<sp/>is<sp/>not<sp/>applied.</highlight></codeline>
<codeline lineno="2134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1abb4726c59b9336603e1df40ece8c6d73" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>=<sp/>None,</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>density_scaling<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numerical_viscosity<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_chebyshev_its<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>laplace_null_space<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner=False):</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initialize<sp/>the<sp/>two-phase<sp/>PCD<sp/>preconditioning<sp/>class.</highlight></codeline>
<codeline lineno="2146"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="2148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="2149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>:<sp/>petsc4py<sp/>Matrix</highlight></codeline>
<codeline lineno="2150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defines<sp/>the<sp/>problem&apos;s<sp/>operator.</highlight></codeline>
<codeline lineno="2151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="2152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>allowing<sp/>PETSc4py<sp/>options.</highlight></codeline>
<codeline lineno="2153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>density_scaling<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="2154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>mass<sp/>and<sp/>advection<sp/>terms<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="2155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaled<sp/>with<sp/>the<sp/>density<sp/>(True)<sp/>or<sp/>1<sp/>(False).</highlight></codeline>
<codeline lineno="2156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numerical_viscosity<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="2157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>the<sp/>viscosity<sp/>used<sp/>to<sp/>calculate</highlight></codeline>
<codeline lineno="2158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>inverse<sp/>scaled<sp/>mass<sp/>matrix<sp/>should<sp/>include<sp/>numerical</highlight></codeline>
<codeline lineno="2159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>viscosity<sp/>(True)<sp/>or<sp/>not<sp/>(False).</highlight></codeline>
<codeline lineno="2160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="2161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>the<sp/>viscosity<sp/>and<sp/>density<sp/>mass<sp/>matrices</highlight></codeline>
<codeline lineno="2162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>should<sp/>be<sp/>lumped<sp/>(True)<sp/>or<sp/>full<sp/>(False).</highlight></codeline>
<codeline lineno="2163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_chebyshev_its<sp/>:<sp/>int</highlight></codeline>
<codeline lineno="2164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>flag<sp/>allows<sp/>the<sp/>user<sp/>to<sp/>apply<sp/>the<sp/>mass<sp/>matrices<sp/>with</highlight></codeline>
<codeline lineno="2165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>chebyshev<sp/>semi-iteration.<sp/><sp/>0<sp/><sp/>indicates<sp/>the<sp/>semi-</highlight></codeline>
<codeline lineno="2166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iteration<sp/>should<sp/>not<sp/>be<sp/>used,<sp/>where<sp/>as<sp/>a<sp/>number<sp/>1,2,...</highlight></codeline>
<codeline lineno="2167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indicates<sp/>the<sp/>number<sp/>of<sp/>iterations<sp/>the<sp/>method<sp/>should<sp/>take.</highlight></codeline>
<codeline lineno="2168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>laplace_null_space<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="2169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>the<sp/>laplace<sp/>operator<sp/>inside<sp/>the</highlight></codeline>
<codeline lineno="2170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two-phase<sp/>PCD<sp/>operator<sp/>has<sp/>a<sp/>constant<sp/>null<sp/>space.</highlight></codeline>
<codeline lineno="2171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="2172"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>to<sp/>use<sp/>a<sp/>block<sp/>preconditioner<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="2173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity<sp/>solve.</highlight></codeline>
<codeline lineno="2174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavierStokesSchur.__init__(self,</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix,</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner)</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>the<sp/>discrete<sp/>operators</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a72724282ce0e9730b073996f4fac0465" kindref="member">N_rho</ref><sp/>=<sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.initializeTwoPhaseCp_rho()</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1aa7447fe25c3d4a51c342908d18aa33cf" kindref="member">A_invScaledRho</ref><sp/>=<sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.initializeTwoPhaseInvScaledAp()</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a3f12f4729a69b014e7e9c6d18da96514" kindref="member">Q_rho</ref><sp/>=<sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.initializeTwoPhaseQp_rho()</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1ab825014c663d9f0c856232c19771cd1b" kindref="member">Q_invScaledVis</ref><sp/>=<sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.initializeTwoPhaseInvScaledQp()</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TP<sp/>PCD<sp/>scaling<sp/>options</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1abacd39b5d996a80f2138caef932f8b4c" kindref="member">density_scaling</ref><sp/>=<sp/>density_scaling</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a7929daf6ce047ead57a9e920a6dae760" kindref="member">numerical_viscosity</ref><sp/>=<sp/>numerical_viscosity</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a3e0e314af0991f67e2fe5ea7229e250d" kindref="member">lumped</ref><sp/>=<sp/>lumped</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a78cd4668aa29324a9b01fed2b20ff04b" kindref="member">num_chebyshev_its</ref><sp/>=<sp/>num_chebyshev_its</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a1439b958b4602a57710c1a638f415590" kindref="member">laplace_null_space</ref><sp/>=<sp/>laplace_null_space</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Strong<sp/>Dirichlet<sp/>Pressure<sp/>DOF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a0ae045ee7dd25167cb7f21f108de824f" kindref="member">strongPressureDOF</ref><sp/>=<sp/>list(L.pde.dirichletConditionsForceDOF[0].DOFBoundaryPointDict.keys())</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>KeyError:</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a0ae045ee7dd25167cb7f21f108de824f" kindref="member">strongPressureDOF</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a787b4a965942b032a89570b80f61ec4d" kindref="member">velocity_block_preconditioner</ref>:</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a03e68009fbf93832afe03cfc42579580" kindref="member">velocity_block_preconditioner_set</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1afc637cade17fa74e211236b04294df7d" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp,</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Comm</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm<sp/>=<sp/>Comm.get()</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isp<sp/>=<sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.linear_smoother.isp</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isv<sp/>=<sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.linear_smoother.isv</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.updateNp_rho(density_scaling<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1abacd39b5d996a80f2138caef932f8b4c" kindref="member">density_scaling</ref>)</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1ae936d09e08b95ff1b79cd073b49345f2" kindref="member">Np_rho</ref><sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a72724282ce0e9730b073996f4fac0465" kindref="member">N_rho</ref>.createSubMatrix(isp,</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isp)</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>newton_its<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.updateInvScaledAp()</highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.updateTwoPhaseQp_rho(density_scaling<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1abacd39b5d996a80f2138caef932f8b4c" kindref="member">density_scaling</ref>,</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a3e0e314af0991f67e2fe5ea7229e250d" kindref="member">lumped</ref>)</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.updateTwoPhaseInvScaledQp_visc(numerical_viscosity<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a7929daf6ce047ead57a9e920a6dae760" kindref="member">numerical_viscosity</ref>,</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a3e0e314af0991f67e2fe5ea7229e250d" kindref="member">lumped</ref>)</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1aa7616ddd227ea42ede6ad1c6837d0531" kindref="member">Ap_invScaledRho</ref><sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1aa7447fe25c3d4a51c342908d18aa33cf" kindref="member">A_invScaledRho</ref>.createSubMatrix(isp,</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isp)</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a71d4e0ae10bd48812874e91988a8301b" kindref="member">Qp_rho</ref><sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a3f12f4729a69b014e7e9c6d18da96514" kindref="member">Q_rho</ref>.createSubMatrix(isp,</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isp)</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a45654ccddff9d217090b9463b669d27e" kindref="member">Qp_invScaledVis</ref><sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1ab825014c663d9f0c856232c19771cd1b" kindref="member">Q_invScaledVis</ref>.createSubMatrix(isp,</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isp)</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>newton_its<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.updateInvScaledAp()</highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.updateTwoPhaseQp_rho(density_scaling<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1abacd39b5d996a80f2138caef932f8b4c" kindref="member">density_scaling</ref>,</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a3e0e314af0991f67e2fe5ea7229e250d" kindref="member">lumped</ref>)</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1acd5803df69d7c9e3d16a881c89520813" kindref="member">operator_constructor</ref>.updateTwoPhaseInvScaledQp_visc(numerical_viscosity<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a7929daf6ce047ead57a9e920a6dae760" kindref="member">numerical_viscosity</ref>,</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a3e0e314af0991f67e2fe5ea7229e250d" kindref="member">lumped</ref>)</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1aa7616ddd227ea42ede6ad1c6837d0531" kindref="member">Ap_invScaledRho</ref><sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1aa7447fe25c3d4a51c342908d18aa33cf" kindref="member">A_invScaledRho</ref>.createSubMatrix(isp,</highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isp)</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a71d4e0ae10bd48812874e91988a8301b" kindref="member">Qp_rho</ref><sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a3f12f4729a69b014e7e9c6d18da96514" kindref="member">Q_rho</ref>.createSubMatrix(isp,</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isp)</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a45654ccddff9d217090b9463b669d27e" kindref="member">Qp_invScaledVis</ref><sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1ab825014c663d9f0c856232c19771cd1b" kindref="member">Q_invScaledVis</ref>.createSubMatrix(isp,</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isp)</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>******<sp/>Sp<sp/>for<sp/>Ap<sp/>*******</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO<sp/>-<sp/>This<sp/>is<sp/>included<sp/>for<sp/>a<sp/>possible<sp/>extension<sp/>which<sp/>exchanges<sp/>Ap<sp/>with<sp/>Sp<sp/>for<sp/>short</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>steps.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A_mat<sp/>=<sp/>global_ksp.getOperators()[0]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.A00<sp/>=<sp/>A_mat.createSubMatrix(isv,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isv)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.A01<sp/>=<sp/>A_mat.createSubMatrix(isv,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.A10<sp/>=<sp/>A_mat.createSubMatrix(isp,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isv)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.A11<sp/>=<sp/>A_mat.createSubMatrix(isp,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>dt<sp/>=<sp/>self.L.pde.timeIntegration.t<sp/>-<sp/>self.L.pde.timeIntegration.tLast</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.A00_inv<sp/>=<sp/>petsc_create_diagonal_inv_matrix(self.A00)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>A00_invBt<sp/>=<sp/>self.A00_inv.matMult(self.A01)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.Sp<sp/>=<sp/>self.A10.matMult(A00_invBt)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.Sp.scale(-<sp/>1.<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>self.Sp.axpy(<sp/>1.<sp/>,<sp/>self.A11)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>End<sp/>********<sp/>Sp<sp/>for<sp/>Ap<sp/>***********</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a03e68009fbf93832afe03cfc42579580" kindref="member">velocity_block_preconditioner_set</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1ac7c8003556df969b2477fad5a1fc5049" kindref="member">_initialize_velocity_block_preconditioner</ref>(global_ksp)</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a03e68009fbf93832afe03cfc42579580" kindref="member">velocity_block_preconditioner_set</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a787b4a965942b032a89570b80f61ec4d" kindref="member">velocity_block_preconditioner</ref>:</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1ace57c7af90aff2c4db76b5139cfb8034" kindref="member">_setup_velocity_block_preconditioner</ref>(global_ksp)</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_sizes<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a71d4e0ae10bd48812874e91988a8301b" kindref="member">Qp_rho</ref>.size</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_range<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a71d4e0ae10bd48812874e91988a8301b" kindref="member">Qp_rho</ref>.owner_range</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a95902505a7a121aa16b94f84fad7f2c3" kindref="member">TP_PCDInv_shell</ref><sp/>=<sp/>p4pyPETSc.Mat().create()</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a95902505a7a121aa16b94f84fad7f2c3" kindref="member">TP_PCDInv_shell</ref>.setSizes(L_sizes)</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a95902505a7a121aa16b94f84fad7f2c3" kindref="member">TP_PCDInv_shell</ref>.setType(</highlight><highlight class="stringliteral">&apos;python&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.pde.timeIntegration.t<sp/>-<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.pde.timeIntegration.tLast</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a96629c5018ca37a85fe7ac96f22a4139" kindref="member">matcontext_inv</ref><sp/>=<sp/><ref refid="df/d8b/classproteus_1_1LinearAlgebraTools_1_1TwoPhase__PCDInv__shell" kindref="compound">TwoPhase_PCDInv_shell</ref>(self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a45654ccddff9d217090b9463b669d27e" kindref="member">Qp_invScaledVis</ref>,</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a71d4e0ae10bd48812874e91988a8301b" kindref="member">Qp_rho</ref>,</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1aa7616ddd227ea42ede6ad1c6837d0531" kindref="member">Ap_invScaledRho</ref>,</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1ae936d09e08b95ff1b79cd073b49345f2" kindref="member">Np_rho</ref>,</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt,</highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_chebyshev_its<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a78cd4668aa29324a9b01fed2b20ff04b" kindref="member">num_chebyshev_its</ref>,</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strong_dirichlet_DOF<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a0ae045ee7dd25167cb7f21f108de824f" kindref="member">strongPressureDOF</ref>,</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>laplace_null_space<sp/>=<sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a1439b958b4602a57710c1a638f415590" kindref="member">laplace_null_space</ref>,</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_info<sp/>=<sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a98f194b939b162f69f8ea8968b07f4c5" kindref="member">L</ref>.pde.par_info)</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a95902505a7a121aa16b94f84fad7f2c3" kindref="member">TP_PCDInv_shell</ref>.setPythonContext(self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a96629c5018ca37a85fe7ac96f22a4139" kindref="member">matcontext_inv</ref>)</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a95902505a7a121aa16b94f84fad7f2c3" kindref="member">TP_PCDInv_shell</ref>.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1afc637cade17fa74e211236b04294df7d" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[1].pc.setType(</highlight><highlight class="stringliteral">&apos;python&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[1].pc.setPythonContext(self.<ref refid="df/dc8/classproteus_1_1LinearSolvers_1_1NavierStokes__TwoPhasePCD_1a96629c5018ca37a85fe7ac96f22a4139" kindref="member">matcontext_inv</ref>)</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[1].pc.setUp()</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a787b4a965942b032a89570b80f61ec4d" kindref="member">velocity_block_preconditioner</ref>:</highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1ace57c7af90aff2c4db76b5139cfb8034" kindref="member">_setup_velocity_block_preconditioner</ref>(global_ksp)</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[0].pc.setUp()</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1abdbe21a90e3859d06325dcc279497eca" kindref="member">_setSchurlog</ref>(global_ksp)</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a4b6c15cc8b633bb27d5650980d14fd93" kindref="member">_get_null_space_cls</ref>().apply_to_schur_block(global_ksp)</highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1abdbe21a90e3859d06325dcc279497eca" kindref="member">_setSchurlog</ref>(global_ksp)</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302" refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC" kindref="compound">Schur_LSC</ref>(<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon" kindref="compound">SchurPrecon</ref>):</highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2304"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>Least-Squares<sp/>Communtator<sp/>preconditioner<sp/>for<sp/>saddle</highlight></codeline>
<codeline lineno="2305"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>point<sp/>problems.</highlight></codeline>
<codeline lineno="2306"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a86b11551da2c9cdd0f138dbbc9a5cfcd" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=None):</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>the<sp/>pressure<sp/>mass<sp/>matrix<sp/>class.</highlight></codeline>
<codeline lineno="2312"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="2314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="2315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>:<sp/>petsc4py<sp/>matrix</highlight></codeline>
<codeline lineno="2316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defines<sp/>the<sp/>problem&apos;s<sp/>operator.</highlight></codeline>
<codeline lineno="2317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="2318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Specifies<sp/>PETSc<sp/>preconditioner<sp/>prefix<sp/>for<sp/>setting<sp/>options</highlight></codeline>
<codeline lineno="2319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SchurPrecon.__init__(self,</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix)</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a04683d16e844d715e39a2ac666b0e067" kindref="member">operator_constructor</ref><sp/>=<sp/><ref refid="d8/dd2/classproteus_1_1LinearSolvers_1_1SchurOperatorConstructor" kindref="compound">SchurOperatorConstructor</ref>(self)</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1afcef9bdd5d0c2b612f74714ad2943c8a" kindref="member">Q</ref><sp/>=<sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a04683d16e844d715e39a2ac666b0e067" kindref="member">operator_constructor</ref>.initializeQ()</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a0a22ac914704e65d8b2c89ff4a70ad1e" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp,</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a04683d16e844d715e39a2ac666b0e067" kindref="member">operator_constructor</ref>.updateQ()</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a1086a3ad52c48a8053e13ae3689bce05" kindref="member">Qv</ref><sp/>=<sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1afcef9bdd5d0c2b612f74714ad2943c8a" kindref="member">Q</ref>.createSubMatrix(self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a04683d16e844d715e39a2ac666b0e067" kindref="member">operator_constructor</ref>.linear_smoother.isv,</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a04683d16e844d715e39a2ac666b0e067" kindref="member">operator_constructor</ref>.linear_smoother.isv)</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a29b7faec6457d32cb7c336cc0127367d" kindref="member">Qv_hat</ref><sp/>=<sp/>p4pyPETSc.Mat().create()</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a29b7faec6457d32cb7c336cc0127367d" kindref="member">Qv_hat</ref>.setSizes(self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a1086a3ad52c48a8053e13ae3689bce05" kindref="member">Qv</ref>.getSizes())</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a29b7faec6457d32cb7c336cc0127367d" kindref="member">Qv_hat</ref>.setType(</highlight><highlight class="stringliteral">&apos;aij&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a29b7faec6457d32cb7c336cc0127367d" kindref="member">Qv_hat</ref>.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a0a22ac914704e65d8b2c89ff4a70ad1e" kindref="member">setUp</ref>()</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a29b7faec6457d32cb7c336cc0127367d" kindref="member">Qv_hat</ref>.setDiagonal(self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a1086a3ad52c48a8053e13ae3689bce05" kindref="member">Qv</ref>.getDiagonal())</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1ac054a866edc801bb0c61eb6cadd53145" kindref="member">B</ref><sp/>=<sp/>global_ksp.getOperators()[0].createSubMatrix(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ae493424f7ff8e0469614be17b81d92e4" kindref="member">isp</ref>,self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>)</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a9307c30ea08e178f994e750e54cace5b" kindref="member">F</ref><sp/>=<sp/>global_ksp.getOperators()[0].createSubMatrix(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>,self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>)</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a92702c27c42154133cb200c3e194ced2" kindref="member">Bt</ref><sp/>=<sp/>global_ksp.getOperators()[0].createSubMatrix(self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ac464b607c51961db81015e7bf9edb1d5" kindref="member">isv</ref>,self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1ae493424f7ff8e0469614be17b81d92e4" kindref="member">isp</ref>)</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a15da7a90fb4b04094a13725322ec484a" kindref="member">matcontext_inv</ref><sp/>=<sp/><ref refid="df/d98/classproteus_1_1LinearAlgebraTools_1_1LSCInv__shell" kindref="compound">LSCInv_shell</ref>(self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a29b7faec6457d32cb7c336cc0127367d" kindref="member">Qv_hat</ref>,self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1ac054a866edc801bb0c61eb6cadd53145" kindref="member">B</ref>,self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a92702c27c42154133cb200c3e194ced2" kindref="member">Bt</ref>,self.<ref refid="dd/dd6/classproteus_1_1LinearSolvers_1_1Schur__LSC_1a9307c30ea08e178f994e750e54cace5b" kindref="member">F</ref>)</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a77d1c3336f555e463ecb06496a1e400a" kindref="member">_setSchurApproximation</ref>(global_ksp)</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1abdbe21a90e3859d06325dcc279497eca" kindref="member">_setSchurlog</ref>(global_ksp)</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"></highlight></codeline>
<codeline lineno="2347" refid="df/d30/classproteus_1_1LinearSolvers_1_1NavierStokes3D" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d30/classproteus_1_1LinearSolvers_1_1NavierStokes3D" kindref="compound">NavierStokes3D</ref>(<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur" kindref="compound">NavierStokesSchur</ref>):</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/d30/classproteus_1_1LinearSolvers_1_1NavierStokes3D_1ab6175b738949c511aaed9a681fe2faaa" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=None,</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner=False):</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>a<sp/>base<sp/>class<sp/>for<sp/>Navier-Stokes<sp/>Schur<sp/>complement</highlight></codeline>
<codeline lineno="2354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preconditioners.</highlight></codeline>
<codeline lineno="2355"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2356"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="2357"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="2358"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>:<sp/>petsc4py<sp/>matrix</highlight></codeline>
<codeline lineno="2359"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defines<sp/>the<sp/>problem&apos;s<sp/>operator</highlight></codeline>
<codeline lineno="2360"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="2361"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Specifies<sp/>PETSc<sp/>preconditioner<sp/>prefix<sp/>for<sp/>setting<sp/>options</highlight></codeline>
<codeline lineno="2362"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner<sp/>:<sp/>Bool</highlight></codeline>
<codeline lineno="2363"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>the<sp/>velocity<sp/>block<sp/>should<sp/>be<sp/>solved<sp/>as</highlight></codeline>
<codeline lineno="2364"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>block<sp/>preconditioner</highlight></codeline>
<codeline lineno="2365"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavierStokesSchur.__init__(self,</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix,</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner=velocity_block_preconditioner)</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a787b4a965942b032a89570b80f61ec4d" kindref="member">velocity_block_preconditioner</ref>:</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d30/classproteus_1_1LinearSolvers_1_1NavierStokes3D_1a45584af2a11a74fb3d27191645600743" kindref="member">velocity_block_preconditioner_set</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/d30/classproteus_1_1LinearSolvers_1_1NavierStokes3D_1a31319623390a8b17d5b9f7e7a3d43739" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp=None,</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="df/d30/classproteus_1_1LinearSolvers_1_1NavierStokes3D_1a45584af2a11a74fb3d27191645600743" kindref="member">velocity_block_preconditioner_set</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1ac7c8003556df969b2477fad5a1fc5049" kindref="member">_initialize_velocity_block_preconditioner</ref>(global_ksp)</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d30/classproteus_1_1LinearSolvers_1_1NavierStokes3D_1a45584af2a11a74fb3d27191645600743" kindref="member">velocity_block_preconditioner_set</ref><sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1a787b4a965942b032a89570b80f61ec4d" kindref="member">velocity_block_preconditioner</ref>:</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/da0/classproteus_1_1LinearSolvers_1_1NavierStokesSchur_1ace57c7af90aff2c4db76b5139cfb8034" kindref="member">_setup_velocity_block_preconditioner</ref>(global_ksp)</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d4/d58/classproteus_1_1LinearSolvers_1_1SchurPrecon_1a4b6c15cc8b633bb27d5650980d14fd93" kindref="member">_get_null_space_cls</ref>().apply_to_schur_block(global_ksp)</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal">SimpleNavierStokes3D<sp/>=<sp/>NavierStokes3D</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"></highlight></codeline>
<codeline lineno="2391" refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC" kindref="compound">SimpleDarcyFC</ref>(object):</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a31a5612c295d9134de198b40dab6333c" kindref="member">__init__</ref>(self,L):</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_sizes<sp/>=<sp/>L.getSizes()</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_range<sp/>=<sp/>L.getOwnershipRange()</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/dcc/jf_8h_1a665602667543592b4547008b72a9631b" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;L_sizes&quot;</highlight><highlight class="normal">,L_sizes)</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neqns<sp/>=<sp/>L_sizes[0][0]</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/dcc/jf_8h_1a665602667543592b4547008b72a9631b" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;neqns&quot;</highlight><highlight class="normal">,neqns)</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1af2bc8a94934247207113dac19f4369e8" kindref="member">saturationDOF</ref><sp/>=<sp/>numpy.arange(L_range[0],L_range[0]+old_div(neqns,2),dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>&quot;saturation&quot;,self.saturationDOF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a2d7a5c638515dc23ce5719acd001f422" kindref="member">pressureDOF</ref><sp/>=<sp/>numpy.arange(L_range[0]+old_div(neqns,2),L_range[0]+neqns,dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>&quot;pressure&quot;,self.pressureDOF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a8a34fa31b903915f087121fdc3464171" kindref="member">pc</ref><sp/>=<sp/>p4pyPETSc.PC().create()</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a8a34fa31b903915f087121fdc3464171" kindref="member">pc</ref>.setType(</highlight><highlight class="stringliteral">&apos;fieldsplit&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a8152368a7aade3d368bc8db3d3456ee5" kindref="member">isp</ref><sp/>=<sp/>p4pyPETSc.IS()</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a8152368a7aade3d368bc8db3d3456ee5" kindref="member">isp</ref>.createGeneral(self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1af2bc8a94934247207113dac19f4369e8" kindref="member">saturationDOF</ref>,comm=p4pyPETSc.COMM_WORLD)</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a0347c2d2ba66650bc70c2610b4a7ab03" kindref="member">isv</ref><sp/>=<sp/>p4pyPETSc.IS()</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a0347c2d2ba66650bc70c2610b4a7ab03" kindref="member">isv</ref>.createGeneral(self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a2d7a5c638515dc23ce5719acd001f422" kindref="member">pressureDOF</ref>,comm=p4pyPETSc.COMM_WORLD)</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a8a34fa31b903915f087121fdc3464171" kindref="member">pc</ref>.setFieldSplitIS(self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a8152368a7aade3d368bc8db3d3456ee5" kindref="member">isp</ref>)</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a8a34fa31b903915f087121fdc3464171" kindref="member">pc</ref>.setFieldSplitIS(self.<ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a0347c2d2ba66650bc70c2610b4a7ab03" kindref="member">isv</ref>)</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d8/da1/classproteus_1_1LinearSolvers_1_1SimpleDarcyFC_1a8e0f49c3d37f4551b6f2189508a42531" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp=None,</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight></codeline>
<codeline lineno="2416" refid="d4/d32/classproteus_1_1LinearSolvers_1_1NavierStokes2D" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">NavierStokes2D(NavierStokesSchur):</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/d32/classproteus_1_1LinearSolvers_1_1NavierStokes2D_1a00acbf914b476f76da3312d22ae751c3" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=None,</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner=False):</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2422"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Initializes<sp/>a<sp/>base<sp/>class<sp/>for<sp/>Navier-Stokes<sp/>Schur<sp/>complement</highlight></codeline>
<codeline lineno="2423"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preconditioners.</highlight></codeline>
<codeline lineno="2424"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="2425"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="2426"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="2427"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>:<sp/>petsc4py<sp/>matrix</highlight></codeline>
<codeline lineno="2428"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Defines<sp/>the<sp/>problem&apos;s<sp/>operator</highlight></codeline>
<codeline lineno="2429"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="2430"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Specifies<sp/>PETSc<sp/>preconditioner<sp/>prefix<sp/>for<sp/>setting<sp/>options</highlight></codeline>
<codeline lineno="2431"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner<sp/>:<sp/>Bool</highlight></codeline>
<codeline lineno="2432"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>the<sp/>velocity<sp/>block<sp/>should<sp/>be<sp/>solved<sp/>as</highlight></codeline>
<codeline lineno="2433"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a<sp/>block<sp/>preconditioner</highlight></codeline>
<codeline lineno="2434"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NavierStokesSchur.__init__(self,</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix,</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>velocity_block_preconditioner=velocity_block_preconditioner)</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.velocity_block_preconditioner:</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.velocity_block_preconditioner_set<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/d32/classproteus_1_1LinearSolvers_1_1NavierStokes2D_1a959905b4ebee45eec7dc75c28967e700" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp=None,</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.velocity_block_preconditioner_set<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._initialize_velocity_block_preconditioner(global_ksp)</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.velocity_block_preconditioner_set<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.velocity_block_preconditioner:</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._setup_velocity_block_preconditioner(global_ksp)</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._get_null_space_cls().apply_to_schur_block(global_ksp)</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal">SimpleNavierStokes2D<sp/>=<sp/>NavierStokes2D</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2459" refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection" kindref="compound">NavierStokesPressureCorrection</ref>(object):</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1a530f9ea1fe813c1bcbef21935ee516b8" kindref="member">__init__</ref>(self,L,prefix=None):</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1a826ae3653ee767a27beae9b772b9f12b" kindref="member">L</ref>=L</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1aa0ba4b27f6df26d93a26a557b33306cc" kindref="member">pc</ref><sp/>=<sp/>p4pyPETSc.PC().create()</highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>prefix:</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1aa0ba4b27f6df26d93a26a557b33306cc" kindref="member">pc</ref>.setOptionsPrefix(prefix)</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1aa0ba4b27f6df26d93a26a557b33306cc" kindref="member">pc</ref>.setFromOptions()</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1a2dc4fb6e779d69d6011bbbf946869026" kindref="member">hasNullSpace</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1a39008869ce5eeb199f4f2959adf0a843" kindref="member">nsp</ref><sp/>=<sp/>p4pyPETSc.NullSpace().create(constant=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm=p4pyPETSc.COMM_WORLD)</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1a826ae3653ee767a27beae9b772b9f12b" kindref="member">L</ref>.setOption(p4pyPETSc.Mat.Option.SYMMETRIC,<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1a826ae3653ee767a27beae9b772b9f12b" kindref="member">L</ref>.setNullSpace(self.<ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1a39008869ce5eeb199f4f2959adf0a843" kindref="member">nsp</ref>)</highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1a94ed7ccf55ba4bbbbec5fa3afe06f45d" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp=None,</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">SimpleDarcyFC(object):</highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1a530f9ea1fe813c1bcbef21935ee516b8" kindref="member">__init__</ref>(self,L):</highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_sizes<sp/>=<sp/>L.getSizes()</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L_range<sp/>=<sp/>L.getOwnershipRange()</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>neqns<sp/>=<sp/>L_sizes[0][0]</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.saturationDOF<sp/>=<sp/>numpy.arange(L_range[0],L_range[0]+old_div(neqns,2),dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pressureDOF<sp/>=<sp/>numpy.arange(L_range[0]+old_div(neqns,2),L_range[0]+neqns,dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pc<sp/>=<sp/>p4pyPETSc.PC().create()</highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pc.setType(</highlight><highlight class="stringliteral">&apos;fieldsplit&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.isp<sp/>=<sp/>p4pyPETSc.IS()</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.isp.createGeneral(self.saturationDOF,comm=p4pyPETSc.COMM_WORLD)</highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.isv<sp/>=<sp/>p4pyPETSc.IS()</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.isv.createGeneral(self.pressureDOF,comm=p4pyPETSc.COMM_WORLD)</highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pc.setFieldSplitIS(self.isp)</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.pc.setFieldSplitIS(self.isv)</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/d80/classproteus_1_1LinearSolvers_1_1NavierStokesPressureCorrection_1a94ed7ccf55ba4bbbbec5fa3afe06f45d" kindref="member">setUp</ref>(self,</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp=None,</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newton_its=None):</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"></highlight></codeline>
<codeline lineno="2496" refid="d9/d95/classproteus_1_1LinearSolvers_1_1Jacobi" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Jacobi(LinearSolver):</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2498"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Damped<sp/>Jacobi<sp/>iteration.</highlight></codeline>
<codeline lineno="2499"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>csmoothers</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d95/classproteus_1_1LinearSolvers_1_1Jacobi_1a76a20456a8c13e29227dd4ab34e37890" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=1.0,</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/><sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/><sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_du<sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_du<sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>l2Norm,</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>&apos;r&apos;,</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>True):</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearSolver.__init__(self,L,</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r,</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r,</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_du,</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_du,</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts,</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm,</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest,</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates,</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo)</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.solverName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Jacobi&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.M=<ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a9d435081f13773ea83cc7a810ee1aff1" kindref="member">Vec</ref>(self.n)</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.w=weight</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.node_order=numpy.arange(self.n,dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d95/classproteus_1_1LinearSolvers_1_1Jacobi_1a5ba425773f7c4ea1656f004bb38b6e2a" kindref="member">prepare</ref>(self,b=None):</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.L).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.M<sp/>=<sp/>old_div(self.w,numpy.diagonal(self.L))</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.L).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.csmoothers.<ref refid="d3/daa/group__smoothers_1ga9350ca7fb815ea154342632a660899cc" kindref="member">jacobi_NR_prepare</ref>(self.L,self.w,1.0e-16,self.M)</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d95/classproteus_1_1LinearSolvers_1_1Jacobi_1a9ecdcfe921a5b244244100a8a13c7b20" kindref="member">solve</ref>(self,u,r=None,b=None,par_u=None,par_b=None,initialGuessIsZero=False):</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(r,b)<sp/>=<sp/>self.solveInitialize(u,r,b,initialGuessIsZero)</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.converged(r)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.failed()):</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.L).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.du[:]=r</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.du*=self.M</highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.L).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SparseMatrix&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.csmoothers.<ref refid="d3/daa/group__smoothers_1gaee90b386397039346db68590e0592d35" kindref="member">jacobi_NR_solve</ref>(self.L,self.M,r,self.node_order,self.du)</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>-=<sp/>self.du</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.computeResidual(u,r,b)</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"></highlight></codeline>
<codeline lineno="2544" refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel" kindref="compound">GaussSeidel</ref>(<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver" kindref="compound">LinearSolver</ref>):</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2546"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Damped<sp/>Gauss-Seidel.</highlight></codeline>
<codeline lineno="2547"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>csmoothers</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1a02a12638a3700629d96f56d64859997b" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionList,</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=0.33,</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym=False,</highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/><sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/><sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_du<sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_du<sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>l2Norm,</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>&apos;r&apos;,</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>True):</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearSolver.__init__(self,L,</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r,</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r,</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_du,</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_du,</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts,</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm,</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest,</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates,</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo)</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a50139ef85ee790b845fe4bef29212aef" kindref="member">solverName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Gauss-Seidel&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1a5f2a530f2b17dd10e15cdfe5c20d88fb" kindref="member">connectionList</ref>=connectionList</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1afe2ecb8a4289823765122db16acf7b5a" kindref="member">M</ref>=<ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a9d435081f13773ea83cc7a810ee1aff1" kindref="member">Vec</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>)</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1aa9f92ee1cfc28542b7903b3131b0666a" kindref="member">node_order</ref>=numpy.arange(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1a2089717083c0e07a940ef9fb78993854" kindref="member">w</ref>=weight</highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1a324f8f9edabba62690b2e79dd1b784e3" kindref="member">sym</ref>=sym</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1a6398c71c8b5b5ccbaafe936502d91386" kindref="member">prepare</ref>(self,b=None):</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1afe2ecb8a4289823765122db16acf7b5a" kindref="member">M</ref><sp/>=<sp/>old_div(self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1a2089717083c0e07a940ef9fb78993854" kindref="member">w</ref>,numpy.diagonal(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>))</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.csmoothers.<ref refid="d3/daa/group__smoothers_1ga41f85890187fa666de3f87e2185be339" kindref="member">gauss_seidel_NR_prepare</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>,self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1a2089717083c0e07a940ef9fb78993854" kindref="member">w</ref>,1.0e-16,self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1afe2ecb8a4289823765122db16acf7b5a" kindref="member">M</ref>)</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.csmoothers.jacobi_NR_prepare(self.L,self.w,1.0e-16,self.M)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1aae4aa9491f28e528b792c54ac0c9ce51" kindref="member">solve</ref>(self,u,r=None,b=None,par_u=None,par_b=None,initialGuessIsZero=False):</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(r,b)<sp/>=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aa40cc0638af82bd120c9fb18553b5181" kindref="member">solveInitialize</ref>(u,r,b,initialGuessIsZero)</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ada014e7e6c0fee1d1e84357762b78505" kindref="member">converged</ref>(r)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a224ea56260e3141ba383b8638997bf33" kindref="member">failed</ref>()):</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[:]=0.0</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>):</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhat<sp/>=<sp/>r[i]</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1a5f2a530f2b17dd10e15cdfe5c20d88fb" kindref="member">connectionList</ref>[i]:</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhat<sp/>-=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>[j,i]*self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[j]</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[i]<sp/>=<sp/>self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1afe2ecb8a4289823765122db16acf7b5a" kindref="member">M</ref>[i]*rhat</highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1a324f8f9edabba62690b2e79dd1b784e3" kindref="member">sym</ref><sp/>==<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u-=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aceb30deec6cc954fe8d10828295824c2" kindref="member">computeResidual</ref>(u,r,b)</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[:]=0.0</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>-1,-1,-1):</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhat<sp/>=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a8b71b7b4674fc0869bdb5ec041ff803b" kindref="member">r</ref>[i]</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1a5f2a530f2b17dd10e15cdfe5c20d88fb" kindref="member">connectionList</ref>[i]:</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhat<sp/>-=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>[i,j]*self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[j]</highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[i]<sp/>=<sp/>self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1afe2ecb8a4289823765122db16acf7b5a" kindref="member">M</ref>[i]*rhat</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;SparseMatrix&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.csmoothers.<ref refid="d3/daa/group__smoothers_1ga674ff17afc25a1113f2372d5e3ea86e2" kindref="member">gauss_seidel_NR_solve</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>,self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1afe2ecb8a4289823765122db16acf7b5a" kindref="member">M</ref>,r,self.<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel_1aa9f92ee1cfc28542b7903b3131b0666a" kindref="member">node_order</ref>,self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>)</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.csmoothers.jacobi_NR_solve(self.L,self.M,r,self.node_order,self.du)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>-=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aceb30deec6cc954fe8d10828295824c2" kindref="member">computeResidual</ref>(u,r,b)</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2611" refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU" kindref="compound">StarILU</ref>(<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver" kindref="compound">LinearSolver</ref>):</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2613"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Alternating<sp/>Schwarz<sp/>Method<sp/>on<sp/>node<sp/>stars.</highlight></codeline>
<codeline lineno="2614"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>csmoothers</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a05e34a30a54a9480ae29ac1315dceb01" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionList,</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=1.0,</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym=False,</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/><sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/><sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_du<sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_du<sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>l2Norm,</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>&apos;r&apos;,</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>True):</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearSolver.__init__(self,L,</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r,</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r,</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_du,</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_du,</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts,</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm,</highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest,</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates,</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo)</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a50139ef85ee790b845fe4bef29212aef" kindref="member">solverName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StarILU&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1ac62618f7c1372df21dd1ba7fa0ceb8b5" kindref="member">w</ref>=weight</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a8cbb3875b1a7e64b870a07e7fd2853ee" kindref="member">sym</ref>=sym</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a6ec9a66c0e042a5c07c289bf64511733" kindref="member">connectionList</ref>=connectionList</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a173a21b8b18620a4443a21c2afddcd7b" kindref="member">subdomainIndecesList</ref>=[]</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1acfcff6f4c7e531f11c45f21314df7a5f" kindref="member">subdomainSizeList</ref>=[]</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1af25619112dd1eb92407b6d15add1333c" kindref="member">subdomainL</ref>=[]</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a0d660a9c7f1c5d08cc80c8993531076c" kindref="member">subdomainR</ref>=[]</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a203efa435a66081c3222657498c0e62d" kindref="member">subdomainDU</ref>=[]</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a9c06c1533d6745b4d253213fddcbe307" kindref="member">subdomainSolvers</ref>=[]</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1aa501e52ee54cb837f31a9f8169e96a38" kindref="member">globalToSubdomain</ref>=[]</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>):</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a173a21b8b18620a4443a21c2afddcd7b" kindref="member">subdomainIndecesList</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([])</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionList[i].sort()</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1aa501e52ee54cb837f31a9f8169e96a38" kindref="member">globalToSubdomain</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(dict([(j,J+1)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>J,j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enumerate(connectionList[i])]))</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1aa501e52ee54cb837f31a9f8169e96a38" kindref="member">globalToSubdomain</ref>[i][i]=0</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSubdomain<sp/>=<sp/>len(connectionList[i])+1</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a0d660a9c7f1c5d08cc80c8993531076c" kindref="member">subdomainR</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(<ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a9d435081f13773ea83cc7a810ee1aff1" kindref="member">Vec</ref>(nSubdomain))</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a203efa435a66081c3222657498c0e62d" kindref="member">subdomainDU</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(<ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a9d435081f13773ea83cc7a810ee1aff1" kindref="member">Vec</ref>(nSubdomain))</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1acfcff6f4c7e531f11c45f21314df7a5f" kindref="member">subdomainSizeList</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(len(connectionList[i]))</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1af25619112dd1eb92407b6d15add1333c" kindref="member">subdomainL</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(<ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a5d6af2f602552724ddbcea24b486ba59" kindref="member">Mat</ref>(nSubdomain,nSubdomain))</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>J,j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(connectionList[i]):</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a173a21b8b18620a4443a21c2afddcd7b" kindref="member">subdomainIndecesList</ref>[i].<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(<ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>(connectionList[i])<sp/>&amp;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>(connectionList[j]))</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a173a21b8b18620a4443a21c2afddcd7b" kindref="member">subdomainIndecesList</ref>[i][J].update([i,j])</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(L).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1ac9d8b53b7d8cd8a401316c0d057f289d" kindref="member">node_order</ref>=numpy.arange(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a251a1f144150a6e518ea3d1fa7c1e099" kindref="member">asmFactorObject</ref><sp/>=<sp/>self.csmoothers.ASMFactor(L)</highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1ae6e60b303caad41a417d43c1659e5aca" kindref="member">prepare</ref>(self,b=None):</highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a9c06c1533d6745b4d253213fddcbe307" kindref="member">subdomainSolvers</ref>=[]</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>):</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1af25619112dd1eb92407b6d15add1333c" kindref="member">subdomainL</ref>[i][0,0]<sp/>=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>[i,i]</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>J,j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a6ec9a66c0e042a5c07c289bf64511733" kindref="member">connectionList</ref>[i]):</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#first<sp/>do<sp/>row<sp/>0<sp/>(star<sp/>center)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1af25619112dd1eb92407b6d15add1333c" kindref="member">subdomainL</ref>[i][J+1,0]<sp/>=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>[j,i]</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>do<sp/>boundary<sp/>rows</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a173a21b8b18620a4443a21c2afddcd7b" kindref="member">subdomainIndecesList</ref>[i][J]:</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>K<sp/>=<sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1aa501e52ee54cb837f31a9f8169e96a38" kindref="member">globalToSubdomain</ref>[i][k]</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1af25619112dd1eb92407b6d15add1333c" kindref="member">subdomainL</ref>[i][K,J+1]=self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>[k,j]</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a9c06c1533d6745b4d253213fddcbe307" kindref="member">subdomainSolvers</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU" kindref="compound">LU</ref>(self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1af25619112dd1eb92407b6d15add1333c" kindref="member">subdomainL</ref>[i]))</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a9c06c1533d6745b4d253213fddcbe307" kindref="member">subdomainSolvers</ref>[i].<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1ae6e60b303caad41a417d43c1659e5aca" kindref="member">prepare</ref>()</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.csmoothers.<ref refid="d3/daa/group__smoothers_1ga163be4c6ebf0e5b708c4b5e45659402c" kindref="member">asm_NR_prepare</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>,self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a251a1f144150a6e518ea3d1fa7c1e099" kindref="member">asmFactorObject</ref>)</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1ace832a4edfcbe1115de68af5635b37ed" kindref="member">solve</ref>(self,u,r=None,b=None,par_u=None,par_b=None,initialGuessIsZero=False):</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(r,b)<sp/>=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aa40cc0638af82bd120c9fb18553b5181" kindref="member">solveInitialize</ref>(u,r,b,initialGuessIsZero)</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ada014e7e6c0fee1d1e84357762b78505" kindref="member">converged</ref>(r)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a224ea56260e3141ba383b8638997bf33" kindref="member">failed</ref>()):</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[:]=0.0</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>):</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#load<sp/>subdomain<sp/>residual</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a0d660a9c7f1c5d08cc80c8993531076c" kindref="member">subdomainR</ref>[i][0]<sp/>=<sp/>r[i]<sp/>-<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>[i,i]*self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[i]</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a6ec9a66c0e042a5c07c289bf64511733" kindref="member">connectionList</ref>[i]:</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a0d660a9c7f1c5d08cc80c8993531076c" kindref="member">subdomainR</ref>[i][0]<sp/>-=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>[j,i]*self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[j]</highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>J,j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a6ec9a66c0e042a5c07c289bf64511733" kindref="member">connectionList</ref>[i]):</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a0d660a9c7f1c5d08cc80c8993531076c" kindref="member">subdomainR</ref>[i][J+1]=r[j]<sp/>-<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>[j,j]*self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[j]</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a6ec9a66c0e042a5c07c289bf64511733" kindref="member">connectionList</ref>[j]:</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a0d660a9c7f1c5d08cc80c8993531076c" kindref="member">subdomainR</ref>[i][J+1]<sp/>-=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>[k,j]*self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[k]</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#solve</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a9c06c1533d6745b4d253213fddcbe307" kindref="member">subdomainSolvers</ref>[i].<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1ace832a4edfcbe1115de68af5635b37ed" kindref="member">solve</ref>(u=self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a203efa435a66081c3222657498c0e62d" kindref="member">subdomainDU</ref>[i],</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b=self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a0d660a9c7f1c5d08cc80c8993531076c" kindref="member">subdomainR</ref>[i])</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#update<sp/>du</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a203efa435a66081c3222657498c0e62d" kindref="member">subdomainDU</ref>[i]*=self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1ac62618f7c1372df21dd1ba7fa0ceb8b5" kindref="member">w</ref></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[i]+=self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a203efa435a66081c3222657498c0e62d" kindref="member">subdomainDU</ref>[i][0]</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>J,j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a6ec9a66c0e042a5c07c289bf64511733" kindref="member">connectionList</ref>[i]):</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[j]<sp/>+=<sp/>self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a203efa435a66081c3222657498c0e62d" kindref="member">subdomainDU</ref>[i][J+1]</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.csmoothers.<ref refid="d3/daa/group__smoothers_1ga4553cd7d6d1ea46f847f553a4a37a63d" kindref="member">asm_NR_solve</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>,self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1ac62618f7c1372df21dd1ba7fa0ceb8b5" kindref="member">w</ref>,self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1a251a1f144150a6e518ea3d1fa7c1e099" kindref="member">asmFactorObject</ref>,self.<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU_1ac9d8b53b7d8cd8a401316c0d057f289d" kindref="member">node_order</ref>,r,self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>)</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>-=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aceb30deec6cc954fe8d10828295824c2" kindref="member">computeResidual</ref>(u,r,b)</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"></highlight></codeline>
<codeline lineno="2714" refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU" kindref="compound">StarBILU</ref>(<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver" kindref="compound">LinearSolver</ref>):</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2716"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Alternating<sp/>Schwarz<sp/>Method<sp/>on<sp/>&apos;blocks&apos;<sp/>consisting<sp/>of<sp/>consectutive<sp/>rows<sp/>in<sp/>system<sp/>for<sp/>things<sp/>like<sp/>dg<sp/>...</highlight></codeline>
<codeline lineno="2717"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>csmoothers</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU_1aa9d5fc84fb1f468f69a4c45e5277479b" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionList,</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bs=1,</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=1.0,</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sym=False,</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/><sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/><sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_du<sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_du<sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>l2Norm,</highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>&apos;r&apos;,</highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>True):</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearSolver.__init__(self,L,</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r,</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r,</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_du,</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_du,</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts,</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm,</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest,</highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates,</highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo)</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a50139ef85ee790b845fe4bef29212aef" kindref="member">solverName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;StarBILU&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU_1a92d8fea47b5b737449c14dcd52294eea" kindref="member">w</ref>=weight</highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU_1a545e2607f12f6598329cbaffa4c5273d" kindref="member">sym</ref>=sym</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU_1a1b7b7ea858b4614ae545b875bddd30f3" kindref="member">bs</ref><sp/>=<sp/>bs</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(L).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU_1aef1b83c074816e750e74cacc9cc8646e" kindref="member">node_order</ref>=numpy.arange(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a12c0a30ada611b9fb879d8830232f551" kindref="member">n</ref>,dtype=</highlight><highlight class="stringliteral">&quot;i&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU_1a0a029d1cbfb69bdcd0a24eef7a60d86b" kindref="member">basmFactorObject</ref><sp/>=<sp/>self.csmoothers.BASMFactor(L,bs)</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU_1ae7ef2f60b5826de8a6702e061af88181" kindref="member">prepare</ref>(self,b=None):</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.csmoothers.<ref refid="d3/daa/group__smoothers_1ga702ce565c2cd9b37d1fdd512387dddae" kindref="member">basm_NR_prepare</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>,self.<ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU_1a0a029d1cbfb69bdcd0a24eef7a60d86b" kindref="member">basmFactorObject</ref>)</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU_1ac6c8a74ab05118f51f2decb2726c3ff3" kindref="member">solve</ref>(self,u,r=None,b=None,par_u=None,par_b=None,initialGuessIsZero=False):</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(r,b)<sp/>=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aa40cc0638af82bd120c9fb18553b5181" kindref="member">solveInitialize</ref>(u,r,b,initialGuessIsZero)</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ada014e7e6c0fee1d1e84357762b78505" kindref="member">converged</ref>(r)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a224ea56260e3141ba383b8638997bf33" kindref="member">failed</ref>()):</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#mwf<sp/>debug</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;StarBILU<sp/>norm_r=<sp/>%s<sp/>norm_du=<sp/>%s<sp/>&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a6a2d83a0370afd92e1e05eba41d13d84" kindref="member">norm_r</ref>,self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a44bc47503703e055c45bfcf5d8305b48" kindref="member">norm_du</ref>))</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>[:]=0.0</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;ndarray&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>NotImplementedError</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>).__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;SparseMatrix&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.csmoothers.<ref refid="d3/daa/group__smoothers_1ga800d5e6633b77c0106c0abe6b88aec51" kindref="member">basm_NR_solve</ref>(self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a7f520459564b52d598f0b338c5ee4b3e" kindref="member">L</ref>,self.<ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU_1a92d8fea47b5b737449c14dcd52294eea" kindref="member">w</ref>,self.<ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU_1a0a029d1cbfb69bdcd0a24eef7a60d86b" kindref="member">basmFactorObject</ref>,self.<ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU_1aef1b83c074816e750e74cacc9cc8646e" kindref="member">node_order</ref>,r,self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>)</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>-=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref></highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aceb30deec6cc954fe8d10828295824c2" kindref="member">computeResidual</ref>(u,r,b)</highlight></codeline>
<codeline lineno="2771" refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel" kindref="compound">TwoLevel</ref>(<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver" kindref="compound">LinearSolver</ref>):</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2773"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>generic<sp/>two-level<sp/>multiplicative<sp/>Schwarz<sp/>solver.</highlight></codeline>
<codeline lineno="2774"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1acc2953bcbbbcd4ac5733d3d86025e3fd" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prolong,</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrict,</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarseL,</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmoother,</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmoother,</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarseSolver,</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L,</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prepareCoarse=False,</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/><sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/><sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_du<sp/>=<sp/>1.0e-4,</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_du<sp/>=<sp/>1.0e-16,</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/><sp/>=<sp/>100,</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm<sp/>=<sp/>l2Norm,</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>&apos;r&apos;,</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>True):</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearSolver.__init__(self,L,</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r,</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r,</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_du,</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_du,</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts,</highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>norm,</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest,</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates,</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo)</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a50139ef85ee790b845fe4bef29212aef" kindref="member">solverName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TwoLevel&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a566b6b3404a02d27299dcb4bc97da462" kindref="member">prolong</ref><sp/>=<sp/>prolong</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a955d87f7a66d76410e08d3f56a79e700" kindref="member">restrict</ref><sp/>=<sp/>restrict</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1ae0689433d6427d2289a0871486cacbd2" kindref="member">cL</ref><sp/>=<sp/>coarseL</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a0103fb3a0d597b20bfcd1116e50c14d9" kindref="member">preSmoother</ref><sp/>=<sp/>preSmoother</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a9fa7ff4290092dfee8efc6062f5b03e8" kindref="member">postSmoother</ref><sp/>=<sp/>postSmoother</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a4e8228e22ab86a18be379ad65c1123a0" kindref="member">coarseSolver</ref><sp/>=<sp/>coarseSolver</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1ab1a2cb6b7c20b7c6d6168cf02c566e7d" kindref="member">cb</ref><sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a9d435081f13773ea83cc7a810ee1aff1" kindref="member">Vec</ref>(prolong.shape[1])</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1aaf5393ccf89b487d2abc03191a87c025" kindref="member">cr</ref><sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a9d435081f13773ea83cc7a810ee1aff1" kindref="member">Vec</ref>(prolong.shape[1])</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1abf341091869b861751c77d548224bfe8" kindref="member">cdu</ref><sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a9d435081f13773ea83cc7a810ee1aff1" kindref="member">Vec</ref>(prolong.shape[1])</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a044d4ee728e7ba634c5da8b9be22eeba" kindref="member">prepareCoarse</ref>=prepareCoarse</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1ac69328b01a6bb3b640b06ea3c4ec6ab1" kindref="member">prepare</ref>(self,b=None):</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a0103fb3a0d597b20bfcd1116e50c14d9" kindref="member">preSmoother</ref>.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1ac69328b01a6bb3b640b06ea3c4ec6ab1" kindref="member">prepare</ref>()</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a9fa7ff4290092dfee8efc6062f5b03e8" kindref="member">postSmoother</ref>.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1ac69328b01a6bb3b640b06ea3c4ec6ab1" kindref="member">prepare</ref>()</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a044d4ee728e7ba634c5da8b9be22eeba" kindref="member">prepareCoarse</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a4e8228e22ab86a18be379ad65c1123a0" kindref="member">coarseSolver</ref>.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1ac69328b01a6bb3b640b06ea3c4ec6ab1" kindref="member">prepare</ref>()</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1af116bda57e82271fce0f69e43f68c02c" kindref="member">solve</ref>(self,u,r=None,b=None,par_u=None,par_b=None,initialGuessIsZero=False):</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(r,b)<sp/>=<sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aa40cc0638af82bd120c9fb18553b5181" kindref="member">solveInitialize</ref>(u,r,b,initialGuessIsZero)</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1ada014e7e6c0fee1d1e84357762b78505" kindref="member">converged</ref>(r)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a224ea56260e3141ba383b8638997bf33" kindref="member">failed</ref>()):</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a0103fb3a0d597b20bfcd1116e50c14d9" kindref="member">preSmoother</ref>.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1af116bda57e82271fce0f69e43f68c02c" kindref="member">solve</ref>(u,r,b,initialGuessIsZero)</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialGuessIsZero=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a955d87f7a66d76410e08d3f56a79e700" kindref="member">restrict</ref>.matvec(r,self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1ab1a2cb6b7c20b7c6d6168cf02c566e7d" kindref="member">cb</ref>)</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1abf341091869b861751c77d548224bfe8" kindref="member">cdu</ref>[:]=0.0</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a4e8228e22ab86a18be379ad65c1123a0" kindref="member">coarseSolver</ref>.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1af116bda57e82271fce0f69e43f68c02c" kindref="member">solve</ref>(u=self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1abf341091869b861751c77d548224bfe8" kindref="member">cdu</ref>,r=self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1aaf5393ccf89b487d2abc03191a87c025" kindref="member">cr</ref>,b=self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1ab1a2cb6b7c20b7c6d6168cf02c566e7d" kindref="member">cb</ref>,initialGuessIsZero=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a566b6b3404a02d27299dcb4bc97da462" kindref="member">prolong</ref>.matvec(self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1abf341091869b861751c77d548224bfe8" kindref="member">cdu</ref>,self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref>)</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u-=self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1a3a70ef135462bce1c72917d247af4441" kindref="member">du</ref></highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aceb30deec6cc954fe8d10828295824c2" kindref="member">computeResidual</ref>(u,r,b)</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1a9fa7ff4290092dfee8efc6062f5b03e8" kindref="member">postSmoother</ref>.<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel_1af116bda57e82271fce0f69e43f68c02c" kindref="member">solve</ref>(u,r,b,initialGuessIsZero=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight></codeline>
<codeline lineno="2833" refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver" kindref="compound">MultilevelLinearSolver</ref>(object):</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2835"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>generic<sp/>multilevel<sp/>solver.</highlight></codeline>
<codeline lineno="2836"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a4dbd6b2d50ab2c07777d9fc5a37dd577" kindref="member">__init__</ref>(self,levelLinearSolverList,computeRates=False,printInfo=False):</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a67b75eb63855a187608fc4a91840f7f7" kindref="member">printInfo</ref>=printInfo</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a8326eac5533669e878c5a5d516b35dc0" kindref="member">solverList</ref>=levelLinearSolverList</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1ac6177a4dd62fc7552462d132f4b8d0f2" kindref="member">nLevels</ref><sp/>=<sp/>len(self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a8326eac5533669e878c5a5d516b35dc0" kindref="member">solverList</ref>)</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a67f94b168b1a160b33a73b02860bd56e" kindref="member">computeEigenvalues</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1ac6177a4dd62fc7552462d132f4b8d0f2" kindref="member">nLevels</ref>):</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolverList[l].computeRates=computeRates</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolverList[l].printInfo=self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a67b75eb63855a187608fc4a91840f7f7" kindref="member">printInfo</ref></highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a4d30950683026ad4566e8480c9ce6f70" kindref="member">info</ref>(self):</highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref>=</highlight><highlight class="stringliteral">&quot;********************Start<sp/>Multilevel<sp/>Linear<sp/>Solver<sp/>Info*********************\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1ac6177a4dd62fc7552462d132f4b8d0f2" kindref="member">nLevels</ref>):</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;**************Start<sp/>Level<sp/>%i<sp/>Info********************\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>l</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref><sp/>+=<sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a8326eac5533669e878c5a5d516b35dc0" kindref="member">solverList</ref>[l].<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a4d30950683026ad4566e8480c9ce6f70" kindref="member">info</ref>()</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;**************End<sp/>Level<sp/>%i<sp/>Info********************\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>l</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref>+=</highlight><highlight class="stringliteral">&quot;********************End<sp/>Multilevel<sp/>Linear<sp/>Solver<sp/>Info*********************\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref></highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight></codeline>
<codeline lineno="2854" refid="d6/d49/classproteus_1_1LinearSolvers_1_1MGM" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/d49/classproteus_1_1LinearSolvers_1_1MGM" kindref="compound">MGM</ref>(<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver" kindref="compound">MultilevelLinearSolver</ref>):</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2856"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>generic<sp/>multigrid<sp/>W<sp/>cycle.</highlight></codeline>
<codeline lineno="2857"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d49/classproteus_1_1LinearSolvers_1_1MGM_1a87203bf1ef85d9332094d131c5d5363b" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prolongList,</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrictList,</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LList,</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmootherList,</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmootherList,</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarseSolver,</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mgItsList=[],</highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo=False,</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates=False):</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a67b75eb63855a187608fc4a91840f7f7" kindref="member">printInfo</ref>=printInfo</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1ac6177a4dd62fc7552462d132f4b8d0f2" kindref="member">nLevels</ref><sp/>=<sp/>len(LList)</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a8326eac5533669e878c5a5d516b35dc0" kindref="member">solverList</ref>=[coarseSolver]</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,len(LList)):</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mgItsList<sp/>==[]:</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mgItsList.append(1)</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a8326eac5533669e878c5a5d516b35dc0" kindref="member">solverList</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(<ref refid="d6/d53/classproteus_1_1LinearSolvers_1_1TwoLevel" kindref="compound">TwoLevel</ref>(prolong<sp/>=<sp/>prolongList[i],</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrict<sp/>=<sp/>restrictList[i],</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarseL<sp/>=<sp/>LList[i-1],</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmoother<sp/>=<sp/>preSmootherList[i],</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmoother<sp/>=<sp/>postSmootherList[i],</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarseSolver<sp/>=<sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a8326eac5533669e878c5a5d516b35dc0" kindref="member">solverList</ref>[i-1],</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>LList[i],</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>=<sp/>mgItsList[i],</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;its&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates=computeRates,</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo=</highlight><highlight class="keyword">False</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d49/classproteus_1_1LinearSolvers_1_1MGM_1a307d19d11ffb7ae23cd35281c45553d2" kindref="member">mgmSolver</ref><sp/>=<sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a8326eac5533669e878c5a5d516b35dc0" kindref="member">solverList</ref>[self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1ac6177a4dd62fc7552462d132f4b8d0f2" kindref="member">nLevels</ref>-1]</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d49/classproteus_1_1LinearSolvers_1_1MGM_1aa27209407c8acbecf35705b28a93be9f" kindref="member">solverName</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;TwoLevel&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d49/classproteus_1_1LinearSolvers_1_1MGM_1ab52f67675850cbcddc783e03324a7377" kindref="member">prepare</ref>(self,b=None):</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a8326eac5533669e878c5a5d516b35dc0" kindref="member">solverList</ref>:</highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.prepare()</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d49/classproteus_1_1LinearSolvers_1_1MGM_1a6184bd0a66058f169b8932e5ee11e12e" kindref="member">solve</ref>(self,u,r=None,b=None,initialGuessIsZero=False):</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d49/classproteus_1_1LinearSolvers_1_1MGM_1a307d19d11ffb7ae23cd35281c45553d2" kindref="member">mgmSolver</ref>.<ref refid="d6/d49/classproteus_1_1LinearSolvers_1_1MGM_1a6184bd0a66058f169b8932e5ee11e12e" kindref="member">solve</ref>(u,r,b,initialGuessIsZero)</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight></codeline>
<codeline lineno="2894" refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI" kindref="compound">NI</ref>(<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver" kindref="compound">MultilevelLinearSolver</ref>):</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2896"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>generic<sp/>nested<sp/>iteration<sp/>solver.</highlight></codeline>
<codeline lineno="2897"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a7d98dc266245426cb9d6a1166940b192" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solverList,</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prolongList,</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrictList,</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts=None,</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tolList=None,</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol=None,</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates=True,</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo=False):</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>=solverList</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a8326eac5533669e878c5a5d516b35dc0" kindref="member">solverList</ref><sp/>=<sp/>[self<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(solverList))]</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MultilevelLinearSolver.__init__(self,self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a8326eac5533669e878c5a5d516b35dc0" kindref="member">solverList</ref>,computeRates=computeRates,printInfo=printInfo)</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a5eea2879a838077d54b91b8887faa7ef" kindref="member">prolongList</ref><sp/>=<sp/>prolongList</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a488e1aca81586741658232fc84398f6d" kindref="member">restrictList</ref><sp/>=<sp/>restrictList</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1adee247b405fe16bafe7b1408e77881ec" kindref="member">fineMesh</ref><sp/>=<sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1ac6177a4dd62fc7552462d132f4b8d0f2" kindref="member">nLevels</ref><sp/>-<sp/>1</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ab566c60ee698642a0c7d3b0c4d464c94" kindref="member">uList</ref>=[]</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a08b99b7a6e56509c2c852d073fb183db" kindref="member">bList</ref>=[]</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a4a35c4f83eee89024ce9450820274b19" kindref="member">levelDict</ref>={}</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1adee247b405fe16bafe7b1408e77881ec" kindref="member">fineMesh</ref>+1):</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>solverList[l].n</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a4a35c4f83eee89024ce9450820274b19" kindref="member">levelDict</ref>[n]<sp/>=<sp/>l</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ab566c60ee698642a0c7d3b0c4d464c94" kindref="member">uList</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(<ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a9d435081f13773ea83cc7a810ee1aff1" kindref="member">Vec</ref>(n))</highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a08b99b7a6e56509c2c852d073fb183db" kindref="member">bList</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(<ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a9d435081f13773ea83cc7a810ee1aff1" kindref="member">Vec</ref>(n))</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a4a35c4f83eee89024ce9450820274b19" kindref="member">levelDict</ref>[solverList[-1].n]=self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1adee247b405fe16bafe7b1408e77881ec" kindref="member">fineMesh</ref></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ab566c60ee698642a0c7d3b0c4d464c94" kindref="member">uList</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([])</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a08b99b7a6e56509c2c852d073fb183db" kindref="member">bList</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([])</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1aa19a53bff8175ada8c0755a4f05ecfe1" kindref="member">maxIts</ref><sp/>=<sp/>maxIts</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref><sp/>=<sp/>tolList</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a38889e8f9c24726c612e0d342e81e6eb" kindref="member">atol_r</ref>=atol</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a67b75eb63855a187608fc4a91840f7f7" kindref="member">printInfo</ref>=printInfo</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref>=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a219459490c1a88e0dbc0f8b916b1a860" kindref="member">setResTol</ref>(self,rtol,atol):</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1ac6177a4dd62fc7552462d132f4b8d0f2" kindref="member">nLevels</ref>):</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref>[l]<sp/>=<sp/>rtol</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a38889e8f9c24726c612e0d342e81e6eb" kindref="member">atol_r</ref><sp/>=<sp/>atol</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1acdfefe4f7a182ddf04e1bf07172346fd" kindref="member">prepare</ref>(self,b=None):</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>b<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMesh<sp/>=<sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a4a35c4f83eee89024ce9450820274b19" kindref="member">levelDict</ref>[b.shape[0]]</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMesh<sp/>=<sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1adee247b405fe16bafe7b1408e77881ec" kindref="member">fineMesh</ref></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[:currentMesh+1]:</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s.prepare()</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a3acb393d81e93e2261964929e0af1d30" kindref="member">solve</ref>(self,u,r=None,b=None,par_u=None,par_b=None,initialGuessIsZero=False):</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentMesh<sp/>=<sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a4a35c4f83eee89024ce9450820274b19" kindref="member">levelDict</ref>[b.shape[0]]</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>currentMesh<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ab566c60ee698642a0c7d3b0c4d464c94" kindref="member">uList</ref>[currentMesh][:]<sp/>=<sp/>u</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a08b99b7a6e56509c2c852d073fb183db" kindref="member">bList</ref>[currentMesh][:]<sp/>=<sp/>b</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(currentMesh,1,-1):</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>initialGuessIsZero:</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a488e1aca81586741658232fc84398f6d" kindref="member">restrictList</ref>[l].matvec(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ab566c60ee698642a0c7d3b0c4d464c94" kindref="member">uList</ref>[l],self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ab566c60ee698642a0c7d3b0c4d464c94" kindref="member">uList</ref>[l-1])</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a488e1aca81586741658232fc84398f6d" kindref="member">restrictList</ref>[l].matvec(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a08b99b7a6e56509c2c852d073fb183db" kindref="member">bList</ref>[l],self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a08b99b7a6e56509c2c852d073fb183db" kindref="member">bList</ref>[l-1])</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>initialGuessIsZero:</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ab566c60ee698642a0c7d3b0c4d464c94" kindref="member">uList</ref>[0][:]=0.0</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(currentMesh):</highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a40efc3f4ebc8daf156af9da21c0a8a24" kindref="member">switchToResidualConvergence</ref>(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[l],</highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref>[l])</highlight></codeline>
<codeline lineno="2956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[l].<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a3acb393d81e93e2261964929e0af1d30" kindref="member">solve</ref>(u=self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ab566c60ee698642a0c7d3b0c4d464c94" kindref="member">uList</ref>[l],b=self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a08b99b7a6e56509c2c852d073fb183db" kindref="member">bList</ref>[l],initialGuessIsZero=initialGuessIsZero)</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialGuessIsZero=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a6a3f8d54ba620b0c432382c91e4c162d" kindref="member">revertToFixedIteration</ref>(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[l])</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>l<sp/>&lt;<sp/>currentMesh<sp/>-1:</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a5eea2879a838077d54b91b8887faa7ef" kindref="member">prolongList</ref>[l+1].matvec(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ab566c60ee698642a0c7d3b0c4d464c94" kindref="member">uList</ref>[l],self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ab566c60ee698642a0c7d3b0c4d464c94" kindref="member">uList</ref>[l+1])</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a5eea2879a838077d54b91b8887faa7ef" kindref="member">prolongList</ref>[l+1].matvec(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ab566c60ee698642a0c7d3b0c4d464c94" kindref="member">uList</ref>[l],u)</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a40efc3f4ebc8daf156af9da21c0a8a24" kindref="member">switchToResidualConvergence</ref>(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[currentMesh],</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref>[currentMesh])</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[currentMesh].<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a3acb393d81e93e2261964929e0af1d30" kindref="member">solve</ref>(u,r,b,initialGuessIsZero)</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;**************Start<sp/>Level<sp/>%i<sp/>Info********************\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>currentMesh</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref>+=self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[currentMesh].<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a4e7615846ee53f77128bbcd6ec68e0dd" kindref="member">info</ref>()</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;**************End<sp/>Level<sp/>%i<sp/>Info********************\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>currentMesh</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a6a3f8d54ba620b0c432382c91e4c162d" kindref="member">revertToFixedIteration</ref>(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[currentMesh])</highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a687e9dae369e79d3e897bbf22059748a" kindref="member">solveMultilevel</ref>(self,bList,uList,par_bList=None,par_uList=None,initialGuessIsZero=False):</highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref>=</highlight><highlight class="stringliteral">&quot;*************Start<sp/>Multilevel<sp/>Linear<sp/>Solver<sp/>Info*******************\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1adee247b405fe16bafe7b1408e77881ec" kindref="member">fineMesh</ref>):</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a40efc3f4ebc8daf156af9da21c0a8a24" kindref="member">switchToResidualConvergence</ref>(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[l],self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref>[l])</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[l].<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a3acb393d81e93e2261964929e0af1d30" kindref="member">solve</ref>(u=uList[l],b=bList[l],initialGuessIsZero=initialGuessIsZero)</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initialGuessIsZero=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a6a3f8d54ba620b0c432382c91e4c162d" kindref="member">revertToFixedIteration</ref>(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[l])</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a5eea2879a838077d54b91b8887faa7ef" kindref="member">prolongList</ref>[l+1].matvec(uList[l],uList[l+1])</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;**************Start<sp/>Level<sp/>%i<sp/>Info********************\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>l</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref>+=self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[l].<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a4e7615846ee53f77128bbcd6ec68e0dd" kindref="member">info</ref>()</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;**************End<sp/>Level<sp/>%i<sp/>Info********************\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>l</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a40efc3f4ebc8daf156af9da21c0a8a24" kindref="member">switchToResidualConvergence</ref>(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1adee247b405fe16bafe7b1408e77881ec" kindref="member">fineMesh</ref>],self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref>[self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1adee247b405fe16bafe7b1408e77881ec" kindref="member">fineMesh</ref>])</highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1adee247b405fe16bafe7b1408e77881ec" kindref="member">fineMesh</ref>].<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a3acb393d81e93e2261964929e0af1d30" kindref="member">solve</ref>(u=uList[self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1adee247b405fe16bafe7b1408e77881ec" kindref="member">fineMesh</ref>],b=bList[self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1adee247b405fe16bafe7b1408e77881ec" kindref="member">fineMesh</ref>],initialGuessIsZero=initialGuessIsZero)</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;**************Start<sp/>Level<sp/>%i<sp/>Info********************\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>l</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref>+=self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1adee247b405fe16bafe7b1408e77881ec" kindref="member">fineMesh</ref>].<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a4e7615846ee53f77128bbcd6ec68e0dd" kindref="member">info</ref>()</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref><sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;**************End<sp/>Level<sp/>%i<sp/>Info********************\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>l</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1ae449a7d4bc9085932512930f283351a7" kindref="member">tolList</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a6a3f8d54ba620b0c432382c91e4c162d" kindref="member">revertToFixedIteration</ref>(self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2ecafa062309dfa7bb8a9f1621840886" kindref="member">levelSolverList</ref>[self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1adee247b405fe16bafe7b1408e77881ec" kindref="member">fineMesh</ref>])</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref>+=</highlight><highlight class="stringliteral">&quot;********************End<sp/>Multilevel<sp/>Linear<sp/>Solver<sp/>Info*********************\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a4e7615846ee53f77128bbcd6ec68e0dd" kindref="member">info</ref>(self):</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a40efc3f4ebc8daf156af9da21c0a8a24" kindref="member">switchToResidualConvergence</ref>(self,solver,rtol):</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1af2866c0288ba07c654a51518d8d4f326" kindref="member">saved_ctest</ref><sp/>=<sp/>solver.convergenceTest</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a57730f301e7bf4a8c235b3ca1af61578" kindref="member">saved_rtol_r</ref><sp/>=<sp/>solver.rtol_r</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a430fe0ad2c6691780426c5a28d9bfaa3" kindref="member">saved_atol_r</ref><sp/>=<sp/>solver.atol_r</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2c157c20fc9cc0abf92d9bcba3a31ec8" kindref="member">saved_maxIts</ref><sp/>=<sp/>solver.maxIts</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a95196549879c523130917d08239e373e" kindref="member">saved_printInfo</ref><sp/>=<sp/>solver.printInfo</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.convergenceTest<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.rtol_r<sp/>=<sp/>rtol</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.atol_r<sp/>=<sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a38889e8f9c24726c612e0d342e81e6eb" kindref="member">atol_r</ref></highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.maxIts<sp/>=<sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1aa19a53bff8175ada8c0755a4f05ecfe1" kindref="member">maxIts</ref></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.printInfo<sp/>=<sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a67b75eb63855a187608fc4a91840f7f7" kindref="member">printInfo</ref></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a6a3f8d54ba620b0c432382c91e4c162d" kindref="member">revertToFixedIteration</ref>(self,solver):</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.convergenceTest<sp/>=<sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1af2866c0288ba07c654a51518d8d4f326" kindref="member">saved_ctest</ref></highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.rtol_r<sp/>=<sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a57730f301e7bf4a8c235b3ca1af61578" kindref="member">saved_rtol_r</ref></highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.atol_r<sp/>=<sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a430fe0ad2c6691780426c5a28d9bfaa3" kindref="member">saved_atol_r</ref></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.maxIts<sp/>=<sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a2c157c20fc9cc0abf92d9bcba3a31ec8" kindref="member">saved_maxIts</ref></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver.printInfo<sp/>=<sp/>self.<ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a95196549879c523130917d08239e373e" kindref="member">saved_printInfo</ref></highlight></codeline>
<codeline lineno="3014"><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI_1a4e7615846ee53f77128bbcd6ec68e0dd" kindref="member">info</ref>(self):</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.<ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver_1a20804959d2d95d4c2e8691029d57dcda" kindref="member">infoString</ref></highlight></codeline>
<codeline lineno="3017"><highlight class="normal"></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3018"><highlight class="stringliteral">A<sp/>function<sp/>for<sp/>setting<sp/>up<sp/>a<sp/>multilevel<sp/>linear<sp/>solver.</highlight></codeline>
<codeline lineno="3019"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/d03/namespaceproteus_1_1LinearSolvers_1ac00b86caf441f7ca3cb4a89f59e9467b" kindref="member">multilevelLinearSolverChooser</ref>(linearOperatorList,</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_linearOperatorList,</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType=NI,</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relativeToleranceList=None,</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>absoluteTolerance=1.0e-8,</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solverConvergenceTest=&apos;r&apos;,</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solverMaxIts=500,</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printSolverInfo=False,</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeSolverRates=False,</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolverType=MGM,</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printLevelSolverInfo=False,</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeLevelSolverRates=False,</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smootherType=Jacobi,</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prolongList=None,</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrictList=None,</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectivityListList=None,</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cycles=3,</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmooths=3,</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmooths=3,</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printSmootherInfo=False,</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeSmootherRates=False,</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>smootherConvergenceTest=&apos;its&apos;,</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relaxationFactor=None,</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeEigenvalues=False,</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parallelUsesFullOverlap<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_duList=None,</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solver_options_prefix=None,</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearSolverLocalBlockSize=1,</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearSmootherOptions=()):</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;multilevelLinearSolverChooser<sp/>type=<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>multilevelLinearSolverType)</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(multilevelLinearSolverType<sp/>==<sp/>KSP_petsc4py<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType<sp/>==<sp/>LU<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType<sp/>==<sp/>Jacobi<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType<sp/>==<sp/>GaussSeidel<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType<sp/>==<sp/>StarILU<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType<sp/>==<sp/>StarBILU<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType<sp/>==<sp/>MGM):</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolverType<sp/>=<sp/>multilevelLinearSolverType</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printLevelLinearSolverInfo<sp/>=<sp/>printSolverInfo</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeLevelSolverRates<sp/>=<sp/>computeSolverRates</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/>nLevels<sp/>=<sp/>len(linearOperatorList)</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/>multilevelLinearSolver<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/>levelLinearSolverList<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/>levelLinearSolver<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>levelLinearSolverType<sp/>==<sp/>MGM:</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmootherList=[]</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmootherList=[]</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mgItsList=[]</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nLevels):</highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mgItsList.append(cycles)</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>l<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>smootherType<sp/>==<sp/>Jacobi:</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>relaxationFactor<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relaxationFactor<sp/>=<sp/>old_div(4.0,5.0)</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmootherList.append(<ref refid="d9/d95/classproteus_1_1LinearSolvers_1_1Jacobi" kindref="compound">Jacobi</ref>(L=linearOperatorList[l],</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=relaxationFactor,</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts=preSmooths,</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>smootherConvergenceTest,</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeSmootherRates,</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printSmootherInfo))</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmootherList.append(<ref refid="d9/d95/classproteus_1_1LinearSolvers_1_1Jacobi" kindref="compound">Jacobi</ref>(L=linearOperatorList[l],</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=relaxationFactor,</highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts=postSmooths,</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>smootherConvergenceTest,</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeSmootherRates,</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printSmootherInfo))</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>smootherType<sp/>==<sp/>GaussSeidel:</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>relaxationFactor<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relaxationFactor<sp/>=<sp/>0.33</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmootherList.append(<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel" kindref="compound">GaussSeidel</ref>(connectionList<sp/>=<sp/>connectivityListList[l],</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L=linearOperatorList[l],</highlight></codeline>
<codeline lineno="3091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=relaxationFactor,</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>=<sp/><sp/>preSmooths,</highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>smootherConvergenceTest,</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeSmootherRates,</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printSmootherInfo))</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmootherList.append(<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel" kindref="compound">GaussSeidel</ref>(connectionList<sp/>=<sp/>connectivityListList[l],</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L=linearOperatorList[l],</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=relaxationFactor,</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>=<sp/><sp/>postSmooths,</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>smootherConvergenceTest,</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeSmootherRates,</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printSmootherInfo))</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>smootherType<sp/>==<sp/>StarILU:</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>relaxationFactor<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relaxationFactor<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmootherList.append(<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU" kindref="compound">StarILU</ref>(connectionList<sp/>=<sp/>connectivityListList[l],</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L=linearOperatorList[l],</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=relaxationFactor,</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>=<sp/><sp/>preSmooths,</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>smootherConvergenceTest,</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeSmootherRates,</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printSmootherInfo))</highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmootherList.append(<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU" kindref="compound">StarILU</ref>(connectionList<sp/>=<sp/>connectivityListList[l],</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L=linearOperatorList[l],</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=relaxationFactor,</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>=<sp/><sp/>postSmooths,</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>smootherConvergenceTest,</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeSmootherRates,</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printSmootherInfo))</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>smootherType<sp/>==<sp/>StarBILU:</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>relaxationFactor<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relaxationFactor<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmootherList.append(<ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU" kindref="compound">StarBILU</ref>(connectionList<sp/>=<sp/>connectivityListList[l],</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L=linearOperatorList[l],</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bs<sp/>=<sp/>linearSolverLocalBlockSize,</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=relaxationFactor,</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>=<sp/><sp/>preSmooths,</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>smootherConvergenceTest,</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeSmootherRates,</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printSmootherInfo))</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmootherList.append(<ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU" kindref="compound">StarBILU</ref>(connectionList<sp/>=<sp/>connectivityListList[l],</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L=linearOperatorList[l],</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bs<sp/>=<sp/>linearSolverLocalBlockSize,</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=relaxationFactor,</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>=<sp/><sp/>postSmooths,</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>smootherConvergenceTest,</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeSmootherRates,</highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printSmootherInfo))</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;smootherType<sp/>unrecognized&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmootherList.append([])</highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmootherList.append([])</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarseSolver<sp/>=<sp/><ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU" kindref="compound">LU</ref>(L=linearOperatorList[l])</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolver<sp/>=<sp/><ref refid="d6/d49/classproteus_1_1LinearSolvers_1_1MGM" kindref="compound">MGM</ref>(prolongList<sp/>=<sp/>prolongList,</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrictList<sp/>=<sp/>restrictList,</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LList<sp/>=<sp/>linearOperatorList,</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmootherList<sp/>=<sp/>preSmootherList,</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmootherList<sp/>=<sp/>postSmootherList,</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarseSolver<sp/>=<sp/>coarseSolver,</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mgItsList<sp/>=<sp/>mgItsList,</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printLevelSolverInfo,</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeLevelSolverRates)</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolverList<sp/>=<sp/>levelLinearSolver.solverList</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>levelLinearSolverType<sp/>==<sp/>LU:</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nLevels):</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolverList.append(<ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU" kindref="compound">LU</ref>(linearOperatorList[l],computeEigenvalues))</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolver<sp/>=<sp/>levelLinearSolverList</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>levelLinearSolverType<sp/>==<sp/>KSP_petsc4py:</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nLevels):</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolverList.append(<ref refid="de/dc9/classproteus_1_1LinearSolvers_1_1KSP__petsc4py" kindref="compound">KSP_petsc4py</ref>(linearOperatorList[l],par_linearOperatorList[l],</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>=<sp/>solverMaxIts,</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>solverConvergenceTest,</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/>=<sp/>relativeToleranceList[l],</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/>=<sp/>absoluteTolerance,</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeLevelSolverRates,</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printLevelLinearSolverInfo,</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix=solver_options_prefix,</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Preconditioner=smootherType,</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>connectionList<sp/>=<sp/>connectivityListList[l],</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linearSolverLocalBlockSize<sp/>=<sp/>linearSolverLocalBlockSize,</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preconditionerOptions<sp/>=<sp/>linearSmootherOptions))</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolver<sp/>=<sp/>levelLinearSolverList</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>levelLinearSolverType<sp/>==<sp/>Jacobi:</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>relaxationFactor<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relaxationFactor<sp/>=<sp/>old_div(4.0,5.0)</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nLevels):</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolverList.append(<ref refid="d9/d95/classproteus_1_1LinearSolvers_1_1Jacobi" kindref="compound">Jacobi</ref>(L=linearOperatorList[l],</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=relaxationFactor,</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>=<sp/>solverMaxIts,</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>solverConvergenceTest,</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/>=<sp/>relativeToleranceList[l],</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/>=<sp/>absoluteTolerance,</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeLevelSolverRates,</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printLevelSolverInfo))</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolver<sp/>=<sp/>levelLinearSolverList</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>levelLinearSolverType<sp/>==<sp/>GaussSeidel:</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>relaxationFactor<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relaxationFactor=0.33</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nLevels):</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolverList.append(<ref refid="d1/d22/classproteus_1_1LinearSolvers_1_1GaussSeidel" kindref="compound">GaussSeidel</ref>(connectionList<sp/>=<sp/>connectivityListList[l],</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L=linearOperatorList[l],</highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight<sp/>=<sp/>relaxationFactor,</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>=<sp/>solverMaxIts,</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>solverConvergenceTest,</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/>=<sp/>relativeToleranceList[l],</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/>=<sp/>absoluteTolerance,</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeLevelSolverRates,</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printLevelSolverInfo))</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolver<sp/>=<sp/>levelLinearSolverList</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>levelLinearSolverType<sp/>==<sp/>StarILU:</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>relaxationFactor<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relaxationFactor=1.0</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nLevels):</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolverList.append(<ref refid="dc/d40/classproteus_1_1LinearSolvers_1_1StarILU" kindref="compound">StarILU</ref>(connectionList<sp/>=<sp/>connectivityListList[l],</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L=linearOperatorList[l],</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=relaxationFactor,</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>=<sp/>solverMaxIts,</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>solverConvergenceTest,</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/>=<sp/>relativeToleranceList[l],</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/>=<sp/>absoluteTolerance,</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeLevelSolverRates,</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printLevelSolverInfo))</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolver<sp/>=<sp/>levelLinearSolverList</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>levelLinearSolverType<sp/>==<sp/>StarBILU:</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>relaxationFactor<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>relaxationFactor=1.0</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nLevels):</highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolverList.append(<ref refid="da/d94/classproteus_1_1LinearSolvers_1_1StarBILU" kindref="compound">StarBILU</ref>(connectionList<sp/>=<sp/>connectivityListList[l],</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L=linearOperatorList[l],</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bs=<sp/>linearSolverLocalBlockSize,</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight=relaxationFactor,</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/>=<sp/>solverMaxIts,</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>convergenceTest<sp/>=<sp/>solverConvergenceTest,</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtol_r<sp/>=<sp/>relativeToleranceList[l],</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol_r<sp/>=<sp/>absoluteTolerance,</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeLevelSolverRates,</highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo<sp/>=<sp/>printLevelSolverInfo))</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelLinearSolver<sp/>=<sp/>levelLinearSolverList</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!Unknown<sp/>level<sp/>linear<sp/>solver<sp/>&quot;</highlight><highlight class="normal">+<sp/>levelLinearSolverType)</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>multilevelLinearSolverType<sp/>==<sp/>NI:</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolver<sp/>=<sp/><ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI" kindref="compound">NI</ref>(solverList<sp/>=<sp/>levelLinearSolverList,</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prolongList<sp/>=<sp/>prolongList,</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrictList<sp/>=<sp/>restrictList,</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxIts<sp/><sp/>=<sp/>solverMaxIts,</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tolList<sp/>=<sp/>relativeToleranceList,</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atol<sp/><sp/><sp/><sp/>=<sp/>absoluteTolerance,</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo=<sp/>printSolverInfo,</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeSolverRates)</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>(multilevelLinearSolverType<sp/>==<sp/>KSP_petsc4py<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType<sp/>==<sp/>LU<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType<sp/>==<sp/>Jacobi<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType<sp/>==<sp/>GaussSeidel<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType<sp/>==<sp/>StarILU<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType<sp/>==<sp/>StarBILU<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolverType<sp/>==<sp/>MGM):</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>multilevelLinearSolver<sp/>=<sp/><ref refid="dd/df8/classproteus_1_1LinearSolvers_1_1MultilevelLinearSolver" kindref="compound">MultilevelLinearSolver</ref>(levelLinearSolverList,</highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeRates<sp/>=<sp/>computeSolverRates,</highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printInfo=printSolverInfo)</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;Unknown<sp/>linear<sp/>solver<sp/>%s&quot;</highlight><highlight class="normal"><sp/>%<sp/>multilevelLinearSolverType)</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(levelLinearSolverType<sp/>==<sp/>LU):</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directSolverFlag=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directSolverFlag=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>levelSolver<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>multilevelLinearSolver.solverList:</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>levelSolver.par_fullOverlap<sp/>=<sp/>parallelUsesFullOverlap</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(multilevelLinearSolver,directSolverFlag)</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"></highlight></codeline>
<codeline lineno="3263"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>LinearAlgebra<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>LinearSolvers</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.LinearSolvers<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Gnuplot</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>Gnuplot<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>math<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>RandomArray<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/>gf<sp/>=<sp/>Gnuplot.Gnuplot()</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d03/namespaceproteus_1_1LinearSolvers_1a491b4ac7c2614cceac5a78ba12ab86c6" kindref="member">gf</ref>(</highlight><highlight class="stringliteral">&quot;set<sp/>terminal<sp/>x11&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/>ginit<sp/>=<sp/>Gnuplot.Gnuplot()</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d03/namespaceproteus_1_1LinearSolvers_1a59407f6b1a406381eac7ce986a619026" kindref="member">ginit</ref>(</highlight><highlight class="stringliteral">&quot;set<sp/>terminal<sp/>x11&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/>gsol<sp/>=<sp/>Gnuplot.Gnuplot()</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d03/namespaceproteus_1_1LinearSolvers_1a0c03a9cbd0f5efb73ce76f825589ab09" kindref="member">gsol</ref>(</highlight><highlight class="stringliteral">&quot;set<sp/>terminal<sp/>x11&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/>gsolNI<sp/>=<sp/>Gnuplot.Gnuplot()</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d03/namespaceproteus_1_1LinearSolvers_1a0789c06820933f687400a28d90efe21f" kindref="member">gsolNI</ref>(</highlight><highlight class="stringliteral">&quot;set<sp/>terminal<sp/>x11&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/>gres<sp/>=<sp/>Gnuplot.Gnuplot()</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d03/namespaceproteus_1_1LinearSolvers_1ad5a107eaa88e310c3787db597c774bfe" kindref="member">gres</ref>(</highlight><highlight class="stringliteral">&quot;set<sp/>terminal<sp/>x11&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/>levels<sp/>=<sp/>7</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/>n=2**levels<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/>h<sp/>=old_div(1.0,(n-1.0))</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/>freq=10</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/>uFine<sp/>=<sp/>uniform(0,1,(n))</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/>uFine[0]=0.0</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><sp/>uFine[n-1]=0.0</highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><sp/>xFine<sp/>=<sp/>numpy.arange(0,1.0+h,h,dtype=</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/>bFine<sp/>=<sp/>(freq*2*pi)**2*numpy.sin(freq*2*pi*xFine)</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/>gf.plot(Gnuplot.Data(xFine,bFine))</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/>ginit.plot(Gnuplot.Data(xFine,uFine))</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/>uList=[]</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/>bList=[]</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/>prolongList=[]</highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><sp/>restrictList=[]</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/><sp/>LList=[]</highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/><sp/>LDList=[]</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/><sp/>hList=[]</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/>meshList=[]</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/>preSmootherList=[]</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/>postSmootherList=[]</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/>mgItsList=[]</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>l<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(levels):</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>2**(l+1)<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>SparseMat_old(N-2,N-2,3*(N-2),sym=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LD<sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a5d6af2f602552724ddbcea24b486ba59" kindref="member">Mat</ref>(N-2,N-2)</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>H<sp/>=<sp/>old_div(1.0,(N-1.0))</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hList.append(H)</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mgItsList.append(6)</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>meshList.append(numpy.arange(0,1.0+H,H,dtype=</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)[1:N-1])</highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u<sp/>=<sp/>uniform(0,1,(N))</highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u[0]<sp/><sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u[N-1]<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>=<sp/>(freq*2*pi)**2*numpy.sin(freq*2*pi*meshList[l])</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uList.append(u[1:N-1])</highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bList.append(b)</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beginAssembly(L)</highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(N-2):</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L[i,i]<sp/>=<sp/>old_div(2.0,H**2)</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LD[i,i]<sp/>=<sp/>old_div(2.0,H**2)</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L[i,i-1]<sp/>=<sp/>old_div(-1.0,H**2)</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LD[i,i-1]<sp/>=<sp/>old_div(-1.0,H**2)</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>&lt;<sp/>N-3:</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L[i,i+1]<sp/>=<sp/>old_div(-1.0,H**2)</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LD[i,i+1]<sp/>=<sp/>old_div(-1.0,H**2)</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endAssembly(L)</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LList.append(L)</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LDList.append(LD)</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>l<sp/>&gt;<sp/>0:</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cN<sp/>=<sp/>old_div((N<sp/>-<sp/>1),2)<sp/>+<sp/>1</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrict<sp/>=<sp/>SparseMat_old(cN-2,N-2,3*(N-2))</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prolong<sp/>=<sp/>SparseMat_old(N-2,cN-2,3*(N-2))</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(cN-2):</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrict[i,2*i]<sp/><sp/><sp/>=<sp/>old_div(1.0,4.0)</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrict[i,2*i+1]<sp/>=<sp/>old_div(2.0,4.0)</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrict[i,2*i+2]<sp/>=<sp/>old_div(1.0,4.0)</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prolong[2*i,i]<sp/>=<sp/>old_div(1.0,2.0)</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prolong[2*i+1,i]=<sp/>old_div(2.0,2.0)</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prolong[2*i+2,i]=<sp/>old_div(1.0,2.0)</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrict.to_csr()</highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrictList.append(restrict)</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prolong.to_csr()</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prolongList.append(prolong)</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N<sp/>=<sp/>cN</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmootherList.append(<ref refid="d9/d95/classproteus_1_1LinearSolvers_1_1Jacobi" kindref="compound">Jacobi</ref>(L,old_div(2.0,3.0),3))</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmootherList.append(<ref refid="d9/d95/classproteus_1_1LinearSolvers_1_1Jacobi" kindref="compound">Jacobi</ref>(L,old_div(2.0,3.0),3))</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>restrictList.append([])</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prolongList.append([])</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>preSmootherList.append([])</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>postSmootherList.append([])</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coarseSolver<sp/>=<sp/><ref refid="d9/d95/classproteus_1_1LinearSolvers_1_1Jacobi" kindref="compound">Jacobi</ref>(L,1.0,1)</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/>mgm<sp/>=<sp/><ref refid="d6/d49/classproteus_1_1LinearSolvers_1_1MGM" kindref="compound">MGM</ref>(prolongList,restrictList,LList,preSmootherList,postSmootherList,coarseSolver,mgItsList)</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"><sp/><sp/><sp/><sp/>mgm.prepare()</highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/>rnorm=1.0</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/>mgits<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>rnorm<sp/>&gt;<sp/>1.0e-8<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>mgits<sp/>&lt;<sp/>20:</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mgits<sp/>+=1</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mgm.solve(u=uFine[1:n-1],b=bFine[1:n-1])</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rnorm<sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a87214731c08e9b1f941ebfac4003bb6c" kindref="member">wl2Norm</ref>(mgm.residual(),h)</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/>gsol.plot(Gnuplot.Data(xFine,uFine,title=</highlight><highlight class="stringliteral">&apos;numerical<sp/>solution-MGM&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gnuplot.Data(xFine,numpy.sin(freq*2*pi*xFine),title=</highlight><highlight class="stringliteral">&apos;exact<sp/>solution&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#gres.plot(Gnuplot.Data(x[1:n-1],mgm.smootherList[0].res,title=&apos;final<sp/>residual&apos;))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/>ni<sp/>=<sp/><ref refid="dc/dcf/classproteus_1_1LinearSolvers_1_1NI" kindref="compound">NI</ref>(mgm.solverList,prolongList,restrictList)</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/>ni.prepare()</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/>ni.solveMultilevel(bList,uList)</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/>rnorm<sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a87214731c08e9b1f941ebfac4003bb6c" kindref="member">wl2Norm</ref>(ni.residual(),h)</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/>gsolNI.plot(Gnuplot.Data(meshList[-1],uList[-1],</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title=</highlight><highlight class="stringliteral">&apos;numerical<sp/>solution-NI&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Gnuplot.Data(meshList[-1],numpy.sin(freq*2*pi*meshList[-1]),</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>title=</highlight><highlight class="stringliteral">&apos;exact<sp/>solution&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/>evals=[]</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>a,b,u,h<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(LDList,bList,uList,hList):</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lu<sp/>=<sp/><ref refid="d7/d3a/classproteus_1_1LinearSolvers_1_1LU" kindref="compound">LU</ref>(a,computeRes=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lu.prepare(b)</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lu.solve(u,b)</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev<sp/>=<sp/>DenseEigenvalues(a)</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev.computeEigenvalues()</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>evals.append(dev.eigenvalues)</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ratio<sp/>=<sp/>(old_div(<ref refid="d7/daa/group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(abs(dev.eigenvalues)),<ref refid="db/dcc/jf_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(abs(dev.eigenvalues))))*(h**2)</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="db/dcc/jf_8h_1a665602667543592b4547008b72a9631b" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;k*h**2<sp/>%12.5E&quot;</highlight><highlight class="normal"><sp/>%<sp/>ratio)</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/>gevals<sp/>=<sp/>Gnuplot.Gnuplot()</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dc/d03/namespaceproteus_1_1LinearSolvers_1a0330b65e2c6f3130df967c04193622a6" kindref="member">gevals</ref>(</highlight><highlight class="stringliteral">&quot;set<sp/>terminal<sp/>x11&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/>gevals.plot(Gnuplot.Data(evals[0],title=</highlight><highlight class="stringliteral">&apos;eigenvalues&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ev<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>evals[1:]:</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gevals.replot(Gnuplot.Data(ev,title=</highlight><highlight class="stringliteral">&apos;eigenvalues&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/>input(</highlight><highlight class="stringliteral">&apos;Please<sp/>press<sp/>return<sp/>to<sp/>continue...<sp/>\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"></highlight></codeline>
<codeline lineno="3390" refid="dc/dab/classproteus_1_1LinearSolvers_1_1StorageSet" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="dc/dab/classproteus_1_1LinearSolvers_1_1StorageSet" kindref="compound">StorageSet</ref>(<ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>):</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/dab/classproteus_1_1LinearSolvers_1_1StorageSet_1aa5f7673516df2c0288f620f5b36fb3de" kindref="member">__init__</ref>(self,initializer=[],shape=(0,),storageType=</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set.__init__(self,initializer)</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dab/classproteus_1_1LinearSolvers_1_1StorageSet_1ac8c7cff55fdf9b7616ddb97f89f8bc3e" kindref="member">shape</ref><sp/>=<sp/>shape</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/dab/classproteus_1_1LinearSolvers_1_1StorageSet_1a6d45a770c3d4ba2d820026660a894970" kindref="member">storageType</ref><sp/>=<sp/>storageType</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="dc/dab/classproteus_1_1LinearSolvers_1_1StorageSet_1ac4c904b299515b1f48db771f157f655c" kindref="member">allocate</ref>(self,storageDict):</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self:</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storageDict[k]<sp/>=<sp/>numpy.zeros(self.<ref refid="dc/dab/classproteus_1_1LinearSolvers_1_1StorageSet_1ac8c7cff55fdf9b7616ddb97f89f8bc3e" kindref="member">shape</ref>,self.<ref refid="dc/dab/classproteus_1_1LinearSolvers_1_1StorageSet_1a6d45a770c3d4ba2d820026660a894970" kindref="member">storageType</ref>)</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight></codeline>
<codeline lineno="3399" refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor" kindref="compound">OperatorConstructor</ref>(object):</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Base<sp/>class<sp/>for<sp/>operator<sp/>constructors.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a410feaf3ae5c7eb34bbacac74ff472a6" kindref="member">__init__</ref>(self,model):</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref><sp/>=<sp/>model</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a3a6a9945b57e0e80c535950bb00bcd55" kindref="member">attachMassOperator</ref>(self):</highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Create<sp/>the<sp/>discrete<sp/>Mass<sp/>operator.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1aede80cd96f3ecb83fc329cf32fceb311" kindref="member">_mass_val</ref><sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nzval.copy()</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1aede80cd96f3ecb83fc329cf32fceb311" kindref="member">_mass_val</ref>.fill(0.)</highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a6f2e19d9e30a040ec648a887d5e0af35" kindref="member">MassOperator</ref><sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a42ae20ab68e5e9fc1025868daed76eea" kindref="member">SparseMat</ref>(self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nFreeVDOF_global,</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nFreeVDOF_global,</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nnz,</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1aede80cd96f3ecb83fc329cf32fceb311" kindref="member">_mass_val</ref>,</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.colind,</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.rowptr)</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"></highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1add7700e2839d21150f8941dbf5bd53c9" kindref="member">attachInvScaledMassOperator</ref>(self):</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Create<sp/>discrete<sp/>InvScaled<sp/>Mass<sp/>operator.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a056c492ea5c66a148ce58a021f9030e9" kindref="member">_inv_scaled_mass_val</ref><sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nzval.copy()</highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a056c492ea5c66a148ce58a021f9030e9" kindref="member">_inv_scaled_mass_val</ref>.fill(0.)</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a425e0c94e84b5697d83c8d5ddb7e2a07" kindref="member">TPInvScaledMassOperator</ref><sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a42ae20ab68e5e9fc1025868daed76eea" kindref="member">SparseMat</ref>(self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nFreeVDOF_global,</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nFreeVDOF_global,</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nnz,</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a056c492ea5c66a148ce58a021f9030e9" kindref="member">_inv_scaled_mass_val</ref>,</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.colind,</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.rowptr)</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a70d1a45121af8ae099f117c46ac24757" kindref="member">attachScaledMassOperator</ref>(self):</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Create<sp/>discrete<sp/>Scaled<sp/>Mass<sp/>operator.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a73a69efe9fa806b638c31464b20bd7a3" kindref="member">_scaled_mass_val</ref><sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nzval.copy()</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a73a69efe9fa806b638c31464b20bd7a3" kindref="member">_scaled_mass_val</ref>.fill(0.)</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a81577abcec55e643f67c431fa92a2bdb" kindref="member">TPScaledMassOperator</ref><sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a42ae20ab68e5e9fc1025868daed76eea" kindref="member">SparseMat</ref>(self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nFreeVDOF_global,</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nFreeVDOF_global,</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nnz,</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a73a69efe9fa806b638c31464b20bd7a3" kindref="member">_scaled_mass_val</ref>,</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.colind,</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.rowptr)</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"></highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1ad5e63aac782e8a000275a664035e3437" kindref="member">attachLaplaceOperator</ref>(self):</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Create<sp/>discrete<sp/>Laplace<sp/>matrix<sp/>operator.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a2feb94d20b3090a3d059b8032c01737a" kindref="member">_laplace_val</ref><sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nzval.copy()</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a2feb94d20b3090a3d059b8032c01737a" kindref="member">_laplace_val</ref>.fill(0.)</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1ace631505bf4e51e81f52b4c2e52fda05" kindref="member">TPInvScaledLaplaceOperator</ref><sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a42ae20ab68e5e9fc1025868daed76eea" kindref="member">SparseMat</ref>(self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nFreeVDOF_global,</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nFreeVDOF_global,</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nnz,</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a2feb94d20b3090a3d059b8032c01737a" kindref="member">_laplace_val</ref>,</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.colind,</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.rowptr)</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a96db9009495cfc7c87b1435cbd2d8074" kindref="member">attachTPAdvectionOperator</ref>(self):</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Create<sp/>discrete<sp/>Advection<sp/>matrix<sp/>operator.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1aabb1aa83ff004342aa36bf78911d549f" kindref="member">_advection_val</ref><sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nzval.copy()</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1aabb1aa83ff004342aa36bf78911d549f" kindref="member">_advection_val</ref>.fill(0.)</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a5eccfd77185ccd9d993094ceed46674b" kindref="member">TPScaledAdvectionOperator</ref><sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a42ae20ab68e5e9fc1025868daed76eea" kindref="member">SparseMat</ref>(self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nFreeVDOF_global,</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nFreeVDOF_global,</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nnz,</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1aabb1aa83ff004342aa36bf78911d549f" kindref="member">_advection_val</ref>,</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.colind,</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.rowptr)</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"></highlight></codeline>
<codeline lineno="3459" refid="da/ddf/classproteus_1_1LinearSolvers_1_1OperatorConstructor__rans2p" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/ddf/classproteus_1_1LinearSolvers_1_1OperatorConstructor__rans2p" kindref="compound">OperatorConstructor_rans2p</ref>(<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor" kindref="compound">OperatorConstructor</ref>):</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>A<sp/>class<sp/>for<sp/>building<sp/>common<sp/>discrete<sp/>rans2p<sp/>operators.</highlight></codeline>
<codeline lineno="3461"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3462"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Arguments:</highlight></codeline>
<codeline lineno="3463"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="3464"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>LevelModel<sp/>:<sp/>:class:`proteus.mprans.RANS2P.LevelModel`</highlight></codeline>
<codeline lineno="3465"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Level<sp/>transport<sp/>model<sp/>derived<sp/>from<sp/>the<sp/>rans2p<sp/>class.</highlight></codeline>
<codeline lineno="3466"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/ddf/classproteus_1_1LinearSolvers_1_1OperatorConstructor__rans2p_1ad6e643953e178980acf9d0e0ff916f07" kindref="member">__init__</ref>(self,levelModel):</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OperatorConstructor.__init__(self,levelModel)</highlight></codeline>
<codeline lineno="3469"><highlight class="normal"></highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/ddf/classproteus_1_1LinearSolvers_1_1OperatorConstructor__rans2p_1a0d6354c7a7e3054430e9bcf30382b520" kindref="member">updateTPAdvectionOperator</ref>(self,</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>density_scaling):</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3473"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Update<sp/>the<sp/>discrete<sp/>two-phase<sp/>advection<sp/>operator<sp/>matrix.</highlight></codeline>
<codeline lineno="3474"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3475"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="3476"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="3477"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>density_scaling<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="3478"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>advection<sp/>terms<sp/>should<sp/>be<sp/>scaled<sp/>with</highlight></codeline>
<codeline lineno="3479"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>density<sp/>(True)<sp/>or<sp/>1<sp/>(False)</highlight></codeline>
<codeline lineno="3480"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_0<sp/>=<sp/>density_scaling*self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.rho_0<sp/>+<sp/>(1-density_scaling)*1</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_0<sp/>=<sp/>density_scaling*self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.nu_0<sp/>+<sp/>(1-density_scaling)*1</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_1<sp/>=<sp/>density_scaling*self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.rho_1<sp/>+<sp/>(1-density_scaling)*1</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_1<sp/>=<sp/>density_scaling*self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.nu_1<sp/>+<sp/>(1-density_scaling)*1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a5eccfd77185ccd9d993094ceed46674b" kindref="member">TPScaledAdvectionOperator</ref>.getCSRrepresentation()[2].fill(0.)</highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict<sp/>=<sp/>cArgumentsDict.ArgumentsDict()</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.elementMaps.psi</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_grad_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.elementMaps.grad_psi</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.nodeArray</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.elementNodesArray</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;dV_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.elementQuadratureWeights[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.psi</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_grad_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.grad_psi</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vel_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].femSpace.psi</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vel_grad_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].femSpace.grad_psi</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;elementDiameter&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.elementDiameter</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nodeDiametersArray&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.nodeDiametersArray</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nElements_global&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.nElements_global</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;useMetrics&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.useMetrics</highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;epsFact_rho&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.epsFact_density</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;epsFact_mu&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.epsFact</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;rho_0&quot;</highlight><highlight class="normal">]<sp/>=<sp/>rho_0</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nu_0&quot;</highlight><highlight class="normal">]<sp/>=<sp/>nu_0</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;rho_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>rho_1</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nu_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>nu_1</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vel_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].femSpace.dofMap.l2g</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].dof</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;v_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[2].dof</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;w_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[3].dof</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;useVF&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.useVF</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;&amp;vf&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.q_vf</highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;&amp;phi&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.q_phi</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_p_p&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(0,0)]</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_p_p&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(0,0)]</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_u_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(1,1)]</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_u_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(1,1)]</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_v_v&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(2,2)]</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_v_v&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(2,2)]</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_w_w&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(3,3)]</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_w_w&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(3,3)]</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;advection_matrix&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a5eccfd77185ccd9d993094ceed46674b" kindref="member">TPScaledAdvectionOperator</ref>.getCSRrepresentation()[2]</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.rans2p.getTwoPhaseAdvectionOperator(argsDict)</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"></highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/ddf/classproteus_1_1LinearSolvers_1_1OperatorConstructor__rans2p_1a7e4196d3d1daef3d18faa66d72eba4fb" kindref="member">updateTPInvScaledLaplaceOperator</ref>(self):</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Create<sp/>a<sp/>discrete<sp/>two<sp/>phase<sp/>laplace<sp/>operator<sp/>matrix.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1ace631505bf4e51e81f52b4c2e52fda05" kindref="member">TPInvScaledLaplaceOperator</ref>.getCSRrepresentation()[2].fill(0.)</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict<sp/>=<sp/>cArgumentsDict.ArgumentsDict()</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.elementMaps.psi</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_grad_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.elementMaps.grad_psi</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.nodeArray</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.elementNodesArray</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;dV_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.elementQuadratureWeights[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_grad_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.grad_psi</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vel_grad_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].femSpace.grad_psi</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;elementDiameter&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.elementDiameter</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nodeDiametersArray&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.nodeDiametersArray</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nElements_global&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.nElements_global</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;useMetrics&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.useMetrics</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;epsFact_rho&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.epsFact_density</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;epsFact_mu&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.epsFact</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;rho_0&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.rho_0</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nu_0&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.nu_0</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;rho_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.rho_1</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nu_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.nu_1</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.dofMap.l2g</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vel_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].femSpace.dofMap.l2g</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].dof</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].dof</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;v_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[2].dof</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;w_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[3].dof</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;useVF&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.useVF</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vf&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.q_vf</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.q_phi</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sdInfo_p_p_rowptr&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.sdInfo[(1,1)][0]</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sdInfo_p_p_colind&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.sdInfo[(1,1)][1]</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sdInfo_u_u_rowptr&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.sdInfo[(1,1)][0]</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sdInfo_u_u_colind&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.sdInfo[(1,1)][1]</highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sdInfo_v_v_rowptr&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.sdInfo[(2,2)][0]</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sdInfo_v_v_colind&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.sdInfo[(2,2)][1]</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sdInfo_w_w_rowptr&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.sdInfo[(3,3)][0]</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sdInfo_w_w_colind&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.sdInfo[(3,3)][1]</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_p_p&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(0,0)]</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_p_p&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(0,0)]</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_u_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(1,1)]</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_u_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(1,1)]</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_v_v&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(2,2)]</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_v_v&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(2,2)]</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_w_w&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(3,3)]</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_w_w&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(3,3)]</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;laplace_matrix&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1ace631505bf4e51e81f52b4c2e52fda05" kindref="member">TPInvScaledLaplaceOperator</ref>.getCSRrepresentation()[2]</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.rans2p.getTwoPhaseInvScaledLaplaceOperator(argsDict)</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/ddf/classproteus_1_1LinearSolvers_1_1OperatorConstructor__rans2p_1a5752118519b16670c4b861c269e17a01" kindref="member">updateTwoPhaseMassOperator_rho</ref>(self,</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>density_scaling<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>=<sp/>True):</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3580"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Create<sp/>a<sp/>discrete<sp/>TwoPhase<sp/>Mass<sp/>operator<sp/>matrix.</highlight></codeline>
<codeline lineno="3581"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3582"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="3583"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="3584"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>density_scaling<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="3585"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>advection<sp/>terms<sp/>should<sp/>be<sp/>scaled<sp/>with</highlight></codeline>
<codeline lineno="3586"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>the<sp/>density<sp/>(True)<sp/>or<sp/>1<sp/>(False)</highlight></codeline>
<codeline lineno="3587"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="3588"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>the<sp/>mass<sp/>matrices<sp/>should<sp/>be<sp/>lumped<sp/>or</highlight></codeline>
<codeline lineno="3589"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>full.</highlight></codeline>
<codeline lineno="3590"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3591"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_0<sp/>=<sp/>density_scaling*self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.rho_0<sp/>+<sp/>(1-density_scaling)*1</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_0<sp/>=<sp/>density_scaling*self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.nu_0<sp/>+<sp/>(1-density_scaling)*1</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_1<sp/>=<sp/>density_scaling*self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.rho_1<sp/>+<sp/>(1-density_scaling)*1</highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_1<sp/>=<sp/>density_scaling*self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.nu_1<sp/>+<sp/>(1-density_scaling)*1</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a81577abcec55e643f67c431fa92a2bdb" kindref="member">TPScaledMassOperator</ref>.getCSRrepresentation()[2].fill(0.)</highlight></codeline>
<codeline lineno="3598"><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict<sp/>=<sp/>cArgumentsDict.ArgumentsDict()</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;scale_type&quot;</highlight><highlight class="normal">]<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;use_numerical_viscosity&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;lumped&quot;</highlight><highlight class="normal">]<sp/>=<sp/>lumped</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;&amp;mesh_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.elementMaps.psi</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;&amp;mesh_grad_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.elementMaps.grad_psi</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;&amp;mesh_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.nodeArray</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.elementNodesArray</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;dV_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.elementQuadratureWeights[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.psi</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_test_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.psi</highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vel_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].femSpace.psi</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vel_test_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].femSpace.psi</highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;elementDiameter&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.elementDiameter</highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nodeDiametersArray&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.nodeDiametersArray</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;numerical_viscosity&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.numerical_viscosity</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nElements_global&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.nElements_global</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;useMetrics&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.useMetrics</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;epsFact_rho&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.epsFact_density</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;epsFact_mu&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.epsFact</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;rho_0&quot;</highlight><highlight class="normal">]<sp/>=<sp/>rho_0</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nu_0&quot;</highlight><highlight class="normal">]<sp/>=<sp/>nu_0</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;rho_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>rho_1</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nu_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>nu_1</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.dofMap.l2g</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vel_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].femSpace.dofMap.l2g</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].dof</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].dof</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;v_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[2].dof</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;w_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[3].dof</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;useVF&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.useVF</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vf&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.q_vf</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.q_phi</highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_p_p&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(0,0)]</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_p_p&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(0,0)]</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_u_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(1,1)]</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_u_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(1,1)]</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_v_v&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(2,2)]</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_v_v&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(2,2)]</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_w_w&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(3,3)]</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_w_w&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(3,3)]</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mass_matrix&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a81577abcec55e643f67c431fa92a2bdb" kindref="member">TPScaledMassOperator</ref>.getCSRrepresentation()[2]</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.rans2p.getTwoPhaseScaledMassOperator(argsDict)</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/ddf/classproteus_1_1LinearSolvers_1_1OperatorConstructor__rans2p_1a6296aab0e7d91a890758762c6129c97f" kindref="member">updateTwoPhaseInvScaledMassOperator</ref>(self,</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numerical_viscosity<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lumped<sp/>=<sp/>True):</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Create<sp/>a<sp/>discrete<sp/>TwoPhase<sp/>Mass<sp/>operator<sp/>matrix.</highlight></codeline>
<codeline lineno="3647"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3648"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="3649"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="3650"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numerical_viscosity<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="3651"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Indicates<sp/>whether<sp/>the<sp/>numerical<sp/>viscosity<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="3652"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>included<sp/>with<sp/>the<sp/>Laplace<sp/>operator.Yes<sp/>(True)<sp/>or</highlight></codeline>
<codeline lineno="3653"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>No<sp/>(False)</highlight></codeline>
<codeline lineno="3654"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a425e0c94e84b5697d83c8d5ddb7e2a07" kindref="member">TPInvScaledMassOperator</ref>.getCSRrepresentation()[2].fill(0.)</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict<sp/>=<sp/>cArgumentsDict.ArgumentsDict()</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;scale_type&quot;</highlight><highlight class="normal">]<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;use_numerical_viscosity&quot;</highlight><highlight class="normal">]<sp/>=<sp/>numerical_viscosity</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;lumped&quot;</highlight><highlight class="normal">]<sp/>=<sp/>lumped</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;&amp;mesh_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.elementMaps.psi</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;&amp;mesh_grad_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.elementMaps.grad_psi</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;&amp;mesh_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.nodeArray</highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.elementNodesArray</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;dV_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.elementQuadratureWeights[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.psi</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_test_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.psi</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vel_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].femSpace.psi</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vel_test_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].femSpace.psi</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;elementDiameter&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.elementDiameter</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nodeDiametersArray&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.nodeDiametersArray</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;numerical_viscosity&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.numerical_viscosity</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nElements_global&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.mesh.nElements_global</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;useMetrics&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.useMetrics</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;epsFact_rho&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.epsFact_density</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;epsFact_mu&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.epsFact</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;rho_0&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.rho_0</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nu_0&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.nu_0</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;rho_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.rho_1</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nu_1&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.nu_1</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].femSpace.dofMap.l2g</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vel_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].femSpace.dofMap.l2g</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;p_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[0].dof</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[1].dof</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;v_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[2].dof</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;w_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.u[3].dof</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;useVF&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.useVF</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;vf&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.q_vf</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;phi&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.q_phi</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_p_p&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(0,0)]</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_p_p&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(0,0)]</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_u_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(1,1)]</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_u_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(1,1)]</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_v_v&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(2,2)]</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_v_v&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(2,2)]</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_w_w&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrRowIndeces[(3,3)]</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_w_w&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.csrColumnOffsets[(3,3)]</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mass_matrix&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a425e0c94e84b5697d83c8d5ddb7e2a07" kindref="member">TPInvScaledMassOperator</ref>.getCSRrepresentation()[2]</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.rans2p.getTwoPhaseScaledMassOperator(argsDict)</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"></highlight></codeline>
<codeline lineno="3701" refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel" kindref="compound">OperatorConstructor_oneLevel</ref>(<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor" kindref="compound">OperatorConstructor</ref>):</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="3703"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>class<sp/>for<sp/>building<sp/>common<sp/>discrete<sp/>operators<sp/>from<sp/>one-level</highlight></codeline>
<codeline lineno="3704"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>transport<sp/>models.</highlight></codeline>
<codeline lineno="3705"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3706"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Arguments</highlight></codeline>
<codeline lineno="3707"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="3708"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>OLT<sp/>:<sp/>:class:`proteus.Transport.OneLevelTransport`</highlight></codeline>
<codeline lineno="3709"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>One<sp/>level<sp/>transport<sp/>class<sp/>from<sp/>which<sp/>operator<sp/>construction</highlight></codeline>
<codeline lineno="3710"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>will<sp/>be<sp/>based.</highlight></codeline>
<codeline lineno="3711"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1ab9aeaf46fe15689368dd05a000d72b68" kindref="member">__init__</ref>(self,OLT):</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>OperatorConstructor.__init__(self,OLT)</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1aa46a4c7665cb3befed69458ef5bba8b2" kindref="member">_initializeOperatorConstruction</ref>()</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a7787fca07de28ae255b5367deb7736f8" kindref="member">updateMassOperator</ref>(self,<sp/>rho=1.0):</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1aede80cd96f3ecb83fc329cf32fceb311" kindref="member">_mass_val</ref>.fill(0.)</highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.rho</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nd<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.nd</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1afd71c83e7728df2c319ba7360e13365c" kindref="member">MassOperatorCoeff</ref><sp/>=<sp/><ref refid="db/d09/classproteus_1_1TransportCoefficients_1_1DiscreteMassMatrix" kindref="compound">TransportCoefficients.DiscreteMassMatrix</ref>(rho=rho,<sp/>nd=_nd)</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_t<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"></highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mass_q<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a40a3a4b969e16b55f6f2f03359aebc6d" kindref="member">_allocateMassOperatorQStorageSpace</ref>(Mass_q)</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_nd<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1afd71c83e7728df2c319ba7360e13365c" kindref="member">MassOperatorCoeff</ref>.evaluate(_t,Mass_q)</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a1e2c3d07488d8b36eef58b9ef015180d" kindref="member">_calculateMassOperatorQ</ref>(Mass_q)</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mass_Jacobian<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a0580d43f2ebb41e75d1ce59fd59edde0" kindref="member">_allocateMatrixSpace</ref>(self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1afd71c83e7728df2c319ba7360e13365c" kindref="member">MassOperatorCoeff</ref>,</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mass_Jacobian)</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci,cjDict<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1afd71c83e7728df2c319ba7360e13365c" kindref="member">MassOperatorCoeff</ref>.mass.items():</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>cjDict:</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfemIntegrals.updateMassJacobian_weak(Mass_q[(</highlight><highlight class="stringliteral">&apos;dm&apos;</highlight><highlight class="normal">,ci,cj)],</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mass_q[(</highlight><highlight class="stringliteral">&apos;vXw*dV_m&apos;</highlight><highlight class="normal">,cj,ci)],</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mass_Jacobian[ci][cj])</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1ad001073f75a487d0fbc6326fe8d99635" kindref="member">_createOperator</ref>(self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1afd71c83e7728df2c319ba7360e13365c" kindref="member">MassOperatorCoeff</ref>,Mass_Jacobian,self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a6f2e19d9e30a040ec648a887d5e0af35" kindref="member">MassOperator</ref>)</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a80245bb700220c4d12f8160b12ac13e8" kindref="member">updateTPAdvectionOperator</ref>(self,phase_function=None):</highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a2aaf9de2bf18d0d8ae99013a08441767" kindref="member">_u</ref><sp/>=<sp/>numpy.copy(self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.q[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,1)])</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1ae31d0c639326a69ad6428050343a8a53" kindref="member">_v</ref><sp/>=<sp/>numpy.copy(self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.q[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,2)])</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a3ed3481a2d3cd02fe6b9e6563f3662d1" kindref="member">_advective_field</ref><sp/>=<sp/>[self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a2aaf9de2bf18d0d8ae99013a08441767" kindref="member">_u</ref>,<sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1ae31d0c639326a69ad6428050343a8a53" kindref="member">_v</ref>]</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1aabb1aa83ff004342aa36bf78911d549f" kindref="member">_advection_val</ref><sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.nzval.copy()</highlight></codeline>
<codeline lineno="3748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1aabb1aa83ff004342aa36bf78911d549f" kindref="member">_advection_val</ref>.fill(0.)</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nd<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.nd</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"></highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rho_0<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.rho_0</highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rho_1<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.rho_1</highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nu_0<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.nu_0</highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nu_1<sp/>=<sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a519c14d02ddbe83f3d693faff9c985a7" kindref="member">model</ref>.coefficients.nu_1</highlight></codeline>
<codeline lineno="3755"><highlight class="normal"></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>phase_function<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a6c3f939aff4f0617726a4ee4de6ffdc7" kindref="member">AdvectionOperatorCoeff</ref><sp/>=<sp/><ref refid="dd/d97/classproteus_1_1TransportCoefficients_1_1DiscreteTwoPhaseAdvectionOperator" kindref="compound">TransportCoefficients.DiscreteTwoPhaseAdvectionOperator</ref>(u<sp/>=<sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a3ed3481a2d3cd02fe6b9e6563f3662d1" kindref="member">_advective_field</ref>,</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd<sp/>=<sp/>_nd,</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_0<sp/>=<sp/>_rho_0,</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_0<sp/>=<sp/>_nu_0,</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_1<sp/>=<sp/>_rho_1,</highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_1<sp/>=<sp/>_nu_1,</highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LS_model<sp/>=<sp/>_phase_func)</highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a6c3f939aff4f0617726a4ee4de6ffdc7" kindref="member">AdvectionOperatorCoeff</ref><sp/>=<sp/><ref refid="dd/d97/classproteus_1_1TransportCoefficients_1_1DiscreteTwoPhaseAdvectionOperator" kindref="compound">TransportCoefficients.DiscreteTwoPhaseAdvectionOperator</ref>(u<sp/>=<sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a3ed3481a2d3cd02fe6b9e6563f3662d1" kindref="member">_advective_field</ref>,</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd<sp/>=<sp/>_nd,</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_0<sp/>=<sp/>_rho_0,</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_0<sp/>=<sp/>_nu_0,</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_1<sp/>=<sp/>_rho_1,</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_1<sp/>=<sp/>_nu_1,</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_function<sp/>=<sp/>phase_function)</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_t<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Advection_q<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1ae265a962e8456a4a93fe0352c82d9cc0" kindref="member">_allocateAdvectionOperatorQStorageSpace</ref>(Advection_q)</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a93845b0c320cef6b3a57e64e402f7d2a" kindref="member">_calculateQuadratureValues</ref>(Advection_q)</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_nd==2:</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a6c3f939aff4f0617726a4ee4de6ffdc7" kindref="member">AdvectionOperatorCoeff</ref>.evaluate(_t,Advection_q)</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._calculateAdvectionOperatorQ(Advection_q)</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"></highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Advection_Jacobian<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a0580d43f2ebb41e75d1ce59fd59edde0" kindref="member">_allocateMatrixSpace</ref>(self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a6c3f939aff4f0617726a4ee4de6ffdc7" kindref="member">AdvectionOperatorCoeff</ref>,</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Advection_Jacobian)</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci,ckDict<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a6c3f939aff4f0617726a4ee4de6ffdc7" kindref="member">AdvectionOperatorCoeff</ref>.advection.items():</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ck<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ckDict:</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfemIntegrals.updateAdvectionJacobian_weak_lowmem(Advection_q[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,ci,ck)],</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a5040181aeb2b41975867bb2d130fee41" kindref="member">_operatorQ</ref>[(</highlight><highlight class="stringliteral">&apos;v&apos;</highlight><highlight class="normal">,ck)],</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Advection_q[(</highlight><highlight class="stringliteral">&apos;grad(w)*dV_f&apos;</highlight><highlight class="normal">,ci)],</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Advection_Jacobian[ci][ck])</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1ad001073f75a487d0fbc6326fe8d99635" kindref="member">_createOperator</ref>(self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a6c3f939aff4f0617726a4ee4de6ffdc7" kindref="member">AdvectionOperatorCoeff</ref>,<sp/>Advection_Jacobian,<sp/>self.TPAdvectionOperator)</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1ade4c2d842b15743199d6569b9709cc14" kindref="member">updateTPInvScaleLaplaceOperator</ref>(self):</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a2feb94d20b3090a3d059b8032c01737a" kindref="member">_laplace_val</ref><sp/>=<sp/>self.OLT.nzval.copy()</highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1a2feb94d20b3090a3d059b8032c01737a" kindref="member">_laplace_val</ref>.fill(0.)</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"></highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rho_0<sp/>=<sp/>self.OLT.coefficients.rho_0</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rho_1<sp/>=<sp/>self.OLT.coefficients.rho_1</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nu_0<sp/>=<sp/>self.OLT.coefficients.nu_0</highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nu_1<sp/>=<sp/>self.OLT.coefficients.nu_1</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nd<sp/>=<sp/>self.OLT.coefficients.nd</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.OLT.coefficients.nu<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nu<sp/>=<sp/>self.OLT.coefficients.nu</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>phase_function<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a82b54e6bdddfcd6d947a3a3eb44d04d4" kindref="member">LaplaceOperatorCoeff</ref><sp/>=<sp/>TransportCoefficients.DiscreteTwoPhaseInvScaledLaplaceOperator(nd=_nd,</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_0<sp/>=<sp/>_rho_0,</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_0<sp/>=<sp/>_nu_0,</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_1<sp/>=<sp/>_rho_1,</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_1<sp/>=<sp/>_nu_1,</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LS_model<sp/>=<sp/>_phase_func)</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a82b54e6bdddfcd6d947a3a3eb44d04d4" kindref="member">LaplaceOperatorCoeff</ref><sp/>=<sp/>TransportCoefficients.DiscreteTwoPhaseInvScaledLaplaceOperator(nd=_nd,</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_0<sp/>=<sp/>_rho_0,</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_0<sp/>=<sp/>_nu_0,</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_1<sp/>=<sp/>_rho_1,</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_1<sp/>=<sp/>_nu_1,</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_function<sp/>=<sp/>phase_function)</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_t<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laplace_phi<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laplace_dphi<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._initializeLaplacePhiFunctions(Laplace_phi,Laplace_dphi)</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._initializeSparseDiffusionTensor(self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a82b54e6bdddfcd6d947a3a3eb44d04d4" kindref="member">LaplaceOperatorCoeff</ref>)</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"></highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laplace_q<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._allocateLaplaceOperatorQStorageSpace(Laplace_q)</highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a93845b0c320cef6b3a57e64e402f7d2a" kindref="member">_calculateQuadratureValues</ref>(Laplace_q)</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_nd==2:</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a82b54e6bdddfcd6d947a3a3eb44d04d4" kindref="member">LaplaceOperatorCoeff</ref>.evaluate(_t,Laplace_q)</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._calculateLaplaceOperatorQ(Laplace_q)</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"></highlight></codeline>
<codeline lineno="3836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laplace_Jacobian<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a0580d43f2ebb41e75d1ce59fd59edde0" kindref="member">_allocateMatrixSpace</ref>(self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a82b54e6bdddfcd6d947a3a3eb44d04d4" kindref="member">LaplaceOperatorCoeff</ref>,</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laplace_Jacobian)</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci,ckDict<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a82b54e6bdddfcd6d947a3a3eb44d04d4" kindref="member">LaplaceOperatorCoeff</ref>.diffusion.items():</highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ck,cjDict<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ckDict.items():</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>(list(cjDict.keys())+list(self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a82b54e6bdddfcd6d947a3a3eb44d04d4" kindref="member">LaplaceOperatorCoeff</ref>.potential[ck].keys())):</highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfemIntegrals.updateDiffusionJacobian_weak_sd(self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a82b54e6bdddfcd6d947a3a3eb44d04d4" kindref="member">LaplaceOperatorCoeff</ref>.sdInfo[(ci,ck)][0],</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a82b54e6bdddfcd6d947a3a3eb44d04d4" kindref="member">LaplaceOperatorCoeff</ref>.sdInfo[(ci,ck)][1],</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.OLT.phi[ck].femSpace.dofMap.l2g,<sp/></highlight><highlight class="comment">#??!!??</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laplace_q[(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,ci,ck)],</highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laplace_q[(</highlight><highlight class="stringliteral">&apos;da&apos;</highlight><highlight class="normal">,ci,ck,cj)],</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laplace_q[(</highlight><highlight class="stringliteral">&apos;grad(phi)&apos;</highlight><highlight class="normal">,ck)],</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laplace_q[(</highlight><highlight class="stringliteral">&apos;grad(w)*dV_a&apos;</highlight><highlight class="normal">,ck,ci)],</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laplace_dphi[(ck,cj)].dof,</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a5040181aeb2b41975867bb2d130fee41" kindref="member">_operatorQ</ref>[(</highlight><highlight class="stringliteral">&apos;v&apos;</highlight><highlight class="normal">,cj)],</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a5040181aeb2b41975867bb2d130fee41" kindref="member">_operatorQ</ref>[(</highlight><highlight class="stringliteral">&apos;grad(v)&apos;</highlight><highlight class="normal">,cj)],</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laplace_Jacobian[ci][cj])</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1ad001073f75a487d0fbc6326fe8d99635" kindref="member">_createOperator</ref>(self.<ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a82b54e6bdddfcd6d947a3a3eb44d04d4" kindref="member">LaplaceOperatorCoeff</ref>,</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Laplace_Jacobian,</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d53/classproteus_1_1LinearSolvers_1_1OperatorConstructor_1ace631505bf4e51e81f52b4c2e52fda05" kindref="member">TPInvScaledLaplaceOperator</ref>)</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"></highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a04670bd0ae71f68cb8c9d0ac647e28d2" kindref="member">updateTwoPhaseMassOperator_rho</ref>(self):</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3860"><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/d2e/classproteus_1_1LinearSolvers_1_1OperatorConstructor__oneLevel_1a93f01ec8b188e03bf59e35d57a5e7735" kindref="member">updateTwoPhaseInvScaledMassOperator</ref>(self):</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rho_0<sp/>=<sp/>self.OLT.coefficients.rho_0</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rho_1<sp/>=<sp/>self.OLT.coefficients.rho_1</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nu_0<sp/>=<sp/>self.OLT.coefficients.nu_0</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nu_1<sp/>=<sp/>self.OLT.coefficients.nu_1</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._mass_val.fill(0.)</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_nd<sp/>=<sp/>self.OLT.coefficients.nd</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.OLT.coefficients.rho<sp/>!=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_rho<sp/>=<sp/>self.OLT.coefficients.rho</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"></highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>phase_function<sp/>==<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.MassOperatorCoeff<sp/>=<sp/>TransportCoefficients.DiscreteTwoPhaseMassMatrix(nd<sp/>=<sp/>_nd,</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_0<sp/>=<sp/>_rho_0,</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_0<sp/>=<sp/>_nu_0,</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_1<sp/>=<sp/>_rho_1,</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_1<sp/>=<sp/>_nu_1,</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LS_model<sp/>=<sp/>_phase_func)</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.MassOperatorCoeff<sp/>=<sp/>TransportCoefficients.DiscreteTwoPhaseMassMatrix(nd<sp/>=<sp/>_nd,</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_0<sp/>=<sp/>_rho_0,</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_0<sp/>=<sp/>_nu_0,</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rho_1<sp/>=<sp/>_rho_1,</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nu_1<sp/>=<sp/>_nu_1,</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_function<sp/>=<sp/>phase_function)</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_t<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"></highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mass_q<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._allocateTwoPhaseMassOperatorQStorageSpace(Mass_q)</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._calculateQuadratureValues(Mass_q)</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>_nd<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.MassOperatorCoeff.evaluate(_t,Mass_q)</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._calculateTwoPhaseMassOperatorQ(Mass_q)</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mass_Jacobian<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._allocateMatrixSpace(self.MassOperatorCoeff,</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mass_Jacobian)</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"></highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci,cjDict<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.MassOperatorCoeff.mass.items():</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>cjDict:</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfemIntegrals.updateMassJacobian_weak(Mass_q[(</highlight><highlight class="stringliteral">&apos;dm&apos;</highlight><highlight class="normal">,ci,cj)],</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mass_q[(</highlight><highlight class="stringliteral">&apos;vXw*dV_m&apos;</highlight><highlight class="normal">,cj,ci)],</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mass_Jacobian[ci][cj])</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._createOperator(self.MassOperatorCoeff,Mass_Jacobian,self.TPMassOperator)</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"></highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_initializeOperatorConstruction(self):</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Collect<sp/>basic<sp/>values<sp/>used<sp/>by<sp/>all<sp/>attach<sp/>operators<sp/>functions.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._operatorQ<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._attachJacobianInfo(self._operatorQ)</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._attachQuadratureInfo()</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._attachTestInfo(self._operatorQ)</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._attachTrialInfo(self._operatorQ)</highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_attachQuadratureInfo(self):</highlight></codeline>
<codeline lineno="3918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Define<sp/>the<sp/>quadrature<sp/>type<sp/>used<sp/>to<sp/>build<sp/>operators.</highlight></codeline>
<codeline lineno="3919"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3920"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._elementQuadrature<sp/>=<sp/>self.model._elementQuadrature</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._elementBoundaryQuadrature<sp/>=<sp/>self.model._elementBoundaryQuadrature</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_attachJacobianInfo(self,Q):</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>This<sp/>helper<sp/>function<sp/>attaches<sp/>quadrature<sp/>data<sp/>related<sp/>to<sp/>&apos;J&apos;</highlight></codeline>
<codeline lineno="3926"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3927"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arguments</highlight></codeline>
<codeline lineno="3928"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="3929"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q<sp/>:<sp/>dict</highlight></codeline>
<codeline lineno="3930"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>dictionary<sp/>to<sp/>store<sp/>values<sp/>at<sp/>quadrature<sp/>points.</highlight></codeline>
<codeline lineno="3931"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_quad<sp/>=<sp/>StorageSet(shape=(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element)<sp/>)</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_quad<sp/>=<sp/>StorageSet(shape={})</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"></highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([</highlight><highlight class="stringliteral">&apos;J&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;inverse(J)&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([</highlight><highlight class="stringliteral">&apos;det(J)&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;abs(det(J))&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"></highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tensor_quad:</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[k]<sp/>=<sp/>numpy.zeros((self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nSpace_global,</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nSpace_global),</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_quad.allocate(Q)</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.u[0].femSpace.elementMaps.getJacobianValues(self.model.elementQuadraturePoints,</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[</highlight><highlight class="stringliteral">&apos;J&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[</highlight><highlight class="stringliteral">&apos;inverse(J)&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[</highlight><highlight class="stringliteral">&apos;det(J)&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[</highlight><highlight class="stringliteral">&apos;abs(det(J))&apos;</highlight><highlight class="normal">]<sp/>=<sp/>numpy.absolute(Q[</highlight><highlight class="stringliteral">&apos;det(J)&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_attachTestInfo(self,Q):</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Attach<sp/>quadrature<sp/>data<sp/>for<sp/>test<sp/>functions.</highlight></codeline>
<codeline lineno="3958"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3959"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arguments</highlight></codeline>
<codeline lineno="3960"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="3961"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q<sp/>:<sp/>dict</highlight></codeline>
<codeline lineno="3962"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>dictionary<sp/>to<sp/>store<sp/>values<sp/>at<sp/>quadrature<sp/>points.</highlight></codeline>
<codeline lineno="3963"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="3964"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="3965"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----</highlight></codeline>
<codeline lineno="3966"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TODO<sp/>-<sp/>This<sp/>function<sp/>really<sp/>doesn&apos;t<sp/>need<sp/>to<sp/>compute<sp/>the<sp/>whole<sp/>kitchen<sp/>sink.</highlight></codeline>
<codeline lineno="3967"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Find<sp/>a<sp/>more<sp/>efficient<sp/>way<sp/>to<sp/>handle<sp/>this.</highlight></codeline>
<codeline lineno="3968"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_shape_quad<sp/>=<sp/>StorageSet(shape={})</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_shapeGradient_quad<sp/>=<sp/>StorageSet(shape={})</highlight></codeline>
<codeline lineno="3971"><highlight class="normal"></highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_shape_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc)])</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_shapeGradient_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;grad(w)&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc)])</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>test_shape_quad:</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[k]<sp/>=<sp/>numpy.zeros(</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nDOF_test_element[k[-1]]),</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"></highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>test_shapeGradient_quad:</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[k]<sp/>=<sp/>numpy.zeros(</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nDOF_test_element[k[-1]],</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nSpace_global),</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc):</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>Q:</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.testSpace[ci].getBasisValues(self.model.elementQuadraturePoints,</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[(</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">,ci)])</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;grad(w)&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>Q:</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.testSpace[ci].getBasisGradientValues(self.model.elementQuadraturePoints,</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[(</highlight><highlight class="stringliteral">&apos;inverse(J)&apos;</highlight><highlight class="normal">)],</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[(</highlight><highlight class="stringliteral">&apos;grad(w)&apos;</highlight><highlight class="normal">,ci)])</highlight></codeline>
<codeline lineno="3998"><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_attachTrialInfo(self,Q):</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Attach<sp/>quadrature<sp/>data<sp/>for<sp/>trial<sp/>functions.</highlight></codeline>
<codeline lineno="4001"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4002"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arguments</highlight></codeline>
<codeline lineno="4003"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="4004"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q<sp/>:<sp/>dict</highlight></codeline>
<codeline lineno="4005"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>dictionary<sp/>to<sp/>store<sp/>values<sp/>at<sp/>quadrature<sp/>points.</highlight></codeline>
<codeline lineno="4006"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trial_shape_quad<sp/>=<sp/>StorageSet(shape={})</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trial_shapeGrad_quad<sp/>=<sp/>StorageSet(shape={})</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"></highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trial_shape_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;v&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc)])</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trial_shapeGrad_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;grad(v)&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc)])</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"></highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>trial_shape_quad:</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[k]<sp/>=<sp/>numpy.zeros(</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nDOF_test_element[k[-1]]),</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"></highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>trial_shapeGrad_quad:</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[k]<sp/>=<sp/>numpy.zeros(</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nDOF_test_element[k[-1]],</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nSpace_global),</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"></highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc):</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;v&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>Q:</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.testSpace[ci].getBasisValues(self.model.elementQuadraturePoints,</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[(</highlight><highlight class="stringliteral">&apos;v&apos;</highlight><highlight class="normal">,ci)])</highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;grad(v)&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>Q:</highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.testSpace[ci].getBasisGradientValues(self.model.elementQuadraturePoints,</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[(</highlight><highlight class="stringliteral">&apos;inverse(J)&apos;</highlight><highlight class="normal">)],</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[(</highlight><highlight class="stringliteral">&apos;grad(v)&apos;</highlight><highlight class="normal">,ci)])</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"></highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_allocateMassOperatorQStorageSpace(self,Q):</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Allocate<sp/>space<sp/>for<sp/>mass<sp/>operator<sp/>values.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_shape_quad<sp/>=<sp/>StorageSet(shape={})</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trial_shape_quad<sp/>=<sp/>StorageSet(shape={})</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trial_shape_X_test_shape_quad<sp/>=<sp/>StorageSet(shape={})</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_quad<sp/>=<sp/>StorageSet(shape={})</highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO<sp/>-<sp/>ARB<sp/>:<sp/>I<sp/>don&apos;t<sp/>think<sp/>the<sp/>3<sp/>is<sp/>necessary<sp/>here...It<sp/>created<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>confusing<sp/>bug<sp/>in<sp/>the<sp/>2-phase<sp/>problem...Need<sp/>to<sp/>investigate.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_quad<sp/>=<sp/>StorageSet(shape=(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3))</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"></highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc)])</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;m&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.MassOperatorCoeff.mass.keys())])</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"></highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>test_shape_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;w*dV_m&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.MassOperatorCoeff.mass.keys())])</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci,cjDict<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.MassOperatorCoeff.mass.items():</highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trial_shape_X_test_shape_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;vXw*dV_m&apos;</highlight><highlight class="normal">,cj,ci)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(cjDict.keys())])</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"></highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci,cjDict<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.MassOperatorCoeff.mass.items():</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;dm&apos;</highlight><highlight class="normal">,ci,cj)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(cjDict.keys())])</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"></highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tensor_quad:</highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[k]<sp/>=<sp/>numpy.zeros(</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nSpace_global,</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nSpace_global),</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>test_shape_quad:</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[k]<sp/>=<sp/>numpy.zeros(</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nDOF_test_element[k[-1]]),</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4074"><highlight class="normal"></highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>trial_shape_X_test_shape_quad:</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[k]<sp/>=<sp/>numpy.zeros((self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nDOF_trial_element[k[1]],</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nDOF_test_element[k[2]]),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"></highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_quad.allocate(Q)</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"></highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_calculateMassOperatorQ(self,Q):</highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Calculate<sp/>values<sp/>for<sp/>mass<sp/>operator.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"></highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.MassOperatorCoeff.mass.keys()):</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[(</highlight><highlight class="stringliteral">&apos;m&apos;</highlight><highlight class="normal">,ci)]<sp/>=<sp/>self._elementQuadrature</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"></highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elementQuadraturePoints,elementQuadratureWeights,</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureRuleIndeces)<sp/>=<sp/>Quadrature.buildUnion(elementQuadratureDict)</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc):</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;w*dV_m&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>Q:</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfemIntegrals.calculateWeightedShape(elementQuadratureWeights[(</highlight><highlight class="stringliteral">&apos;m&apos;</highlight><highlight class="normal">,ci)],</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._operatorQ[</highlight><highlight class="stringliteral">&apos;abs(det(J))&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self._operatorQ[(</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">,ci)],</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[(</highlight><highlight class="stringliteral">&apos;w*dV_m&apos;</highlight><highlight class="normal">,ci)])</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"></highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(list(range(self.model.nc)),list(range(self.model.nc))):</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfemIntegrals.calculateShape_X_weightedShape(self._operatorQ[(</highlight><highlight class="stringliteral">&apos;v&apos;</highlight><highlight class="normal">,ci[1])],</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[(</highlight><highlight class="stringliteral">&apos;w*dV_m&apos;</highlight><highlight class="normal">,ci[0])],</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[(</highlight><highlight class="stringliteral">&apos;vXw*dV_m&apos;</highlight><highlight class="normal">,ci[1],ci[0])])</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"></highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_allocateMatrixSpace(self,coeff,matrixDict):</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Allocate<sp/>space<sp/>for<sp/>Operator<sp/>Matrix<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc):</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrixDict[ci]<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc):</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>cj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coeff.stencil[ci]:</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrixDict[ci][cj]<sp/>=<sp/>numpy.zeros(</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nDOF_test_element[ci],</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nDOF_trial_element[cj]),</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4115"><highlight class="normal"></highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_createOperator(self,coeff,matrixDict,A):</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Takes<sp/>the<sp/>matrix<sp/>dictionary<sp/>and<sp/>creates<sp/>a<sp/>CSR<sp/>matrix<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc):</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coeff.stencil[ci]:</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfemIntegrals.updateGlobalJacobianFromElementJacobian_CSR(self.model.l2g[ci][</highlight><highlight class="stringliteral">&apos;nFreeDOF&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.l2g[ci][</highlight><highlight class="stringliteral">&apos;freeLocal&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.l2g[cj][</highlight><highlight class="stringliteral">&apos;nFreeDOF&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.l2g[cj][</highlight><highlight class="stringliteral">&apos;freeLocal&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.csrRowIndeces[(ci,cj)],</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.csrColumnOffsets[(ci,cj)],</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matrixDict[ci][cj],</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A)</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"></highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_calculateQuadratureValues(self,Q):</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[(</highlight><highlight class="stringliteral">&apos;m&apos;</highlight><highlight class="normal">,1)]<sp/>=<sp/>self._elementQuadrature</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(elementQuadraturePoints,elementQuadratureWeights,</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureRuleIndeces)<sp/>=<sp/>Quadrature.buildUnion(elementQuadratureDict)</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.u[0].femSpace.elementMaps.getValues(elementQuadraturePoints,<sp/>Q[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"></highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_allocateAdvectionOperatorQStorageSpace(self,Q):</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Allocate<sp/>storage<sp/>space<sp/>for<sp/>the<sp/>Advection<sp/>operator<sp/>values.<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_quad<sp/>=<sp/>StorageSet(shape=(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element))</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points_quadrature<sp/>=<sp/>StorageSet(shape=(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3))</highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_quad<sp/>=<sp/>StorageSet(shape=(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nSpace_global))</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_quad<sp/>=<sp/>StorageSet(shape=(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nSpace_global))</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradients<sp/>=<sp/>StorageSet(shape={})</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"></highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points_quadrature<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)])</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;f&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc)])</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,0,0)])</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.model.nc):</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,self.model.nc):</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tensor_quad<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,i,j)])</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"></highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gradients<sp/>|=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;grad(w)*dV_f&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.AdvectionOperatorCoeff.advection.keys())])</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"></highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scalar_quad.allocate(Q)</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector_quad.allocate(Q)</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"></highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>tensor_quad:</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[k]<sp/>=<sp/>numpy.zeros(</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nSpace_global),</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"></highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>gradients:</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Q[k]<sp/>=<sp/>numpy.zeros(</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.model.mesh.nElements_global,</highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nQuadraturePoints_element,</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nDOF_test_element[k[-1]],</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.model.nSpace_global),</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"></highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points_quadrature.allocate(Q)</highlight></codeline>
<codeline lineno="4181"><highlight class="normal"></highlight></codeline>
<codeline lineno="4182" refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration" kindref="compound">ChebyshevSemiIteration</ref>(<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver" kindref="compound">LinearSolver</ref>):</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Class<sp/>for<sp/>implementing<sp/>the<sp/>ChebyshevSemiIteration.</highlight></codeline>
<codeline lineno="4184"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="4186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-----</highlight></codeline>
<codeline lineno="4187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>Chebyshev<sp/>semi-iteration<sp/>was<sp/>developed<sp/>in<sp/>the<sp/>1960s</highlight></codeline>
<codeline lineno="4188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>by<sp/>Golub<sp/>and<sp/>Varga.<sp/><sp/>It<sp/>is<sp/>an<sp/>iterative<sp/>technique<sp/>for</highlight></codeline>
<codeline lineno="4189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>solving<sp/>linear<sp/>systems<sp/>Ax<sp/>=<sp/>b<sp/>with<sp/>the<sp/>property<sp/>of<sp/>preserving</highlight></codeline>
<codeline lineno="4190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>linearity<sp/>with<sp/>respect<sp/>to<sp/>the<sp/>Krylov<sp/>solves<sp/>(see<sp/>Wathen,</highlight></codeline>
<codeline lineno="4191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Rees<sp/>2009<sp/>-<sp/>Chebyshev<sp/>semi-iteration<sp/>in<sp/>preconditioning</highlight></codeline>
<codeline lineno="4192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>for<sp/>problems<sp/>including<sp/>the<sp/>mass<sp/>matrix).<sp/><sp/>This<sp/>makes<sp/>the<sp/>method</highlight></codeline>
<codeline lineno="4193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>particularly<sp/>well<sp/>suited<sp/>for<sp/>solving<sp/>sub-problems<sp/>that<sp/>arise<sp/>in</highlight></codeline>
<codeline lineno="4194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>more<sp/>complicated<sp/>block<sp/>preconditioners<sp/>such<sp/>as<sp/>the<sp/>Schur</highlight></codeline>
<codeline lineno="4195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>complement,<sp/>provided<sp/>one<sp/>has<sp/>an<sp/>aprior<sp/>bound<sp/>on<sp/>the<sp/>systems</highlight></codeline>
<codeline lineno="4196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>eigenvalues<sp/>(see<sp/>Wathen<sp/>1987<sp/>-<sp/>Realisitc<sp/>eigenvalue<sp/>bounds<sp/>for</highlight></codeline>
<codeline lineno="4197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Galerkin<sp/>mass<sp/>matrix).</highlight></codeline>
<codeline lineno="4198"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>When<sp/>implementing<sp/>this<sp/>method<sp/>it<sp/>is<sp/>important<sp/>you<sp/>first</highlight></codeline>
<codeline lineno="4200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>have<sp/>tight<sp/>aprior<sp/>bounds<sp/>on<sp/>the<sp/>eigenvalues<sp/>(denoted<sp/>here<sp/>as</highlight></codeline>
<codeline lineno="4201"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>alpha<sp/>and<sp/>beta).<sp/>This<sp/>can<sp/>be<sp/>a<sp/>challenge,<sp/>but<sp/>the<sp/>references</highlight></codeline>
<codeline lineno="4202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>above<sp/>do<sp/>provide<sp/>these<sp/>results<sp/>for<sp/>many<sp/>relevant<sp/>mass<sp/>matrices.</highlight></codeline>
<codeline lineno="4203"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4204"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Also,<sp/>when<sp/>implementing<sp/>this<sp/>method,<sp/>the<sp/>residual<sp/>b<sp/>-<sp/>Ax0</highlight></codeline>
<codeline lineno="4205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>will<sp/>be<sp/>preconditioned<sp/>with<sp/>the<sp/>inverse<sp/>of<sp/>diag(A).<sp/><sp/>Your<sp/>eigenvalue</highlight></codeline>
<codeline lineno="4206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>bounds<sp/>should<sp/>reflect<sp/>the<sp/>spectrum<sp/>of<sp/>this<sp/>preconditioned<sp/>system.</highlight></codeline>
<codeline lineno="4207"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4208"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Arugments</highlight></codeline>
<codeline lineno="4209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="4210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>:<sp/>:class:<sp/>`p4pyPETSc.Mat`</highlight></codeline>
<codeline lineno="4211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>linear<sp/>system<sp/>matrix</highlight></codeline>
<codeline lineno="4212"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>alpha<sp/>:<sp/>float</highlight></codeline>
<codeline lineno="4214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A&apos;s<sp/>smallest<sp/>eigenvalue</highlight></codeline>
<codeline lineno="4215"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>beta<sp/>:<sp/>float</highlight></codeline>
<codeline lineno="4217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A&apos;s<sp/>largest<sp/>eigenvalue</highlight></codeline>
<codeline lineno="4218"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>save_iterations<sp/>:<sp/>bool</highlight></codeline>
<codeline lineno="4220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>flag<sp/>indicating<sp/>whether<sp/>to<sp/>store<sp/>each<sp/>solution<sp/>iteration</highlight></codeline>
<codeline lineno="4221"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Notes</highlight></codeline>
<codeline lineno="4223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-----</highlight></codeline>
<codeline lineno="4224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>Chebyshev<sp/>semi-iteration<sp/>is<sp/>often<sp/>used<sp/>to<sp/>solve<sp/>subproblems<sp/>of</highlight></codeline>
<codeline lineno="4225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>larger<sp/>linear<sp/>systems.<sp/><sp/>Thus,<sp/>it<sp/>is<sp/>common<sp/>that<sp/>this<sp/>class<sp/>will</highlight></codeline>
<codeline lineno="4226"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>use<sp/>petsc4py<sp/>matrices<sp/>and<sp/>vectors.<sp/><sp/>Currently<sp/>this<sp/>is<sp/>the</highlight></codeline>
<codeline lineno="4227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>only<sp/>case<sp/>that<sp/>is<sp/>implemented,<sp/>but<sp/>an<sp/>additional<sp/>constructor</highlight></codeline>
<codeline lineno="4228"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>has<sp/>been<sp/>included<sp/>in<sp/>the<sp/>API<sp/>for<sp/>superlu<sp/>matrices<sp/>for<sp/>future</highlight></codeline>
<codeline lineno="4229"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>implementations.</highlight></codeline>
<codeline lineno="4230"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1af5f158a1c389190537e33d742fa32b31" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A,</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>alpha,</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beta,</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>save_iterations<sp/>=<sp/>False):</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1aa303e6d5b037a7e3b8fcdd13285cc881" kindref="member">A_petsc</ref><sp/>=<sp/>A</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"></highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Initialize<sp/>Linear<sp/>Solver<sp/>with<sp/>superlu<sp/>matrix</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_rows<sp/>=<sp/>A.getSizes()[1][0]</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_cols<sp/>=<sp/>A.getSizes()[1][1]</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.rowptr,<sp/>self.colind,<sp/>self.nzval)<sp/>=<sp/>A.getValuesCSR()</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A_superlu<sp/>=<sp/><ref refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools_1a42ae20ab68e5e9fc1025868daed76eea" kindref="member">SparseMat</ref>(num_rows,</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_cols,</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nzval.shape[0],</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nzval,</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.colind,</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rowptr)</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LinearSolver.__init__(self,<sp/>A_superlu)</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"></highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a8fe72a488771ba569108e4c12f5e0743" kindref="member">r_petsc</ref><sp/>=<sp/>p4pyPETSc.Vec().createWithArray(numpy.zeros(num_cols))</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a8fe72a488771ba569108e4c12f5e0743" kindref="member">r_petsc</ref>.setType(</highlight><highlight class="stringliteral">&apos;mpi&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a490241f46b365b4d43075dff350f9945" kindref="member">r_petsc_array</ref><sp/>=<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a8fe72a488771ba569108e4c12f5e0743" kindref="member">r_petsc</ref>.getArray()</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a0793315cb606074b826c09391d953cd7" kindref="member">alpha</ref><sp/>=<sp/>alpha</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1af8814c2011c76d9fd7a9732d8e9be951" kindref="member">beta</ref><sp/>=<sp/>beta</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a4ca23a054cc33b8584ea4d59cbd77419" kindref="member">relax_parameter</ref><sp/>=<sp/>old_div((self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a0793315cb606074b826c09391d953cd7" kindref="member">alpha</ref><sp/>+<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1af8814c2011c76d9fd7a9732d8e9be951" kindref="member">beta</ref>),<sp/>2.)</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a3f25592e9dc4f4b37eb1b2f2bee5d52b" kindref="member">rho</ref><sp/>=<sp/>old_div((self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1af8814c2011c76d9fd7a9732d8e9be951" kindref="member">beta</ref><sp/>-<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a0793315cb606074b826c09391d953cd7" kindref="member">alpha</ref>),<sp/>(self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a0793315cb606074b826c09391d953cd7" kindref="member">alpha</ref><sp/>+<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1af8814c2011c76d9fd7a9732d8e9be951" kindref="member">beta</ref>))</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"></highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1aeed0a7f1abd9230f794b1eb6314bd047" kindref="member">diag</ref><sp/>=<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1aa303e6d5b037a7e3b8fcdd13285cc881" kindref="member">A_petsc</ref>.getDiagonal().copy()</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1aeed0a7f1abd9230f794b1eb6314bd047" kindref="member">diag</ref>.<ref refid="d6/d5e/namespaceproteus_1_1tests_1_1MoveMeshMonitor_1_1movemesh__monitor_1a8045a0f5d22b86f957fcbfd990136add" kindref="member">scale</ref>(self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a4ca23a054cc33b8584ea4d59cbd77419" kindref="member">relax_parameter</ref>)</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a4d1449da0877a6a41f598e4e1206bf46" kindref="member">z</ref><sp/>=<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1aa303e6d5b037a7e3b8fcdd13285cc881" kindref="member">A_petsc</ref>.getDiagonal().copy()</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a880f4ff14ee9d9f88f504367f7dceb72" kindref="member">save_iterations</ref><sp/>=<sp/>save_iterations</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a880f4ff14ee9d9f88f504367f7dceb72" kindref="member">save_iterations</ref>:</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1af05dac62fdcc24c51f2f070559eed60a" kindref="member">iteration_results</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><sp/>@classmethod</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1ac4d3a6f7fdc0a9aa4a291b3c1984a1ee" kindref="member">chebyshev_superlu_constructor</ref>(cls):</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="4271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Future<sp/>home<sp/>of<sp/>a<sp/>Chebyshev<sp/>constructor<sp/>for<sp/>superlu<sp/>matrices.</highlight></codeline>
<codeline lineno="4272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&apos;This<sp/>function<sp/>is<sp/>not<sp/>implmented<sp/>yet.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1af63332e40ea49b4559461a7c93bd01bf" kindref="member">apply</ref>(self,<sp/>b,<sp/>x,<sp/>k=5):</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>This<sp/>function<sp/>applies<sp/>the<sp/>Chebyshev-semi<sp/>iteration.</highlight></codeline>
<codeline lineno="4277"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4278"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="4279"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="4280"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b<sp/>:<sp/>:class:<sp/>`p4pyPETSc.Vec`</highlight></codeline>
<codeline lineno="4281"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>righthand<sp/>side<sp/>vector</highlight></codeline>
<codeline lineno="4282"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4283"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>:<sp/>:class:<sp/>`p4pyPETSc.Vec`</highlight></codeline>
<codeline lineno="4284"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>An<sp/>initial<sp/>guess<sp/>for<sp/>the<sp/>solution.<sp/><sp/>Note<sp/>that<sp/>the</highlight></codeline>
<codeline lineno="4285"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solution<sp/>will<sp/>be<sp/>returned<sp/>in<sp/>the<sp/>vector<sp/>too.</highlight></codeline>
<codeline lineno="4286"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>:<sp/>int</highlight></codeline>
<codeline lineno="4288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Number<sp/>of<sp/>iterations</highlight></codeline>
<codeline lineno="4289"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="4291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="4292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>:<sp/>:class:`p4pyPETSc.Vec`</highlight></codeline>
<codeline lineno="4293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>result<sp/>of<sp/>the<sp/>Chebyshev<sp/>semi-iteration.</highlight></codeline>
<codeline lineno="4294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a67676ea74160464ca6154e71aaf093fd" kindref="member">x_k</ref><sp/>=<sp/>x</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1ac8f55637b24985d70319d6a1ebf9c9f1" kindref="member">x_k_array</ref><sp/>=<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a67676ea74160464ca6154e71aaf093fd" kindref="member">x_k</ref>.getArray()</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a59629444c6d6f729fc2c0982597f2610" kindref="member">x_km1</ref><sp/>=<sp/>x.copy()</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a59629444c6d6f729fc2c0982597f2610" kindref="member">x_km1</ref>.zeroEntries()</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a880f4ff14ee9d9f88f504367f7dceb72" kindref="member">save_iterations</ref>:</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1af05dac62fdcc24c51f2f070559eed60a" kindref="member">iteration_results</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1ac8f55637b24985d70319d6a1ebf9c9f1" kindref="member">x_k_array</ref>.copy())</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"></highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Since<sp/>b<sp/>maybe<sp/>locked<sp/>in<sp/>some<sp/>instances,<sp/>we<sp/>create<sp/>a<sp/>copy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_copy<sp/>=<sp/>b.copy()</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(k):</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/>=<sp/>old_div(1.,(1-old_div((self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a3f25592e9dc4f4b37eb1b2f2bee5d52b" kindref="member">rho</ref>**2),4.)))</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a490241f46b365b4d43075dff350f9945" kindref="member">r_petsc_array</ref>.fill(0.)</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/ddd/classproteus_1_1LinearSolvers_1_1LinearSolver_1aceb30deec6cc954fe8d10828295824c2" kindref="member">computeResidual</ref>(self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1ac8f55637b24985d70319d6a1ebf9c9f1" kindref="member">x_k_array</ref>,</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a490241f46b365b4d43075dff350f9945" kindref="member">r_petsc_array</ref>,</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>b_copy.getArray())</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>x_kp1<sp/>=<sp/>w*(z<sp/>+<sp/>x_k<sp/>-<sp/>x_km1)<sp/>+<sp/>x_km1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a8fe72a488771ba569108e4c12f5e0743" kindref="member">r_petsc</ref>.<ref refid="d6/d5e/namespaceproteus_1_1tests_1_1MoveMeshMonitor_1_1movemesh__monitor_1a8045a0f5d22b86f957fcbfd990136add" kindref="member">scale</ref>(-1)</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a4d1449da0877a6a41f598e4e1206bf46" kindref="member">z</ref>.pointwiseDivide(self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a8fe72a488771ba569108e4c12f5e0743" kindref="member">r_petsc</ref>,<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1aeed0a7f1abd9230f794b1eb6314bd047" kindref="member">diag</ref>)</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a4d1449da0877a6a41f598e4e1206bf46" kindref="member">z</ref>.axpy(1.,<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a67676ea74160464ca6154e71aaf093fd" kindref="member">x_k</ref>)</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a4d1449da0877a6a41f598e4e1206bf46" kindref="member">z</ref>.axpy(-1.,<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a59629444c6d6f729fc2c0982597f2610" kindref="member">x_km1</ref>)</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a4d1449da0877a6a41f598e4e1206bf46" kindref="member">z</ref>.<ref refid="d6/d5e/namespaceproteus_1_1tests_1_1MoveMeshMonitor_1_1movemesh__monitor_1a8045a0f5d22b86f957fcbfd990136add" kindref="member">scale</ref>(w)</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a4d1449da0877a6a41f598e4e1206bf46" kindref="member">z</ref>.axpy(1.,<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a59629444c6d6f729fc2c0982597f2610" kindref="member">x_km1</ref>)</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a59629444c6d6f729fc2c0982597f2610" kindref="member">x_km1</ref><sp/>=<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a67676ea74160464ca6154e71aaf093fd" kindref="member">x_k</ref>.copy()</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a67676ea74160464ca6154e71aaf093fd" kindref="member">x_k</ref><sp/>=<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a4d1449da0877a6a41f598e4e1206bf46" kindref="member">z</ref>.copy()</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1ac8f55637b24985d70319d6a1ebf9c9f1" kindref="member">x_k_array</ref><sp/>=<sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a67676ea74160464ca6154e71aaf093fd" kindref="member">x_k</ref>.getArray()</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a880f4ff14ee9d9f88f504367f7dceb72" kindref="member">save_iterations</ref>:</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1af05dac62fdcc24c51f2f070559eed60a" kindref="member">iteration_results</ref>.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1a67676ea74160464ca6154e71aaf093fd" kindref="member">x_k</ref>.getArray().copy())</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x.setArray(self.<ref refid="d3/d30/classproteus_1_1LinearSolvers_1_1ChebyshevSemiIteration_1ac8f55637b24985d70319d6a1ebf9c9f1" kindref="member">x_k_array</ref>)</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"></highlight></codeline>
<codeline lineno="4325"><highlight class="normal"></highlight><highlight class="comment">#<sp/>The<sp/>implementation<sp/>that<sp/>is<sp/>commented<sp/>out<sp/>here<sp/>was<sp/>adopted<sp/>from</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"></highlight><highlight class="comment">#<sp/>the<sp/>1996<sp/>text<sp/>Iterative<sp/>Solution<sp/>Methods<sp/>by<sp/>Owe<sp/>Axelsson<sp/>starting</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4327"><highlight class="normal"></highlight><highlight class="comment">#<sp/>on<sp/>page<sp/>179.<sp/><sp/>As<sp/>currently<sp/>written,<sp/>this<sp/>algorithm<sp/>requires</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4328"><highlight class="normal"></highlight><highlight class="comment">#<sp/>inputing<sp/>the<sp/>inverse<sp/>diagonally<sp/>preconditioned<sp/>matrix<sp/>A<sp/>and<sp/>b.<sp/><sp/>I&apos;m</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4329"><highlight class="normal"></highlight><highlight class="comment">#<sp/>not<sp/>sure<sp/>this<sp/>is<sp/>the<sp/>best<sp/>approach,<sp/>but<sp/>I&apos;d<sp/>like<sp/>to<sp/>leave<sp/>this<sp/>code</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4330"><highlight class="normal"></highlight><highlight class="comment">#<sp/>in<sp/>place<sp/>for<sp/>now<sp/>in<sp/>case<sp/>it<sp/>is<sp/>useful<sp/>in<sp/>the<sp/>future.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4331"><highlight class="normal"></highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>def<sp/>_calc_theta_ell(self,<sp/>ell):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>return<sp/>((2*ell<sp/>+<sp/>1)<sp/>/<sp/>(2.<sp/>*<sp/>self.k)<sp/>)<sp/>*<sp/>math.pi</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4334"><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>def<sp/>_calc_tau(self,<sp/>ell):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>theta<sp/>=<sp/>self._calc_theta_ell(ell)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>one_over_tau<sp/>=<sp/>(<sp/>(self.beta<sp/>-<sp/>self.alpha)<sp/>/<sp/>2.<sp/>*<sp/>math.cos(theta)<sp/>+</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.beta<sp/>+<sp/>self.alpha)<sp/>/<sp/>2.)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>return<sp/>1.<sp/>/<sp/>one_over_tau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4340"><highlight class="normal"></highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>def<sp/>apply(self):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>for<sp/>i<sp/>in<sp/>range(self.k):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>i==0<sp/>and<sp/>self.save_iterations:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.iteration_results.append(self.x_k.getArray().reshape(self.n,1).copy())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif<sp/>i<sp/>&gt;<sp/>0:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tau<sp/>=<sp/>self._calc_tau(i-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resid<sp/>=<sp/>self._calc_residual(self.x_k)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.x_k.axpy(-tau,<sp/>resid)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>self.save_iterations:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.iteration_results.append(self.x_k.getArray().reshape(self.n,1).copy())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"></highlight></codeline>
<codeline lineno="4352" refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace" kindref="compound">SolverNullSpace</ref>(object):</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"></highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace_1a41dd971c9867edfa4d14286d81292c1b" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proteus_ksp):</highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace_1a8fb6360a942676e4a4dccd36d1a3a558" kindref="member">_set_global_ksp</ref>(proteus_ksp)</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace_1a0632a055368edb7d36afacddcf90682b" kindref="member">get_name</ref>():</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;no_null_space&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4361"><highlight class="normal"></highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace_1a1541273b38f43bd9e443b9b99b26e02e" kindref="member">apply_to_schur_block</ref>(global_ksp):</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4365"><highlight class="normal"></highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_set_global_ksp(self,</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proteus_ksp):</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.proteus_ksp<sp/>=<sp/>proteus_ksp</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"></highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace_1afda4bf2e52f25500fb897ba2df4d2bef" kindref="member">get_global_ksp</ref>(self):</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>self.proteus_ksp</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"></highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace_1a5a4bade93b39302c641f58c0bae4b51c" kindref="member">apply_ns</ref>(self,</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_b):</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"></highlight></codeline>
<codeline lineno="4377"><highlight class="normal">NoNullSpace<sp/>=<sp/>SolverNullSpace</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"></highlight></codeline>
<codeline lineno="4379" refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure" kindref="compound">NavierStokesConstantPressure</ref>(<ref refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace" kindref="compound">SolverNullSpace</ref>):</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"></highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure_1a1700801afe39c99786905f21a0c7df07" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proteus_ksp):</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(NavierStokesConstantPressure,<sp/>self).<ref refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure_1a1700801afe39c99786905f21a0c7df07" kindref="member">__init__</ref>(proteus_ksp)</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"></highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure_1aacac594f9f675b32c85147457cba947e" kindref="member">get_name</ref>():</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;constant_pressure&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4388"><highlight class="normal"></highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure_1a047f24c57ba59f3b57197321ccc8ca7d" kindref="member">apply_to_schur_block</ref>(global_ksp):</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsp<sp/>=<sp/>p4pyPETSc.NullSpace().create(comm=p4pyPETSc.COMM_WORLD,</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vectors<sp/>=<sp/>(),</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>constant<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[1].getOperators()[0].setNullSpace(nsp)</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_ksp.pc.getFieldSplitSubKSP()[1].getOperators()[1].setNullSpace(nsp)</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"></highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure_1a618be5e3c10207f22b4621387fe0744f" kindref="member">apply_ns</ref>(self,</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_b):</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="4400"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Applies<sp/>the<sp/>global<sp/>null<sp/>space<sp/>created<sp/>from<sp/>a<sp/>pure<sp/>Neumann<sp/>boundary</highlight></codeline>
<codeline lineno="4401"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.</highlight></codeline>
<codeline lineno="4402"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4403"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arguments</highlight></codeline>
<codeline lineno="4404"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="4405"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_b<sp/>:<sp/>:vec:`petsc4py_vec`</highlight></codeline>
<codeline lineno="4406"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>whether<sp/>a<sp/>global<sp/>null<sp/>space<sp/>vector<sp/>for<sp/>a<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>pressure<sp/>has<sp/>been<sp/>created.<sp/><sp/>If<sp/>not,<sp/>create<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure_1ae6aa20399870ece03e060c86417d4bc1" kindref="member">pressure_null_space</ref></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure_1a3e98f0ba7e872d5ac3c9c164f6d975e5" kindref="member">_defineNullSpaceVec</ref>(par_b)</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure_1ae6aa20399870ece03e060c86417d4bc1" kindref="member">pressure_null_space</ref><sp/>=<sp/>p4pyPETSc.NullSpace().create(constant=</highlight><highlight class="keyword">False</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vectors=self.<ref refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure_1ae9a25b8ce766e6243f025acd9804e24d" kindref="member">global_null_space</ref>,</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm=p4pyPETSc.COMM_WORLD)</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"></highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Using<sp/>the<sp/>global<sp/>constant<sp/>pressure<sp/>null<sp/>space,<sp/>assign<sp/>it<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>global<sp/>ksp<sp/>object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace_1afda4bf2e52f25500fb897ba2df4d2bef" kindref="member">get_global_ksp</ref>().ksp.getOperators()[0].setNullSpace(self.<ref refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure_1ae6aa20399870ece03e060c86417d4bc1" kindref="member">pressure_null_space</ref>)</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"></highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">_defineNullSpaceVec(self,</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_b):</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;<sp/>Setup<sp/>a<sp/>global<sp/>null<sp/>space<sp/>vector.</highlight></codeline>
<codeline lineno="4424"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4425"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TODO<sp/>(ARB)</highlight></codeline>
<codeline lineno="4426"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="4427"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>needs<sp/>to<sp/>be<sp/>tested<sp/>more<sp/>throughly<sp/>for<sp/>parallel</highlight></codeline>
<codeline lineno="4428"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>implmentations.</highlight></codeline>
<codeline lineno="4429"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>proteus<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Comm</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm<sp/>=<sp/>Comm.get()</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ksp<sp/>=<sp/>self.<ref refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace_1afda4bf2e52f25500fb897ba2df4d2bef" kindref="member">get_global_ksp</ref>()</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stabilized<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ksp.par_L.pde.u[0].femSpace.dofMap.nDOF_all_processes==ksp.par_L.pde.u[1].femSpace.dofMap.nDOF_all_processes:</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stabilized<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"></highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rank<sp/>=<sp/>p4pyPETSc.COMM_WORLD.rank</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size<sp/>=<sp/>p4pyPETSc.COMM_WORLD.size</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_space_vector<sp/>=<sp/>par_b.copy()</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_space_vector.getArray().fill(0.)</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N_DOF_pressure<sp/>=<sp/>ksp.par_L.pde.u[0].femSpace.dofMap.nDOF_all_processes</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N_DOF_pressure_subdomain_owned<sp/>=<sp/>ksp.par_L.pde.u[0].femSpace.dofMap.dof_offsets_subdomain_owned[comm.rank()+1]<sp/>-ksp.par_L.pde.u[0].femSpace.dofMap.dof_offsets_subdomain_owned[comm.rank()]</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>stabilized:</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>null_space_vector.getArray()[::ksp.par_L.pde.nSpace_global+1]</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>ksp.par_L.pde.isActiveDOF_p[:N_DOF_pressure_subdomain_owned].shape[0]<sp/>==<sp/>tmp.shape[0],<sp/>str(tmp.shape)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+<sp/>str(ksp.par_L.pde.isActiveDOF_p[:N_DOF_pressure_subdomain_owned].shape)</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N_ACTIVE_DOF_pressure<sp/>=<sp/>comm.globalSum(ksp.par_L.pde.isActiveDOF_p[:N_DOF_pressure_subdomain_owned].<ref refid="de/d5b/Headers_8h_1a4236a05d5d04839f0af91439cb8820b8" kindref="member">sum</ref>())</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp[:]<sp/>=<sp/>np.where(ksp.par_L.pde.isActiveDOF_p[:N_DOF_pressure_subdomain_owned]==1.0,<sp/>1.0/<ref refid="d7/df2/namespaceproteus_1_1AnalysisTools_1a1b0cb6ec0a08405728cb648dd4589f26" kindref="member">sqrt</ref>(N_ACTIVE_DOF_pressure),0.0)</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_DOF_pressure<sp/>=<sp/>ksp.par_L.pde.u[0].femSpace.dofMap.nDOF</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>null_space_vector.getArray()[0:n_DOF_pressure]</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp[:]<sp/>=<sp/>old_div(1.0,<sp/>(<ref refid="d7/df2/namespaceproteus_1_1AnalysisTools_1a1b0cb6ec0a08405728cb648dd4589f26" kindref="member">sqrt</ref>(N_DOF_pressure)))</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_space_vector.assemblyBegin()</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>null_space_vector.assemblyEnd()</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d9/d37/classproteus_1_1LinearSolvers_1_1NavierStokesConstantPressure_1ae9a25b8ce766e6243f025acd9804e24d" kindref="member">global_null_space</ref><sp/>=<sp/>[null_space_vector]</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"></highlight></codeline>
<codeline lineno="4456" refid="df/d1e/classproteus_1_1LinearSolvers_1_1ConstantNullSpace" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="df/d1e/classproteus_1_1LinearSolvers_1_1ConstantNullSpace" kindref="compound">ConstantNullSpace</ref>(<ref refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace" kindref="compound">SolverNullSpace</ref>):</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/d1e/classproteus_1_1LinearSolvers_1_1ConstantNullSpace_1abaff7a5b7fd43a5fd2294b720abe2361" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proteus_ksp):</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>super(ConstantNullSpace,<sp/>self).<ref refid="df/d1e/classproteus_1_1LinearSolvers_1_1ConstantNullSpace_1abaff7a5b7fd43a5fd2294b720abe2361" kindref="member">__init__</ref>(proteus_ksp)</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"></highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/>@staticmethod</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/d1e/classproteus_1_1LinearSolvers_1_1ConstantNullSpace_1a44c529561950af6017e7b33f65cf9fd2" kindref="member">get_name</ref>():</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;constant&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4464"><highlight class="normal"></highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="df/d1e/classproteus_1_1LinearSolvers_1_1ConstantNullSpace_1a03e0d6bfb6d48f95889b8cb6d251d454" kindref="member">apply_ns</ref>(self,</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_b):</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="4468"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Applies<sp/>the<sp/>global<sp/>null<sp/>space<sp/>created<sp/>from<sp/>a<sp/>pure<sp/>Neumann<sp/>boundary</highlight></codeline>
<codeline lineno="4469"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>problem.</highlight></codeline>
<codeline lineno="4470"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4471"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Arguments</highlight></codeline>
<codeline lineno="4472"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>---------</highlight></codeline>
<codeline lineno="4473"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par_b<sp/>:<sp/>:vec:`petsc4py_vec`</highlight></codeline>
<codeline lineno="4474"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>whether<sp/>a<sp/>global<sp/>null<sp/>space<sp/>vector<sp/>for<sp/>a<sp/>constant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>has<sp/>been<sp/>created.<sp/><sp/>If<sp/>not,<sp/>create<sp/>one.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d1e/classproteus_1_1LinearSolvers_1_1ConstantNullSpace_1afd7f2e6246d045aa07c5ca50b2dfc071" kindref="member">constant_null_space</ref></highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="df/d1e/classproteus_1_1LinearSolvers_1_1ConstantNullSpace_1afd7f2e6246d045aa07c5ca50b2dfc071" kindref="member">constant_null_space</ref><sp/>=<sp/>p4pyPETSc.NullSpace().create(constant=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm=p4pyPETSc.COMM_WORLD)</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"></highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Using<sp/>the<sp/>global<sp/>constant<sp/>pressure<sp/>null<sp/>space,<sp/>assign<sp/>it<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>the<sp/>global<sp/>ksp<sp/>object.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="da/ddd/classproteus_1_1LinearSolvers_1_1SolverNullSpace_1afda4bf2e52f25500fb897ba2df4d2bef" kindref="member">get_global_ksp</ref>().ksp.getOperators()[0].setNullSpace(self.<ref refid="df/d1e/classproteus_1_1LinearSolvers_1_1ConstantNullSpace_1afd7f2e6246d045aa07c5ca50b2dfc071" kindref="member">constant_null_space</ref>)</highlight></codeline>
    </programlisting>
    <location file="LinearSolvers.py"/>
  </compounddef>
</doxygen>
