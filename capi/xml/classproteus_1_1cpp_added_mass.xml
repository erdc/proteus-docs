<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classproteus_1_1cpp_added_mass" kind="class" language="C++" prot="public">
    <compoundname>proteus::cppAddedMass</compoundname>
    <basecompoundref refid="classproteus_1_1cpp_added_mass__base" prot="public" virt="non-virtual">proteus::cppAddedMass_base</basecompoundref>
    <includes refid="_added_mass_8h" local="no">/Users/cekees/proteus/proteus/mprans/AddedMass.h</includes>
    <templateparamlist>
      <param>
        <type>class CompKernelType</type>
      </param>
      <param>
        <type>int</type>
        <declname>nSpace</declname>
        <defname>nSpace</defname>
      </param>
      <param>
        <type>int</type>
        <declname>nQuadraturePoints_element</declname>
        <defname>nQuadraturePoints_element</defname>
      </param>
      <param>
        <type>int</type>
        <declname>nDOF_mesh_trial_element</declname>
        <defname>nDOF_mesh_trial_element</defname>
      </param>
      <param>
        <type>int</type>
        <declname>nDOF_trial_element</declname>
        <defname>nDOF_trial_element</defname>
      </param>
      <param>
        <type>int</type>
        <declname>nDOF_test_element</declname>
        <defname>nDOF_test_element</defname>
      </param>
      <param>
        <type>int</type>
        <declname>nQuadraturePoints_elementBoundary</declname>
        <defname>nQuadraturePoints_elementBoundary</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classproteus_1_1cpp_added_mass_1a86c1fae0d7186ec94408d685586016e5" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::nDOF_test_X_trial_element</definition>
        <argsstring></argsstring>
        <name>nDOF_test_X_trial_element</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/AddedMass.h" line="103" column="15" bodyfile="/Users/cekees/proteus/proteus/mprans/AddedMass.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1cpp_added_mass_1a15ca63e2efb0b4562466f8b0e0266233" prot="public" static="no" mutable="no">
        <type>CompKernelType</type>
        <definition>CompKernelType proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::ck</definition>
        <argsstring></argsstring>
        <name>ck</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/AddedMass.h" line="104" column="20" bodyfile="/Users/cekees/proteus/proteus/mprans/AddedMass.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classproteus_1_1cpp_added_mass_1aaa9289e0911d0a05872a1045f3bea538" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::cppAddedMass</definition>
        <argsstring>()</argsstring>
        <name>cppAddedMass</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/AddedMass.h" line="105" column="5" bodyfile="/Users/cekees/proteus/proteus/mprans/AddedMass.h" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1cpp_added_mass_1a2a634e7150ea111224bf650ea4c8132a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::evaluateCoefficients</definition>
        <argsstring>(const double &amp;rho, double &amp;a)</argsstring>
        <name>evaluateCoefficients</name>
        <param>
          <type>const double &amp;</type>
          <declname>rho</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/AddedMass.h" line="110" column="12" bodyfile="/Users/cekees/proteus/proteus/mprans/AddedMass.h" bodystart="110" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1cpp_added_mass_1ae961a902da464f0bf135e0ada4073572" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::exteriorNumericalDiffusiveFlux</definition>
        <argsstring>(const double n[nSpace], const double a[nSpace], int isBodyBoundary, double &amp;flux)</argsstring>
        <name>exteriorNumericalDiffusiveFlux</name>
        <param>
          <type>const double</type>
          <declname>n</declname>
          <array>[nSpace]</array>
        </param>
        <param>
          <type>const double</type>
          <declname>a</declname>
          <array>[nSpace]</array>
        </param>
        <param>
          <type>int</type>
          <declname>isBodyBoundary</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>flux</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/AddedMass.h" line="117" column="12" bodyfile="/Users/cekees/proteus/proteus/mprans/AddedMass.h" bodystart="117" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1cpp_added_mass_1a3e918affa49faa8d8ce22ede894bcdd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::calculateElementResidual</definition>
        <argsstring>(double *mesh_trial_ref, double *mesh_grad_trial_ref, double *mesh_dof, int *mesh_l2g, double *dV_ref, double *u_trial_ref, double *u_grad_trial_ref, double *u_test_ref, double *u_grad_test_ref, double *mesh_trial_trace_ref, double *mesh_grad_trial_trace_ref, double *dS_ref, double *u_trial_trace_ref, double *u_grad_trial_trace_ref, double *u_test_trace_ref, double *u_grad_test_trace_ref, double *normal_ref, double *boundaryJac_ref, int nElements_global, int *u_l2g, double *u_dof, double *q_rho, int offset_u, int stride_u, double *elementResidual_u, int nExteriorElementBoundaries_global, int *exteriorElementBoundariesArray, int *elementBoundaryElementsArray, int *elementBoundaryLocalElementBoundariesArray, double *element_u, int eN)</argsstring>
        <name>calculateElementResidual</name>
        <param>
          <type>double *</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_grad_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_test_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_grad_test_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_test_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>u_l2g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_rho</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>elementResidual_u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>element_u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/AddedMass.h" line="130" column="17" bodyfile="/Users/cekees/proteus/proteus/mprans/AddedMass.h" bodystart="130" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1cpp_added_mass_1a283616e84fbfec8f6584807f0782a3f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::calculateResidual</definition>
        <argsstring>(arguments_dict &amp;args)</argsstring>
        <name>calculateResidual</name>
        <reimplements refid="classproteus_1_1cpp_added_mass__base_1acdca930cac84444ed4f7dbe1a55b4f21">calculateResidual</reimplements>
        <param>
          <type><ref refid="structproteus_1_1arguments__dict" kindref="compound">arguments_dict</ref> &amp;</type>
          <declname>args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/AddedMass.h" line="268" column="10" bodyfile="/Users/cekees/proteus/proteus/mprans/AddedMass.h" bodystart="268" bodyend="550"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1cpp_added_mass_1a81de5da1ef306bebc9c95e145ad08a64" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::calculateElementJacobian</definition>
        <argsstring>(double *mesh_trial_ref, double *mesh_grad_trial_ref, double *mesh_dof, int *mesh_l2g, double *dV_ref, double *u_trial_ref, double *u_grad_trial_ref, double *u_test_ref, double *u_grad_test_ref, double *mesh_trial_trace_ref, double *mesh_grad_trial_trace_ref, double *dS_ref, double *u_trial_trace_ref, double *u_grad_trial_trace_ref, double *u_test_trace_ref, double *u_grad_test_trace_ref, double *normal_ref, double *boundaryJac_ref, int nElements_global, int *u_l2g, double *u_dof, double *q_rho, double *elementJacobian_u_u, double *element_u, int eN)</argsstring>
        <name>calculateElementJacobian</name>
        <param>
          <type>double *</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_grad_trial_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_test_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_grad_test_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_test_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>u_l2g</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u_dof</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>q_rho</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>elementJacobian_u_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>element_u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eN</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/AddedMass.h" line="553" column="17" bodyfile="/Users/cekees/proteus/proteus/mprans/AddedMass.h" bodystart="553" bodyend="652"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1cpp_added_mass_1a0d37706ff2dce897f5fedcf95241eb48" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::calculateJacobian</definition>
        <argsstring>(xt::pyarray&lt; double &gt; &amp;mesh_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_dof, xt::pyarray&lt; int &gt; &amp;mesh_l2g, xt::pyarray&lt; double &gt; &amp;dV_ref, xt::pyarray&lt; double &gt; &amp;u_trial_ref, xt::pyarray&lt; double &gt; &amp;u_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;u_test_ref, xt::pyarray&lt; double &gt; &amp;u_grad_test_ref, xt::pyarray&lt; double &gt; &amp;mesh_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;dS_ref, xt::pyarray&lt; double &gt; &amp;u_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;u_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;u_test_trace_ref, xt::pyarray&lt; double &gt; &amp;u_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;normal_ref, xt::pyarray&lt; double &gt; &amp;boundaryJac_ref, int nElements_global, xt::pyarray&lt; int &gt; &amp;u_l2g, xt::pyarray&lt; double &gt; &amp;u_dof, xt::pyarray&lt; double &gt; &amp;q_rho, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_u_u, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_u_u, xt::pyarray&lt; double &gt; &amp;globalJacobian, int nExteriorElementBoundaries_global, xt::pyarray&lt; int &gt; &amp;exteriorElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryElementsArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryLocalElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_u_u)</argsstring>
        <name>calculateJacobian</name>
        <reimplements refid="classproteus_1_1cpp_added_mass__base_1a425eeae7c5a21a3090a0fa0da9e325f4">calculateJacobian</reimplements>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>u_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_rho</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_u_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_u_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>globalJacobian</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_u_u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/AddedMass.h" line="654" column="10" bodyfile="/Users/cekees/proteus/proteus/mprans/AddedMass.h" bodystart="654" bodyend="736"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>proteus::cppAddedMass_base</label>
        <link refid="classproteus_1_1cpp_added_mass__base"/>
      </node>
      <node id="1">
        <label>proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;</label>
        <link refid="classproteus_1_1cpp_added_mass"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>proteus::cppAddedMass_base</label>
        <link refid="classproteus_1_1cpp_added_mass__base"/>
      </node>
      <node id="1">
        <label>proteus::cppAddedMass&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;</label>
        <link refid="classproteus_1_1cpp_added_mass"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/cekees/proteus/proteus/mprans/AddedMass.h" line="100" column="3" bodyfile="/Users/cekees/proteus/proteus/mprans/AddedMass.h" bodystart="101" bodyend="737"/>
    <listofallmembers>
      <member refid="classproteus_1_1cpp_added_mass_1a81de5da1ef306bebc9c95e145ad08a64" prot="public" virt="non-virtual"><scope>proteus::cppAddedMass</scope><name>calculateElementJacobian</name></member>
      <member refid="classproteus_1_1cpp_added_mass_1a3e918affa49faa8d8ce22ede894bcdd0" prot="public" virt="non-virtual"><scope>proteus::cppAddedMass</scope><name>calculateElementResidual</name></member>
      <member refid="classproteus_1_1cpp_added_mass_1a0d37706ff2dce897f5fedcf95241eb48" prot="public" virt="virtual"><scope>proteus::cppAddedMass</scope><name>calculateJacobian</name></member>
      <member refid="classproteus_1_1cpp_added_mass_1a283616e84fbfec8f6584807f0782a3f3" prot="public" virt="virtual"><scope>proteus::cppAddedMass</scope><name>calculateResidual</name></member>
      <member refid="classproteus_1_1cpp_added_mass_1a15ca63e2efb0b4562466f8b0e0266233" prot="public" virt="non-virtual"><scope>proteus::cppAddedMass</scope><name>ck</name></member>
      <member refid="classproteus_1_1cpp_added_mass_1aaa9289e0911d0a05872a1045f3bea538" prot="public" virt="non-virtual"><scope>proteus::cppAddedMass</scope><name>cppAddedMass</name></member>
      <member refid="classproteus_1_1cpp_added_mass_1a2a634e7150ea111224bf650ea4c8132a" prot="public" virt="non-virtual"><scope>proteus::cppAddedMass</scope><name>evaluateCoefficients</name></member>
      <member refid="classproteus_1_1cpp_added_mass_1ae961a902da464f0bf135e0ada4073572" prot="public" virt="non-virtual"><scope>proteus::cppAddedMass</scope><name>exteriorNumericalDiffusiveFlux</name></member>
      <member refid="classproteus_1_1cpp_added_mass_1a86c1fae0d7186ec94408d685586016e5" prot="public" virt="non-virtual"><scope>proteus::cppAddedMass</scope><name>nDOF_test_X_trial_element</name></member>
      <member refid="classproteus_1_1cpp_added_mass__base_1ac1d88782e9f6a8309168eb9f1b2a70c5" prot="public" virt="virtual"><scope>proteus::cppAddedMass</scope><name>~cppAddedMass_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
