<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="AnalysisTools_8py" kind="file" language="Python">
    <compoundname>AnalysisTools.py</compoundname>
    <innernamespace refid="namespaceproteus_1_1AnalysisTools">proteus::AnalysisTools</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceproteus_1_1AnalysisTools" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>division</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>zip</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>range</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>past.utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>old_div</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>signal<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>sn</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#from<sp/>pylab<sp/>import<sp/>*</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>collections<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>cll</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>csv</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>proteus<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>WaveTools<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>WT</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>WaveTools<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>WT</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>math</highlight></codeline>
<codeline lineno="15"><highlight class="normal">cos<sp/>=<sp/>np.cos</highlight></codeline>
<codeline lineno="16"><highlight class="normal">sin<sp/>=<sp/>np.sin</highlight></codeline>
<codeline lineno="17"><highlight class="normal">sqrt<sp/>=<sp/>np.sqrt</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproteus_1_1AnalysisTools_1a89e67ea196e6e471f95d951fe57b8500" kindref="member">readProbeFile</ref>(filename):</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open<sp/>(filename,<sp/></highlight><highlight class="stringliteral">&apos;rb&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>csvfile:</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data=np.loadtxt(csvfile,<sp/>delimiter=</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,skiprows=1)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time=data[:,0]</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>data[:,1:]</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>csvfile.seek(0)</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/>csvfile.readline()</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/>header.replace(</highlight><highlight class="stringliteral">&quot;time&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/>header.replace(</highlight><highlight class="stringliteral">&quot;[&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/>header.replace(</highlight><highlight class="stringliteral">&quot;]&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/><sp/>header.replace(</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>header<sp/>=<sp/>header.split()</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probeType<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probex<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probey<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probez<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ii<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,len(header),4):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probeType.append(header[ii])</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probex.append(float(header[ii+1]))</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probey.append(float(header[ii+2]))</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probez.append(float(header[ii+3]))</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probeCoord<sp/>=<sp/>list(zip(np.array(probex),np.array(probey),np.array(probez)))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>datalist<sp/>=<sp/>[probeType,probeCoord,time,data]</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>datalist</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproteus_1_1AnalysisTools_1ab83f482d00fc2dda7966b672d003bff6" kindref="member">signalFilter</ref>(time,data,minfreq,maxfreq,costapCut<sp/>=<sp/>False):</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>old_div((time[-1]-time[0]),(len(time)-1))</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>doInterp<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>data1<sp/>=<sp/>np.zeros(data.shape,)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,len(time)):</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dt_temp<sp/>=<sp/>time[i]-time[i-1]</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>dt_temp!=dt:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>doInterp<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/>if(doInterp):</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jf_8h_1a665602667543592b4547008b72a9631b" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;Interpolating<sp/>series&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time_lin<sp/>=<sp/>np.linspace(time[0],time[-1],len(time))</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ii<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nprobes):</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1[:,ii]<sp/>=<sp/>np.interp(time_lin,time,data[:,ii])</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>time_lin</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>data1</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nprobes<sp/>=<sp/>len(data[0,:])</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1<sp/>=<sp/>np.interp(time_lin,time,data[:])</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>time<sp/>=<sp/>time_lin</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/>data1</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nprobes<sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>nfft<sp/>=<sp/>len(time)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>dt<sp/>=<sp/>old_div((time[-1]-time[0]),(len(time)-1))</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>freq<sp/>=<sp/>np.fft.fftfreq(nfft,dt)<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>np.where(freq<sp/>&gt;<sp/>maxfreq)[0]</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>i3<sp/>=<sp/>np.where(freq<sp/>&lt;<sp/>-maxfreq)[0]</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>i2a<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>i2b<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>jj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,len(freq)):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(freq[jj]<sp/>&lt;<sp/>minfreq<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>freq[jj]&gt;0):</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2a.append(jj)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(freq[jj]<sp/>&gt;<sp/>-minfreq<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>freq[jj]&lt;0):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2b.append(jj)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>band1<sp/>=<sp/><ref refid="jf_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i1)-<ref refid="group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(i2a)<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>band2<sp/>=<sp/><ref refid="jf_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i2b)<sp/>-<sp/><ref refid="group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(i3)<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>del<sp/>data1</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/>data1<sp/>=<sp/>np.zeros(data.shape)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>fft_x<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ii<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(<ref refid="group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(nprobes,1)):</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(nprobes<sp/>==<sp/>-1):</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x<sp/>=<sp/>np.fft.fft(data[:],nfft)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x[i1]<sp/>=<sp/>0.</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x[i2a]<sp/>=<sp/>0.</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x[i2b]<sp/>=<sp/>0.</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x[i3]<sp/>=<sp/>0.</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(costapCut):</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x[<ref refid="group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(i2a):<ref refid="jf_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i1)]<sp/>*=<sp/>WT.costap(band1,0.1)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x[<ref refid="group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(i3):<ref refid="jf_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i2b)]<sp/>*=<sp/>WT.costap(band2,0.1)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1[:]<sp/>=<sp/>np.fft.ifft(fft_x)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x<sp/>=<sp/>np.fft.fft(data[:,ii],nfft)</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x[i1,ii]<sp/>=<sp/>0.</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x[i2a,ii]<sp/>=<sp/>0.<sp/></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x[i2b,ii]<sp/>=<sp/>0.<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x[i3,ii]<sp/>=<sp/>0.<sp/></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(costapCut):</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x[<ref refid="group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(i2a):<ref refid="jf_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i1),ii]<sp/>*=<sp/>WT.costap(band1,0.1)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fft_x[<ref refid="group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(i3):<ref refid="jf_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(i2b),ii]<sp/>*=<sp/>WT.costap(band2,0.1)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data1[:,ii]<sp/>=<sp/>np.fft.ifft(fft_x)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data1</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproteus_1_1AnalysisTools_1a7a572381af8d54fc64661661be0a0aab" kindref="member">zeroCrossing</ref>(time,data,mode=&quot;mean&quot;,up=True,filt=True,minfreq=0.,maxfreq=1e300,costapCut=True):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>if(filt):</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/>=<sp/><ref refid="namespaceproteus_1_1AnalysisTools_1ab83f482d00fc2dda7966b672d003bff6" kindref="member">signalFilter</ref>(time,data,minfreq,maxfreq,costapCut)<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>trend<sp/>=<sp/>np.mean(data)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>data<sp/>=<sp/>data<sp/>-<sp/>trend</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>data_temp=np.zeros(data.shape,)</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>data_temp[0:-1]<sp/>=<sp/>data[1:]</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>zc<sp/>=<sp/>data_temp*data</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>zcPoints<sp/>=<sp/>np.where(zc&lt;0)[0]</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>if(up):</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(data[0]&lt;0):</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcPoints<sp/>=<sp/>zcPoints[::2]</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(data[0]&gt;0):</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcPoints<sp/>=<sp/>zcPoints[1::2]</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(data[0]&lt;0):</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcPoints<sp/>=<sp/>zcPoints[1::2]</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(data[0]&gt;0):</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zcPoints<sp/>=<sp/>zcPoints[::2]</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>zCH<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>period=[]</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>zi<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,len(zcPoints)):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i1<sp/>=<sp/>zcPoints[zi-1]</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i2<sp/>=<sp/>zcPoints[zi]</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>zCH.append(<ref refid="group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(data[i1:i2])-<ref refid="jf_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(data[i1:i2]))</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period.append(time[i2]-time[i1])</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>zCH<sp/>=<sp/>np.array(zCH)</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>period<sp/>=<sp/>np.array(period)</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>height<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>mode<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;mean&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>np.mean(zCH)</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period<sp/>=<sp/>np.mean(period)</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/><ref refid="namespaceproteus_1_1iproteus_1aa7af36d0ca438376f93f2b4691a884a3" kindref="member">type</ref>(mode)<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;int&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>np.sort(zCH)</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ii<sp/>=<sp/>len(height)<sp/>-<sp/>old_div(float(len(height)),float(mode))</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/>=<sp/>np.mean(height[ii:])</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>period<sp/>=<sp/>np.mean(period)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jf_8h_1a665602667543592b4547008b72a9631b" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;mode<sp/>must<sp/>be<sp/>either<sp/>&apos;period&apos;,<sp/>&apos;mean&apos;<sp/>or<sp/>an<sp/>integer<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[period,height]</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproteus_1_1AnalysisTools_1a1d7619f95c07db0d621b859b9de35d95" kindref="member">pressureToHeight</ref>(data,Z,depth,wavelength,rho,g):</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>k<sp/>=<sp/>2*math.pi/wavelength</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>Kp<sp/>=<sp/>rho*g*cosh(k*(depth+Z))/cosh(k*depth)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>old_div(data,Kp)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproteus_1_1AnalysisTools_1a46f6db8a79a71a79bea28fb6940fb5c0" kindref="member">ReflStat</ref>(H1,H2,H3,dx,wavelength):</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>D<sp/>=<sp/>2*math.pi*dx/wavelength</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>Amp<sp/>=np.array([old_div(H1,2.),old_div(H2,2.),old_div(H3,2.)])</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>A1<sp/>=<sp/>Amp[0]*Amp[0]</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>A2<sp/>=<sp/>Amp[1]*Amp[1]</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>A3<sp/>=<sp/>Amp[2]*Amp[2]</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>Lamda<sp/>=<sp/>old_div((A1<sp/>+<sp/>A3<sp/>-<sp/>2.*A2*<ref refid="namespaceproteus_1_1AnalysisTools_1aadff3106b5192c04163a4a3adc50f975" kindref="member">cos</ref>(2*D)),(4.*<ref refid="namespaceproteus_1_1AnalysisTools_1adb22c8a0098552b9d8c9c060de23ebf1" kindref="member">sin</ref>(D)*<ref refid="namespaceproteus_1_1AnalysisTools_1adb22c8a0098552b9d8c9c060de23ebf1" kindref="member">sin</ref>(D)))</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>Gamma<sp/>=<sp/>0.5*<ref refid="namespaceproteus_1_1AnalysisTools_1a1b0cb6ec0a08405728cb648dd4589f26" kindref="member">sqrt</ref>(</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(old_div((2*A2-A1-A3),(2.*<ref refid="namespaceproteus_1_1AnalysisTools_1adb22c8a0098552b9d8c9c060de23ebf1" kindref="member">sin</ref>(D)*<ref refid="namespaceproteus_1_1AnalysisTools_1adb22c8a0098552b9d8c9c060de23ebf1" kindref="member">sin</ref>(D))))**2+(old_div((A1-A3),<ref refid="namespaceproteus_1_1AnalysisTools_1adb22c8a0098552b9d8c9c060de23ebf1" kindref="member">sin</ref>(2*D)))**2)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>Hi<sp/>=<sp/><ref refid="namespaceproteus_1_1AnalysisTools_1a1b0cb6ec0a08405728cb648dd4589f26" kindref="member">sqrt</ref>(Lamda<sp/>+<sp/>Gamma)<sp/>+<sp/><ref refid="namespaceproteus_1_1AnalysisTools_1a1b0cb6ec0a08405728cb648dd4589f26" kindref="member">sqrt</ref>(Lamda<sp/>-<sp/>Gamma)</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>Hr<sp/>=<sp/><ref refid="namespaceproteus_1_1AnalysisTools_1a1b0cb6ec0a08405728cb648dd4589f26" kindref="member">sqrt</ref>(Lamda<sp/>+<sp/>Gamma)<sp/>-<sp/><ref refid="namespaceproteus_1_1AnalysisTools_1a1b0cb6ec0a08405728cb648dd4589f26" kindref="member">sqrt</ref>(Lamda<sp/>-<sp/>Gamma)</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>Rf<sp/>=<sp/>old_div(Hr,(Hi+1e-15))</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>[Hi,Hr,Rf]</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>i3<sp/>=<sp/>np.where(freq[np.where(freq&lt;0)[0]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>i4<sp/>=<sp/>np.where(freq[np.where(freq&lt;0)[0]]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>WT.costap(len(fft_x),0.1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>return<sp/>[time_lin,data1]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="AnalysisTools.py"/>
  </compounddef>
</doxygen>
