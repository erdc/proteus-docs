<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d8/dd9/namespaceproteus" kind="namespace" language="Python">
    <compoundname>proteus</compoundname>
    <innerclass refid="d5/d33/structproteus_1_1arguments__dict" prot="public">proteus::arguments_dict</innerclass>
    <innerclass refid="d8/d66/classproteus_1_1cADR" prot="public">proteus::cADR</innerclass>
    <innerclass refid="d2/d20/classproteus_1_1cADR__base" prot="public">proteus::cADR_base</innerclass>
    <innerclass refid="d4/db5/classproteus_1_1CLSVOF" prot="public">proteus::CLSVOF</innerclass>
    <innerclass refid="d9/d46/classproteus_1_1CLSVOF__base" prot="public">proteus::CLSVOF_base</innerclass>
    <innerclass refid="d3/d40/classproteus_1_1cppAddedMass" prot="public">proteus::cppAddedMass</innerclass>
    <innerclass refid="dc/d9b/classproteus_1_1cppAddedMass__base" prot="public">proteus::cppAddedMass_base</innerclass>
    <innerclass refid="d7/d1c/classproteus_1_1cppHsuSedStress" prot="public">proteus::cppHsuSedStress</innerclass>
    <innerclass refid="d7/d50/classproteus_1_1cppMCorr3P" prot="public">proteus::cppMCorr3P</innerclass>
    <innerclass refid="dd/dd5/classproteus_1_1cppMCorr3P__base" prot="public">proteus::cppMCorr3P_base</innerclass>
    <innerclass refid="df/d72/classproteus_1_1cppNCLS3P" prot="public">proteus::cppNCLS3P</innerclass>
    <innerclass refid="d8/d55/classproteus_1_1cppNCLS3P__base" prot="public">proteus::cppNCLS3P_base</innerclass>
    <innerclass refid="d9/d8d/classproteus_1_1cppPres" prot="public">proteus::cppPres</innerclass>
    <innerclass refid="de/d5a/classproteus_1_1cppPres__base" prot="public">proteus::cppPres_base</innerclass>
    <innerclass refid="d9/d23/classproteus_1_1cppPresInc" prot="public">proteus::cppPresInc</innerclass>
    <innerclass refid="df/d62/classproteus_1_1cppPresInc__base" prot="public">proteus::cppPresInc_base</innerclass>
    <innerclass refid="d3/d81/classproteus_1_1cppPresInit" prot="public">proteus::cppPresInit</innerclass>
    <innerclass refid="d8/d15/classproteus_1_1cppPresInit__base" prot="public">proteus::cppPresInit_base</innerclass>
    <innerclass refid="d8/ded/classproteus_1_1cppRANS3PF" prot="public">proteus::cppRANS3PF</innerclass>
    <innerclass refid="d8/dd7/classproteus_1_1cppRANS3PF2D" prot="public">proteus::cppRANS3PF2D</innerclass>
    <innerclass refid="dc/d96/classproteus_1_1cppRANS3PF2D__base" prot="public">proteus::cppRANS3PF2D_base</innerclass>
    <innerclass refid="dc/de2/classproteus_1_1cppRANS3PF__base" prot="public">proteus::cppRANS3PF_base</innerclass>
    <innerclass refid="d9/d08/classproteus_1_1cppRANS3PSed" prot="public">proteus::cppRANS3PSed</innerclass>
    <innerclass refid="d3/d4e/classproteus_1_1cppRANS3PSed2D" prot="public">proteus::cppRANS3PSed2D</innerclass>
    <innerclass refid="d6/ddf/classproteus_1_1cppRANS3PSed2D__base" prot="public">proteus::cppRANS3PSed2D_base</innerclass>
    <innerclass refid="da/d9d/classproteus_1_1cppRANS3PSed__base" prot="public">proteus::cppRANS3PSed_base</innerclass>
    <innerclass refid="dd/df9/classproteus_1_1cppVOF" prot="public">proteus::cppVOF</innerclass>
    <innerclass refid="d7/d0f/classproteus_1_1cppVOF3P__base" prot="public">proteus::cppVOF3P_base</innerclass>
    <innerclass refid="de/ded/classproteus_1_1cppVOS" prot="public">proteus::cppVOS</innerclass>
    <innerclass refid="d4/dc9/classproteus_1_1cppVOS3P__base" prot="public">proteus::cppVOS3P_base</innerclass>
    <innerclass refid="d0/d69/classproteus_1_1Dissipation" prot="public">proteus::Dissipation</innerclass>
    <innerclass refid="db/d66/classproteus_1_1Dissipation2D" prot="public">proteus::Dissipation2D</innerclass>
    <innerclass refid="d9/d0a/classproteus_1_1Dissipation2D__base" prot="public">proteus::Dissipation2D_base</innerclass>
    <innerclass refid="d1/dd6/classproteus_1_1Dissipation__base" prot="public">proteus::Dissipation_base</innerclass>
    <innerclass refid="d6/ddb/classproteus_1_1ElastoPlastic" prot="public">proteus::ElastoPlastic</innerclass>
    <innerclass refid="d9/df5/classproteus_1_1ElastoPlastic__base" prot="public">proteus::ElastoPlastic_base</innerclass>
    <innerclass refid="d1/d17/classproteus_1_1GN__SW2DCV" prot="public">proteus::GN_SW2DCV</innerclass>
    <innerclass refid="d1/d7d/classproteus_1_1GN__SW2DCV__base" prot="public">proteus::GN_SW2DCV_base</innerclass>
    <innerclass refid="df/db9/classproteus_1_1Kappa" prot="public">proteus::Kappa</innerclass>
    <innerclass refid="dc/def/classproteus_1_1Kappa2D" prot="public">proteus::Kappa2D</innerclass>
    <innerclass refid="df/d32/classproteus_1_1Kappa2D__base" prot="public">proteus::Kappa2D_base</innerclass>
    <innerclass refid="d7/df7/classproteus_1_1Kappa__base" prot="public">proteus::Kappa_base</innerclass>
    <innerclass refid="df/dc0/classproteus_1_1MCorr" prot="public">proteus::MCorr</innerclass>
    <innerclass refid="d3/d18/classproteus_1_1MCorr__base" prot="public">proteus::MCorr_base</innerclass>
    <innerclass refid="d8/dfa/classproteus_1_1MoveMesh" prot="public">proteus::MoveMesh</innerclass>
    <innerclass refid="d8/d13/classproteus_1_1MoveMesh2D" prot="public">proteus::MoveMesh2D</innerclass>
    <innerclass refid="d0/d8d/classproteus_1_1MoveMesh2D__base" prot="public">proteus::MoveMesh2D_base</innerclass>
    <innerclass refid="d6/d69/classproteus_1_1MoveMesh__base" prot="public">proteus::MoveMesh_base</innerclass>
    <innerclass refid="db/d75/classproteus_1_1NCLS" prot="public">proteus::NCLS</innerclass>
    <innerclass refid="d0/d4c/classproteus_1_1NCLS__base" prot="public">proteus::NCLS_base</innerclass>
    <innerclass refid="dc/dd7/classproteus_1_1RANS2P" prot="public">proteus::RANS2P</innerclass>
    <innerclass refid="dc/d3b/classproteus_1_1RANS2P2D" prot="public">proteus::RANS2P2D</innerclass>
    <innerclass refid="df/dde/classproteus_1_1RANS2P2D__base" prot="public">proteus::RANS2P2D_base</innerclass>
    <innerclass refid="d3/d22/classproteus_1_1RANS2P__base" prot="public">proteus::RANS2P_base</innerclass>
    <innerclass refid="da/d1a/classproteus_1_1RANS2P__IB" prot="public">proteus::RANS2P_IB</innerclass>
    <innerclass refid="d7/df0/classproteus_1_1RANS2P__IB__base" prot="public">proteus::RANS2P_IB_base</innerclass>
    <innerclass refid="de/de0/classproteus_1_1RDLS" prot="public">proteus::RDLS</innerclass>
    <innerclass refid="dc/d14/classproteus_1_1RDLS__base" prot="public">proteus::RDLS_base</innerclass>
    <innerclass refid="da/d60/classproteus_1_1Richards" prot="public">proteus::Richards</innerclass>
    <innerclass refid="d1/d9d/classproteus_1_1Richards__base" prot="public">proteus::Richards_base</innerclass>
    <innerclass refid="df/d94/classproteus_1_1SparsityInfo" prot="public">proteus::SparsityInfo</innerclass>
    <innerclass refid="dc/dcf/classproteus_1_1SW2D" prot="public">proteus::SW2D</innerclass>
    <innerclass refid="d5/dcb/classproteus_1_1SW2D__base" prot="public">proteus::SW2D_base</innerclass>
    <innerclass refid="db/d49/classproteus_1_1SW2DCV" prot="public">proteus::SW2DCV</innerclass>
    <innerclass refid="dd/d18/classproteus_1_1SW2DCV__base" prot="public">proteus::SW2DCV_base</innerclass>
    <innerclass refid="da/dab/classproteus_1_1throwing__map" prot="public">proteus::throwing_map</innerclass>
    <innerclass refid="db/d80/classproteus_1_1VOF" prot="public">proteus::VOF</innerclass>
    <innerclass refid="df/d6f/classproteus_1_1VOF__base" prot="public">proteus::VOF_base</innerclass>
    <innernamespace refid="da/de6/namespaceproteus_1_1ADR">proteus::ADR</innernamespace>
    <innernamespace refid="d7/df2/namespaceproteus_1_1AnalysisTools">proteus::AnalysisTools</innernamespace>
    <innernamespace refid="d1/dc2/namespaceproteus_1_1AnalyticalSolutions">proteus::AnalyticalSolutions</innernamespace>
    <innernamespace refid="d6/df4/namespaceproteus_1_1Archiver">proteus::Archiver</innernamespace>
    <innernamespace refid="d2/db0/namespaceproteus_1_1AuxiliaryVariables">proteus::AuxiliaryVariables</innernamespace>
    <innernamespace refid="d2/ddf/namespaceproteus_1_1BoundaryConditions">proteus::BoundaryConditions</innernamespace>
    <innernamespace refid="da/d52/namespaceproteus_1_1Comm">proteus::Comm</innernamespace>
    <innernamespace refid="da/d81/namespaceproteus_1_1config">proteus::config</innernamespace>
    <innernamespace refid="d0/d93/namespaceproteus_1_1Context">proteus::Context</innernamespace>
    <innernamespace refid="dd/d67/namespaceproteus_1_1default__n">proteus::default_n</innernamespace>
    <innernamespace refid="d8/d70/namespaceproteus_1_1default__p">proteus::default_p</innernamespace>
    <innernamespace refid="de/df8/namespaceproteus_1_1default__s">proteus::default_s</innernamespace>
    <innernamespace refid="d0/d55/namespaceproteus_1_1default__so">proteus::default_so</innernamespace>
    <innernamespace refid="d5/de0/namespaceproteus_1_1defaults">proteus::defaults</innernamespace>
    <innernamespace refid="d7/d90/namespaceproteus_1_1deim__utils">proteus::deim_utils</innernamespace>
    <innernamespace refid="da/de0/namespaceproteus_1_1detail">proteus::detail</innernamespace>
    <innernamespace refid="d9/dc0/namespaceproteus_1_1DiagUtils">proteus::DiagUtils</innernamespace>
    <innernamespace refid="de/dee/namespaceproteus_1_1Domain">proteus::Domain</innernamespace>
    <innernamespace refid="d8/dd9/namespaceproteus_1_1EGeometry">proteus::EGeometry</innernamespace>
    <innernamespace refid="d9/db4/namespaceproteus_1_1elastoplastic">proteus::elastoplastic</innernamespace>
    <innernamespace refid="d1/df5/namespaceproteus_1_1ErrorEstimators">proteus::ErrorEstimators</innernamespace>
    <innernamespace refid="da/dd2/namespaceproteus_1_1FemTools">proteus::FemTools</innernamespace>
    <innernamespace refid="d3/d51/namespaceproteus_1_1fenton">proteus::fenton</innernamespace>
    <innernamespace refid="da/d84/namespaceproteus_1_1Gauges">proteus::Gauges</innernamespace>
    <innernamespace refid="d8/d29/namespaceproteus_1_1InputTranslators">proteus::InputTranslators</innernamespace>
    <innernamespace refid="d4/d88/namespaceproteus_1_1iproteus">proteus::iproteus</innernamespace>
    <innernamespace refid="d6/d76/namespaceproteus_1_1LatexReport">proteus::LatexReport</innernamespace>
    <innernamespace refid="d9/dca/namespaceproteus_1_1LinearAlgebraTools">proteus::LinearAlgebraTools</innernamespace>
    <innernamespace refid="dc/d03/namespaceproteus_1_1LinearSolvers">proteus::LinearSolvers</innernamespace>
    <innernamespace refid="d1/d9c/namespaceproteus_1_1mbd">proteus::mbd</innernamespace>
    <innernamespace refid="d0/d7a/namespaceproteus_1_1MeshAdaptPUMI">proteus::MeshAdaptPUMI</innernamespace>
    <innernamespace refid="db/d99/namespaceproteus_1_1MeshTools">proteus::MeshTools</innernamespace>
    <innernamespace refid="d1/d5a/namespaceproteus_1_1mprans">proteus::mprans</innernamespace>
    <innernamespace refid="de/ddd/namespaceproteus_1_1NonlinearSolvers">proteus::NonlinearSolvers</innernamespace>
    <innernamespace refid="d7/d59/namespaceproteus_1_1Norms">proteus::Norms</innernamespace>
    <innernamespace refid="de/dcd/namespaceproteus_1_1NumericalFlux">proteus::NumericalFlux</innernamespace>
    <innernamespace refid="d1/d96/namespaceproteus_1_1NumericalSolution">proteus::NumericalSolution</innernamespace>
    <innernamespace refid="d9/d8e/namespaceproteus_1_1ObjectiveFunctions">proteus::ObjectiveFunctions</innernamespace>
    <innernamespace refid="d7/db9/namespaceproteus_1_1Optimizers">proteus::Optimizers</innernamespace>
    <innernamespace refid="da/d79/namespaceproteus_1_1PostProcessingTools">proteus::PostProcessingTools</innernamespace>
    <innernamespace refid="d6/da7/namespaceproteus_1_1Profiling">proteus::Profiling</innernamespace>
    <innernamespace refid="d9/d6a/namespaceproteus_1_1Quadrature">proteus::Quadrature</innernamespace>
    <innernamespace refid="d5/dea/namespaceproteus_1_1RefUtils">proteus::RefUtils</innernamespace>
    <innernamespace refid="d5/df8/namespaceproteus_1_1richards">proteus::richards</innernamespace>
    <innernamespace refid="db/da7/namespaceproteus_1_1ShockCapturing">proteus::ShockCapturing</innernamespace>
    <innernamespace refid="d7/def/namespaceproteus_1_1SimTools">proteus::SimTools</innernamespace>
    <innernamespace refid="d8/dc9/namespaceproteus_1_1SpatialTools">proteus::SpatialTools</innernamespace>
    <innernamespace refid="dd/d26/namespaceproteus_1_1SplitOperator">proteus::SplitOperator</innernamespace>
    <innernamespace refid="dc/da8/namespaceproteus_1_1StepControl">proteus::StepControl</innernamespace>
    <innernamespace refid="da/dfd/namespaceproteus_1_1SubgridError">proteus::SubgridError</innernamespace>
    <innernamespace refid="d4/d48/namespaceproteus_1_1SubsurfaceTransportCoefficients">proteus::SubsurfaceTransportCoefficients</innernamespace>
    <innernamespace refid="d3/d62/namespaceproteus_1_1SWFlow">proteus::SWFlow</innernamespace>
    <innernamespace refid="d8/d34/namespaceproteus_1_1test__utils">proteus::test_utils</innernamespace>
    <innernamespace refid="dd/d20/namespaceproteus_1_1tests">proteus::tests</innernamespace>
    <innernamespace refid="d1/d73/namespaceproteus_1_1TimeIntegration">proteus::TimeIntegration</innernamespace>
    <innernamespace refid="d7/d8b/namespaceproteus_1_1Transport">proteus::Transport</innernamespace>
    <innernamespace refid="d7/ded/namespaceproteus_1_1TransportCoefficients">proteus::TransportCoefficients</innernamespace>
    <innernamespace refid="db/d06/namespaceproteus_1_1TwophaseDarcyCoefficients">proteus::TwophaseDarcyCoefficients</innernamespace>
    <innernamespace refid="d3/d64/namespaceproteus_1_1TwoPhaseFlow">proteus::TwoPhaseFlow</innernamespace>
    <innernamespace refid="d8/dc5/namespaceproteus_1_1Viewers">proteus::Viewers</innernamespace>
    <innernamespace refid="d1/d83/namespaceproteus_1_1WaveTools">proteus::WaveTools</innernamespace>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="d8/dd9/namespaceproteus_1a09a5c13a2cdadf8ef88af93749698626" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>int</type>
            <declname>nSpace</declname>
            <defname>nSpace</defname>
          </param>
          <param>
            <type>int</type>
            <declname>nP</declname>
            <defname>nP</defname>
          </param>
          <param>
            <type>int</type>
            <declname>nQ</declname>
            <defname>nQ</defname>
          </param>
          <param>
            <type>int</type>
            <declname>nEBQ</declname>
            <defname>nEBQ</defname>
          </param>
        </templateparamlist>
        <type><ref refid="d2/d65/classequivalent__polynomials_1_1GeneralizedFunctions__mix" kindref="compound">equivalent_polynomials::GeneralizedFunctions_mix</ref>&lt; nSpace, nP, nQ, nEBQ &gt;</type>
        <definition>using proteus.GeneralizedFunctions = typedef equivalent_polynomials::GeneralizedFunctions_mix&lt;nSpace, nP, nQ, nEBQ&gt;</definition>
        <argsstring></argsstring>
        <name>GeneralizedFunctions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ADR.h" line="19" column="3" bodyfile="ADR.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/dd9/namespaceproteus_1ab65068873330f0fb454415b1aa99dae0" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class K</type>
          </param>
          <param>
            <type>class <ref refid="de/d5b/Headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="da/dab/classproteus_1_1throwing__map" kindref="compound">throwing_map</ref>&lt; K, xt::pyarray&lt; <ref refid="de/d5b/Headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref> &gt; &gt;</type>
        <definition>using proteus.pyarray_dict = typedef throwing_map&lt;K, xt::pyarray&lt;T&gt; &gt;</definition>
        <argsstring></argsstring>
        <name>pyarray_dict</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/ArgumentsDict.h" line="64" column="5" bodyfile="mprans/ArgumentsDict.h" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/dd9/namespaceproteus_1aa60629a6db41b5253d6baba6cbd90a43" prot="public" static="no">
        <templateparamlist>
          <param>
            <type>class K</type>
          </param>
          <param>
            <type>class <ref refid="de/d5b/Headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref></type>
          </param>
        </templateparamlist>
        <type><ref refid="da/dab/classproteus_1_1throwing__map" kindref="compound">throwing_map</ref>&lt; K, <ref refid="de/d5b/Headers_8h_1a38fec5c94a02f67ba7bf45025dd3ac80" kindref="member">T</ref> &gt;</type>
        <definition>using proteus.scalar_dict = typedef throwing_map&lt;K, T&gt;</definition>
        <argsstring></argsstring>
        <name>scalar_dict</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/ArgumentsDict.h" line="67" column="5" bodyfile="mprans/ArgumentsDict.h" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="d8/dd9/namespaceproteus_1ae7e3f50ca7449e2044827dad05c7b694" prot="public" static="no">
        <type><ref refid="d7/d1c/classproteus_1_1cppHsuSedStress" kindref="compound">cppHsuSedStress</ref>&lt; 2 &gt;</type>
        <definition>typedef cppHsuSedStress&lt;2&gt; proteus.cppHsuSedStress2D</definition>
        <argsstring></argsstring>
        <name>cppHsuSedStress2D</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SedClosure.h" line="948" column="27" bodyfile="mprans/SedClosure.h" bodystart="948" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="d8/dd9/namespaceproteus_1a30f9eb214ad12fc533254dd736c4d470" prot="private" static="no" mutable="no">
        <type></type>
        <definition>proteus.__path__</definition>
        <argsstring></argsstring>
        <name>__path__</name>
        <initializer>=  pkgutil.extend_path(__path__, __name__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="__init__.py" line="10" column="1" bodyfile="__init__.py" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/dd9/namespaceproteus_1a112b3b05474e260a8d083a0177373472" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string proteus.__version__</definition>
        <argsstring></argsstring>
        <name>__version__</name>
        <initializer>=  &apos;1.8.0&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="__init__.py" line="12" column="1" bodyfile="__init__.py" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/dd9/namespaceproteus_1a57606a7ab7c6dd39e5b2eed5e1f30c01" prot="private" static="no" mutable="no">
        <type>list</type>
        <definition>list proteus.__all__</definition>
        <argsstring></argsstring>
        <name>__all__</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="__init__.py" line="14" column="1" bodyfile="__init__.py" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/dd9/namespaceproteus_1ad79a14ebc87fb2afa126d9915c01519f" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double proteus.PI_</definition>
        <argsstring></argsstring>
        <name>PI_</name>
        <initializer>= M_PI</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="10" column="15" bodyfile="WaveTools.h" bodystart="10" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/dd9/namespaceproteus_1aade886b8174580e45bfdf216cfb555ca" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double proteus.Pi2_</definition>
        <argsstring></argsstring>
        <name>Pi2_</name>
        <initializer>= (2.*<ref refid="d8/dd9/namespaceproteus_1ad79a14ebc87fb2afa126d9915c01519f" kindref="member">PI_</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="11" column="15" bodyfile="WaveTools.h" bodystart="11" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/dd9/namespaceproteus_1a9608edae5aa1560868877f801d6a5938" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double proteus.Pi2inv_</definition>
        <argsstring></argsstring>
        <name>Pi2inv_</name>
        <initializer>= (1./<ref refid="d8/dd9/namespaceproteus_1aade886b8174580e45bfdf216cfb555ca" kindref="member">Pi2_</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="12" column="15" bodyfile="WaveTools.h" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/dd9/namespaceproteus_1add2403c05f877d9daa95af7d2806da78" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double proteus.Pihalf_</definition>
        <argsstring></argsstring>
        <name>Pihalf_</name>
        <initializer>= (0.5*<ref refid="d8/dd9/namespaceproteus_1ad79a14ebc87fb2afa126d9915c01519f" kindref="member">PI_</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="13" column="15" bodyfile="WaveTools.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/dd9/namespaceproteus_1a2c4cf1a1a10978b1b3702ef5009dcc32" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double proteus.Pihalfinv_</definition>
        <argsstring></argsstring>
        <name>Pihalfinv_</name>
        <initializer>= (1./<ref refid="d8/dd9/namespaceproteus_1add2403c05f877d9daa95af7d2806da78" kindref="member">Pihalf_</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="14" column="15" bodyfile="WaveTools.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/dd9/namespaceproteus_1aaf2408dbd84953a4587583c62bfb9edf" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double proteus.Pi03_</definition>
        <argsstring></argsstring>
        <name>Pi03_</name>
        <initializer>= (0.3*<ref refid="d8/dd9/namespaceproteus_1ad79a14ebc87fb2afa126d9915c01519f" kindref="member">PI_</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="15" column="15" bodyfile="WaveTools.h" bodystart="15" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/dd9/namespaceproteus_1a329f419cdaa1403fc9ed24b4c33d5a05" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double proteus.Pi07_</definition>
        <argsstring></argsstring>
        <name>Pi07_</name>
        <initializer>=  (0.7*<ref refid="d8/dd9/namespaceproteus_1ad79a14ebc87fb2afa126d9915c01519f" kindref="member">PI_</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="16" column="15" bodyfile="WaveTools.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="d8/dd9/namespaceproteus_1a93746ce06487fdb0c287e2efd7aa7a56" prot="public" static="no" mutable="no">
        <type>const double</type>
        <definition>const double proteus.Pi17_</definition>
        <argsstring></argsstring>
        <name>Pi17_</name>
        <initializer>=  (1.7*<ref refid="d8/dd9/namespaceproteus_1ad79a14ebc87fb2afa126d9915c01519f" kindref="member">PI_</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="17" column="15" bodyfile="WaveTools.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ae16afa4435ba85bac15d9bd0481a907b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def proteus.test</definition>
        <argsstring>(verbose=False, cleanup=True)</argsstring>
        <name>test</name>
        <param>
          <type>verbose</type>
          <defname>verbose</defname>
          <defval>False</defval>
        </param>
        <param>
          <type>cleanup</type>
          <defname>cleanup</defname>
          <defval>True</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><verbatim>Run all proteus tests

Parameters
----------
verbose : bool
          Print verbose testing information
cleanup : bool
          Remove the temporary directory containing output
</verbatim> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="__init__.py" line="72" column="1" bodyfile="__init__.py" bodystart="72" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a8beab52f8c78ed6742c17ac28d5ac5cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d2/d20/classproteus_1_1cADR__base" kindref="compound">cADR_base</ref> *</type>
        <definition>cADR_base* proteus::newADR</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newADR</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ADR.h" line="1715" column="20" bodyfile="ADR.h" bodystart="1715" bodyend="1739"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a7f339d04c241f3cba0a6f00b4b089078" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/df5/classproteus_1_1ElastoPlastic__base" kindref="compound">ElastoPlastic_base</ref> *</type>
        <definition>ElastoPlastic_base* proteus::newElastoPlastic</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newElastoPlastic</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="elastoplastic/ElastoPlastic.h" line="1806" column="31" bodyfile="elastoplastic/ElastoPlastic.h" bodystart="1806" bodyend="1821"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a0e6a3981097de3d4170c461bcd2df57f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Model_Base</type>
          </param>
          <param>
            <type>template&lt; class CompKernelType, class CompKernelType_v, int nSpace, int nQuadraturePoints_element, int nDOF_mesh_trial_element, int nDOF_trial_element, int nDOF_test_element, int nDOF_v_trial_element, int nDOF_v_test_element, int nQuadraturePoints_elementBoundary &gt; class</type>
            <declname>ModelTemplate</declname>
            <defname>ModelTemplate</defname>
          </param>
          <param>
            <type>template&lt; int nSpace, int nDOF_mesh_trial_element, int nDOF_trial_element, int nDOF_test_element &gt; class</type>
            <declname>CompKernelTemplate_v</declname>
            <defname>CompKernelTemplate_v</defname>
          </param>
          <param>
            <type>template&lt; int nSpace, int nDOF_mesh_trial_element, int nDOF_v_trial_element, int nDOF_v_test_element &gt; class</type>
            <declname>CompKernelTemplate</declname>
            <defname>CompKernelTemplate</defname>
          </param>
        </templateparamlist>
        <type>Model_Base *</type>
        <definition>Model_Base* proteus::chooseAndAllocateDiscretization</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nDOF_v_trial_elementIn, int nDOF_v_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>chooseAndAllocateDiscretization</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_v_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_v_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MixedModelFactory.h" line="48" column="14" bodyfile="MixedModelFactory.h" bodystart="48" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1aa081c1fed534df492023f0a486d093c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Model_Base</type>
          </param>
          <param>
            <type>template&lt; class CompKernelType, class CompKernelType_v, int nSpace, int nQuadraturePoints_element, int nDOF_mesh_trial_element, int nDOF_trial_element, int nDOF_test_element, int nDOF_v_trial_element, int nDOF_v_test_element, int nQuadraturePoints_elementBoundary &gt; class</type>
            <declname>ModelTemplate</declname>
            <defname>ModelTemplate</defname>
          </param>
          <param>
            <type>template&lt; int nSpace, int nDOF_mesh_trial_element, int nDOF_trial_element, int nDOF_test_element &gt; class</type>
            <declname>CompKernelTemplate</declname>
            <defname>CompKernelTemplate</defname>
          </param>
          <param>
            <type>template&lt; int nSpace, int nDOF_mesh_trial_element, int nDOF_v_trial_element, int nDOF_v_test_element &gt; class</type>
            <declname>CompKernelTemplate_v</declname>
            <defname>CompKernelTemplate_v</defname>
          </param>
        </templateparamlist>
        <type>Model_Base *</type>
        <definition>Model_Base* proteus::chooseAndAllocateDiscretization2D</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nDOF_v_trial_elementIn, int nDOF_v_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>chooseAndAllocateDiscretization2D</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_v_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_v_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MixedModelFactory.h" line="309" column="14" bodyfile="MixedModelFactory.h" bodystart="309" bodyend="521"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a02e6dbfb100ade25d7e97bf4ca0f071f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Model_Base</type>
          </param>
          <param>
            <type>template&lt; class CompKernelType, int nSpace, int nQuadraturePoints_element, int nDOF_mesh_trial_element, int nDOF_trial_element, int nDOF_test_element, int nQuadraturePoints_elementBoundary &gt; class</type>
            <declname>ModelTemplate</declname>
            <defname>ModelTemplate</defname>
          </param>
          <param>
            <type>template&lt; int nSpace, int nDOF_mesh_trial_element, int nDOF_trial_element, int nDOF_test_element &gt; class</type>
            <declname>CompKernelTemplate</declname>
            <defname>CompKernelTemplate</defname>
          </param>
        </templateparamlist>
        <type>Model_Base *</type>
        <definition>Model_Base* proteus::chooseAndAllocateDiscretization</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>chooseAndAllocateDiscretization</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ModelFactory.h" line="35" column="14" bodyfile="ModelFactory.h" bodystart="35" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a3da89c692e9a81759aeb9efa7f92cccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Model_Base</type>
          </param>
          <param>
            <type>template&lt; class CompKernelType, int nSpace, int nQuadraturePoints_element, int nDOF_mesh_trial_element, int nDOF_trial_element, int nDOF_test_element, int nQuadraturePoints_elementBoundary &gt; class</type>
            <declname>ModelTemplate</declname>
            <defname>ModelTemplate</defname>
          </param>
          <param>
            <type>template&lt; int nSpace, int nDOF_mesh_trial_element, int nDOF_trial_element, int nDOF_test_element &gt; class</type>
            <declname>CompKernelTemplate</declname>
            <defname>CompKernelTemplate</defname>
          </param>
        </templateparamlist>
        <type>Model_Base *</type>
        <definition>Model_Base* proteus::chooseAndAllocateDiscretization2D</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>chooseAndAllocateDiscretization2D</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="ModelFactory.h" line="225" column="14" bodyfile="ModelFactory.h" bodystart="225" bodyend="485"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a1e946eaf50f2f25f664f85a47db114a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d9b/classproteus_1_1cppAddedMass__base" kindref="compound">cppAddedMass_base</ref> *</type>
        <definition>cppAddedMass_base* proteus::newAddedMass</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newAddedMass</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/AddedMass.h" line="739" column="28" bodyfile="mprans/AddedMass.h" bodystart="739" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a013ffd89544923edb6b027f740508bf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class M</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void proteus::bind_throwing_map</definition>
        <argsstring>(py::class_&lt; M &gt; &amp;cl, const std::string &amp;name)</argsstring>
        <name>bind_throwing_map</name>
        <param>
          <type>py::class_&lt; M &gt; &amp;</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/ArgumentsDict.cpp" line="55" column="10" bodyfile="mprans/ArgumentsDict.cpp" bodystart="55" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1af151db3eaea8ccb1c6ca96a34f3eb766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::bind_arguments_dict</definition>
        <argsstring>(py::class_&lt; arguments_dict &gt; &amp;cl, const std::string &amp;name)</argsstring>
        <name>bind_arguments_dict</name>
        <param>
          <type>py::class_&lt; <ref refid="d5/d33/structproteus_1_1arguments__dict" kindref="compound">arguments_dict</ref> &gt; &amp;</type>
          <declname>cl</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/ArgumentsDict.cpp" line="100" column="10" bodyfile="mprans/ArgumentsDict.cpp" bodystart="100" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1aa7e29124787db197b0bb3f13861cd5c6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::heaviside</definition>
        <argsstring>(const double &amp;z)</argsstring>
        <name>heaviside</name>
        <param>
          <type>const double &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/CLSVOF.h" line="20" column="17" bodyfile="mprans/CLSVOF.h" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a8fd11358980f636e975acf1926364840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::Sign</definition>
        <argsstring>(const double &amp;z)</argsstring>
        <name>Sign</name>
        <param>
          <type>const double &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/CLSVOF.h" line="23" column="17" bodyfile="mprans/CLSVOF.h" bodystart="23" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a3984afb3f7ef1bc2c7976c96a830129f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d46/classproteus_1_1CLSVOF__base" kindref="compound">CLSVOF_base</ref> *</type>
        <definition>CLSVOF_base* proteus::newCLSVOF</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newCLSVOF</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/CLSVOF.h" line="2034" column="22" bodyfile="mprans/CLSVOF.h" bodystart="2034" bodyend="2058"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a61dc6a3f669d0044d0ba24eedae12dab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/dd6/classproteus_1_1Dissipation__base" kindref="compound">Dissipation_base</ref> *</type>
        <definition>Dissipation_base* proteus::newDissipation</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag, double aDarcy, double betaForch, double grain, double packFraction, double packMargin, double maxFraction, double frFraction, double sigmaC, double C3e, double C4e, double eR, double fContact, double mContact, double nContact, double angFriction, double vos_limiter, double mu_fr_limiter)</argsstring>
        <name>newDissipation</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <param>
          <type>double</type>
          <declname>aDarcy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>betaForch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>grain</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packMargin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigmaC</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C3e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C4e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angFriction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vos_limiter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu_fr_limiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/Dissipation.h" line="1754" column="27" bodyfile="mprans/Dissipation.h" bodystart="1754" bodyend="1808"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1af3b2edf37b8ac9edc571a05fe02afcf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d9/d0a/classproteus_1_1Dissipation2D__base" kindref="compound">Dissipation2D_base</ref> *</type>
        <definition>Dissipation2D_base* proteus::newDissipation2D</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag, double aDarcy, double betaForch, double grain, double packFraction, double packMargin, double maxFraction, double frFraction, double sigmaC, double C3e, double C4e, double eR, double fContact, double mContact, double nContact, double angFriction, double vos_limiter, double mu_fr_limiter)</argsstring>
        <name>newDissipation2D</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <param>
          <type>double</type>
          <declname>aDarcy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>betaForch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>grain</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packMargin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigmaC</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C3e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C4e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angFriction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vos_limiter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu_fr_limiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/Dissipation2D.h" line="1748" column="29" bodyfile="mprans/Dissipation2D.h" bodystart="1748" bodyend="1802"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1adc5e96637123993f3be93306da696177" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::GN_nu1</definition>
        <argsstring>(const double &amp;g, const double &amp;hL, const double &amp;uL, const double &amp;etaL, const double &amp;meshSizeL)</argsstring>
        <name>GN_nu1</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>etaL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>meshSizeL</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/GN_SW2DCV.h" line="25" column="15" bodyfile="mprans/GN_SW2DCV.h" bodystart="25" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ab14e2f847e0f10815ee8f083bfae1b0e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::GN_nu3</definition>
        <argsstring>(const double &amp;g, const double &amp;hR, const double &amp;uR, const double &amp;etaR, const double &amp;meshSizeR)</argsstring>
        <name>GN_nu3</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>etaR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>meshSizeR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/GN_SW2DCV.h" line="37" column="15" bodyfile="mprans/GN_SW2DCV.h" bodystart="37" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a168fa7179bef9c8bff1dc8fbdf4737ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::ENTROPY</definition>
        <argsstring>(const double &amp;g, const double &amp;h, const double &amp;hu, const double &amp;hv, const double &amp;z, const double &amp;one_over_hReg)</argsstring>
        <name>ENTROPY</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hu</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hv</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>one_over_hReg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/GN_SW2DCV.h" line="49" column="15" bodyfile="mprans/GN_SW2DCV.h" bodystart="49" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1aa7382e6e38581baca5f477ee2d1a4ed4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::DENTROPY_DH</definition>
        <argsstring>(const double &amp;g, const double &amp;h, const double &amp;hu, const double &amp;hv, const double &amp;z, const double &amp;one_over_hReg)</argsstring>
        <name>DENTROPY_DH</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hu</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hv</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>one_over_hReg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/GN_SW2DCV.h" line="55" column="15" bodyfile="mprans/GN_SW2DCV.h" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a5eb23919a33f36a2faf26440020d0a70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::DENTROPY_DHU</definition>
        <argsstring>(const double &amp;g, const double &amp;h, const double &amp;hu, const double &amp;hv, const double &amp;z, const double &amp;one_over_hReg)</argsstring>
        <name>DENTROPY_DHU</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hu</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hv</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>one_over_hReg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/GN_SW2DCV.h" line="60" column="15" bodyfile="mprans/GN_SW2DCV.h" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a9db7dbbd169fd6f6b5a8d999bcdf9db1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::DENTROPY_DHV</definition>
        <argsstring>(const double &amp;g, const double &amp;h, const double &amp;hu, const double &amp;hv, const double &amp;z, const double &amp;one_over_hReg)</argsstring>
        <name>DENTROPY_DHV</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hu</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hv</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>one_over_hReg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/GN_SW2DCV.h" line="65" column="15" bodyfile="mprans/GN_SW2DCV.h" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a1eb3932cf3ec78d9e5e0a63256d5378a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::ENTROPY_FLUX1</definition>
        <argsstring>(const double &amp;g, const double &amp;h, const double &amp;hu, const double &amp;hv, const double &amp;z, const double &amp;one_over_hReg)</argsstring>
        <name>ENTROPY_FLUX1</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hu</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hv</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>one_over_hReg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/GN_SW2DCV.h" line="70" column="15" bodyfile="mprans/GN_SW2DCV.h" bodystart="70" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ac5017200ca551e2c3c646a25c6619391" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::ENTROPY_FLUX2</definition>
        <argsstring>(const double &amp;g, const double &amp;h, const double &amp;hu, const double &amp;hv, const double &amp;z, const double &amp;one_over_hReg)</argsstring>
        <name>ENTROPY_FLUX2</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hu</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hv</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>z</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>one_over_hReg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/GN_SW2DCV.h" line="77" column="15" bodyfile="mprans/GN_SW2DCV.h" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1afa880cfc0ac7afc1b91a741c22125bee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d7d/classproteus_1_1GN__SW2DCV__base" kindref="compound">GN_SW2DCV_base</ref> *</type>
        <definition>GN_SW2DCV_base* proteus::newGN_SW2DCV</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newGN_SW2DCV</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/GN_SW2DCV.h" line="2788" column="1" bodyfile="mprans/GN_SW2DCV.h" bodystart="2788" bodyend="2797"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a57d557c5bd879004c6e249395a52acc2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/df7/classproteus_1_1Kappa__base" kindref="compound">Kappa_base</ref> *</type>
        <definition>Kappa_base* proteus::newKappa</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag, double aDarcy, double betaForch, double grain, double packFraction, double packMargin, double maxFraction, double frFraction, double sigmaC, double C3e, double C4e, double eR, double fContact, double mContact, double nContact, double angFriction, double vos_limiter, double mu_fr_limiter)</argsstring>
        <name>newKappa</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <param>
          <type>double</type>
          <declname>aDarcy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>betaForch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>grain</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packMargin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigmaC</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C3e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C4e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angFriction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vos_limiter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu_fr_limiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/Kappa.h" line="1802" column="21" bodyfile="mprans/Kappa.h" bodystart="1802" bodyend="1856"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ab5650e428082f8f66fe08cccc1c7a988" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="df/d32/classproteus_1_1Kappa2D__base" kindref="compound">Kappa2D_base</ref> *</type>
        <definition>Kappa2D_base* proteus::newKappa2D</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag, double aDarcy, double betaForch, double grain, double packFraction, double packMargin, double maxFraction, double frFraction, double sigmaC, double C3e, double C4e, double eR, double fContact, double mContact, double nContact, double angFriction, double vos_limiter, double mu_fr_limiter)</argsstring>
        <name>newKappa2D</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <param>
          <type>double</type>
          <declname>aDarcy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>betaForch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>grain</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packMargin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigmaC</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C3e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C4e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angFriction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vos_limiter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu_fr_limiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/Kappa2D.h" line="1716" column="23" bodyfile="mprans/Kappa2D.h" bodystart="1716" bodyend="1770"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a776413a1a9d07a0ac1b6c2ab9ea8c263" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d18/classproteus_1_1MCorr__base" kindref="compound">MCorr_base</ref> *</type>
        <definition>MCorr_base* proteus::newMCorr</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newMCorr</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/MCorr.h" line="2115" column="21" bodyfile="mprans/MCorr.h" bodystart="2115" bodyend="2139"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a8db4e118bf5dfce60e2106a54bdb62ef" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/dd5/classproteus_1_1cppMCorr3P__base" kindref="compound">cppMCorr3P_base</ref> *</type>
        <definition>cppMCorr3P_base* proteus::newMCorr3P</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newMCorr3P</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/MCorr3P.h" line="1741" column="26" bodyfile="mprans/MCorr3P.h" bodystart="1741" bodyend="1765"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a4db2da468fc5c0a4666b968d0c113557" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/d69/classproteus_1_1MoveMesh__base" kindref="compound">MoveMesh_base</ref> *</type>
        <definition>MoveMesh_base* proteus::newMoveMesh</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newMoveMesh</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/MoveMesh.h" line="1167" column="24" bodyfile="mprans/MoveMesh.h" bodystart="1167" bodyend="1182"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1aeb44f198e579804ee0ce66fdf1894407" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d8d/classproteus_1_1MoveMesh2D__base" kindref="compound">MoveMesh2D_base</ref> *</type>
        <definition>MoveMesh2D_base* proteus::newMoveMesh2D</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newMoveMesh2D</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/MoveMesh2D.h" line="949" column="26" bodyfile="mprans/MoveMesh2D.h" bodystart="949" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a822cdd7bf8d28c184db2e061574598d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::ENTROPY</definition>
        <argsstring>(const double &amp;phi, const double &amp;dummyL, const double &amp;dummyR)</argsstring>
        <name>ENTROPY</name>
        <param>
          <type>const double &amp;</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>dummyL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>dummyR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/NCLS.h" line="22" column="17" bodyfile="mprans/NCLS.h" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a8ac619fcc14c47b95421861ce0130056" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::DENTROPY</definition>
        <argsstring>(const double &amp;phi, const double &amp;dummyL, const double &amp;dummyR)</argsstring>
        <name>DENTROPY</name>
        <param>
          <type>const double &amp;</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>dummyL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>dummyR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/NCLS.h" line="25" column="17" bodyfile="mprans/NCLS.h" bodystart="25" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a4f415ebfd64985a017e3c421f304d0b7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::ENTROPY_LOG</definition>
        <argsstring>(const double &amp;phi, const double &amp;phiL, const double &amp;phiR)</argsstring>
        <name>ENTROPY_LOG</name>
        <param>
          <type>const double &amp;</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>phiL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>phiR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/NCLS.h" line="29" column="17" bodyfile="mprans/NCLS.h" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a0665425b35a21d457d76af9e31ef53a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::DENTROPY_LOG</definition>
        <argsstring>(const double &amp;phi, const double &amp;phiL, const double &amp;phiR)</argsstring>
        <name>DENTROPY_LOG</name>
        <param>
          <type>const double &amp;</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>phiL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>phiR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/NCLS.h" line="32" column="17" bodyfile="mprans/NCLS.h" bodystart="32" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a09bdb95bef1bacc840ecd8ba0ea4352b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d0/d4c/classproteus_1_1NCLS__base" kindref="compound">NCLS_base</ref> *</type>
        <definition>NCLS_base* proteus::newNCLS</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newNCLS</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/NCLS.h" line="2698" column="20" bodyfile="mprans/NCLS.h" bodystart="2698" bodyend="2729"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a1dd2bde59097bae8b98329e1285ed573" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::ENTROPY</definition>
        <argsstring>(const double &amp;u)</argsstring>
        <name>ENTROPY</name>
        <param>
          <type>const double &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/NCLS3P.h" line="15" column="17" bodyfile="mprans/NCLS3P.h" bodystart="15" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ad66c0a34b79af982c4319cbdb9dee567" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::DENTROPY</definition>
        <argsstring>(const double &amp;u)</argsstring>
        <name>DENTROPY</name>
        <param>
          <type>const double &amp;</type>
          <declname>u</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/NCLS3P.h" line="18" column="17" bodyfile="mprans/NCLS3P.h" bodystart="18" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a15a8abb6bd5ad082ed2dd1a21ae0dcac" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/d55/classproteus_1_1cppNCLS3P__base" kindref="compound">cppNCLS3P_base</ref> *</type>
        <definition>cppNCLS3P_base* proteus::newNCLS3P</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newNCLS3P</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/NCLS3P.h" line="1330" column="25" bodyfile="mprans/NCLS3P.h" bodystart="1330" bodyend="1361"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1aec98c1373c923b8236582f804d4b5eec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="de/d5a/classproteus_1_1cppPres__base" kindref="compound">cppPres_base</ref> *</type>
        <definition>cppPres_base* proteus::newPres</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newPres</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/Pres.h" line="508" column="23" bodyfile="mprans/Pres.h" bodystart="508" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a5ecad3c37b7d28eb18ec6c917ba581c3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="df/d62/classproteus_1_1cppPresInc__base" kindref="compound">cppPresInc_base</ref> *</type>
        <definition>cppPresInc_base* proteus::newPresInc</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newPresInc</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/PresInc.h" line="939" column="26" bodyfile="mprans/PresInc.h" bodystart="939" bodyend="963"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a42fb55f6fd895a2c5e1c334b3c220ac1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d8/d15/classproteus_1_1cppPresInit__base" kindref="compound">cppPresInit_base</ref> *</type>
        <definition>cppPresInit_base* proteus::newPresInit</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newPresInit</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/PresInit.h" line="703" column="27" bodyfile="mprans/PresInit.h" bodystart="703" bodyend="727"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1abeaab5b02cfceb3c4c40bc6e088c0dfd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::enorm</definition>
        <argsstring>(double *v)</argsstring>
        <name>enorm</name>
        <param>
          <type>double *</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/RANS2P.h" line="31" column="17" bodyfile="mprans/RANS2P.h" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a61c9f100093a5e92a33ae58b88d3c0f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::rnorm</definition>
        <argsstring>(double *r)</argsstring>
        <name>rnorm</name>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/RANS2P.h" line="35" column="17" bodyfile="mprans/RANS2P.h" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ab4bc5d0494a9ff55405ee4a50fc67faf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::F6DOF</definition>
        <argsstring>(double DT, double mass, double *Iref, double *last_u, double *FT, double *last_FT, double *last_mom, double *u, double *mom, double *r, double *J)</argsstring>
        <name>F6DOF</name>
        <param>
          <type>double</type>
          <declname>DT</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mass</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Iref</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>last_u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>FT</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>last_FT</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>last_mom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>u</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>mom</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>r</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>J</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/RANS2P.h" line="42" column="15" bodyfile="mprans/RANS2P.h" bodystart="42" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a3fd0de2d97b1eb82abfd5c46ba547f32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d3/d22/classproteus_1_1RANS2P__base" kindref="compound">RANS2P_base</ref> *</type>
        <definition>RANS2P_base* proteus::newRANS2P</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nDOF_v_trial_elementIn, int nDOF_v_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newRANS2P</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_v_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_v_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/RANS2P.h" line="8780" column="22" bodyfile="mprans/RANS2P.h" bodystart="8780" bodyend="8799"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a48d03847a9028521d72d7628b5b8c295" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="df/dde/classproteus_1_1RANS2P2D__base" kindref="compound">RANS2P2D_base</ref> *</type>
        <definition>RANS2P2D_base* proteus::newRANS2P2D</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nDOF_v_trial_elementIn, int nDOF_v_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newRANS2P2D</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_v_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_v_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/RANS2P2D.h" line="7604" column="24" bodyfile="mprans/RANS2P2D.h" bodystart="7604" bodyend="7623"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a5c543872fc85dcc2d2e086f5c7877694" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/df0/classproteus_1_1RANS2P__IB__base" kindref="compound">RANS2P_IB_base</ref> *</type>
        <definition>RANS2P_IB_base* proteus::newRANS2P_IB</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newRANS2P_IB</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/RANS2P_IB.h" line="5740" column="25" bodyfile="mprans/RANS2P_IB.h" bodystart="5740" bodyend="5755"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a11262ed5248e45135a49999b901acae9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/de2/classproteus_1_1cppRANS3PF__base" kindref="compound">cppRANS3PF_base</ref> *</type>
        <definition>cppRANS3PF_base* proteus::newRANS3PF</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag, double aDarcy, double betaForch, double grain, double packFraction, double packMargin, double maxFraction, double frFraction, double sigmaC, double C3e, double C4e, double eR, double fContact, double mContact, double nContact, double angFriction, double vos_limiter, double mu_fr_limiter)</argsstring>
        <name>newRANS3PF</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <param>
          <type>double</type>
          <declname>aDarcy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>betaForch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>grain</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packMargin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigmaC</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C3e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C4e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angFriction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vos_limiter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu_fr_limiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/RANS3PF.h" line="7069" column="26" bodyfile="mprans/RANS3PF.h" bodystart="7069" bodyend="7121"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1aa0252dace81bc41f1e2241bf1a0d9a9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d96/classproteus_1_1cppRANS3PF2D__base" kindref="compound">cppRANS3PF2D_base</ref> *</type>
        <definition>cppRANS3PF2D_base* proteus::newRANS3PF2D</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag, double aDarcy, double betaForch, double grain, double packFraction, double packMargin, double maxFraction, double frFraction, double sigmaC, double C3e, double C4e, double eR, double fContact, double mContact, double nContact, double angFriction, double vos_limiter, double mu_fr_limiter)</argsstring>
        <name>newRANS3PF2D</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <param>
          <type>double</type>
          <declname>aDarcy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>betaForch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>grain</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packMargin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigmaC</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C3e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C4e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angFriction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vos_limiter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu_fr_limiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/RANS3PF2D.h" line="7241" column="28" bodyfile="mprans/RANS3PF2D.h" bodystart="7241" bodyend="7287"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ab8a22aa47782a2f8ba6866816ffae45d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="da/d9d/classproteus_1_1cppRANS3PSed__base" kindref="compound">cppRANS3PSed_base</ref> *</type>
        <definition>cppRANS3PSed_base* proteus::newRANS3PSed</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag, double aDarcy, double betaForch, double grain, double packFraction, double packMargin, double maxFraction, double frFraction, double sigmaC, double C3e, double C4e, double eR, double fContact, double mContact, double nContact, double angFriction, double vos_limiter, double mu_fr_limiter)</argsstring>
        <name>newRANS3PSed</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <param>
          <type>double</type>
          <declname>aDarcy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>betaForch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>grain</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packMargin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigmaC</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C3e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C4e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angFriction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vos_limiter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu_fr_limiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/RANS3PSed.h" line="4507" column="28" bodyfile="mprans/RANS3PSed.h" bodystart="4507" bodyend="4557"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a904eb667d42fafae09bb943ce22f5826" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d6/ddf/classproteus_1_1cppRANS3PSed2D__base" kindref="compound">cppRANS3PSed2D_base</ref> *</type>
        <definition>cppRANS3PSed2D_base* proteus::newRANS3PSed2D</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag, double aDarcy, double betaForch, double grain, double packFraction, double packMargin, double maxFraction, double frFraction, double sigmaC, double C3e, double C4e, double eR, double fContact, double mContact, double nContact, double angFriction, double vos_limiter, double mu_fr_limiter)</argsstring>
        <name>newRANS3PSed2D</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <param>
          <type>double</type>
          <declname>aDarcy</declname>
        </param>
        <param>
          <type>double</type>
          <declname>betaForch</declname>
        </param>
        <param>
          <type>double</type>
          <declname>grain</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>packMargin</declname>
        </param>
        <param>
          <type>double</type>
          <declname>maxFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>frFraction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sigmaC</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C3e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>C4e</declname>
        </param>
        <param>
          <type>double</type>
          <declname>eR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nContact</declname>
        </param>
        <param>
          <type>double</type>
          <declname>angFriction</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vos_limiter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mu_fr_limiter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/RANS3PSed2D.h" line="4487" column="30" bodyfile="mprans/RANS3PSed2D.h" bodystart="4487" bodyend="4539"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a0eef98bf1836403f2b6bed8636a866cd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dc/d14/classproteus_1_1RDLS__base" kindref="compound">RDLS_base</ref> *</type>
        <definition>RDLS_base* proteus::newRDLS</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newRDLS</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/RDLS.h" line="1849" column="20" bodyfile="mprans/RDLS.h" bodystart="1849" bodyend="1873"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a678866e867a5ea5e06c3a4ca43fca6b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d5/dcb/classproteus_1_1SW2D__base" kindref="compound">SW2D_base</ref> *</type>
        <definition>SW2D_base* proteus::newSW2D</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newSW2D</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2D.h" line="4013" column="20" bodyfile="mprans/SW2D.h" bodystart="4013" bodyend="4028"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1af05ccedae3a5249ffcee18ba28860db4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::f</definition>
        <argsstring>(const double &amp;g, const double &amp;h, const double &amp;hZ)</argsstring>
        <name>f</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2DCV.h" line="58" column="15" bodyfile="mprans/SW2DCV.h" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a17bf106c5df3b1331ed2a18392384813" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::phi</definition>
        <argsstring>(const double &amp;g, const double &amp;h, const double &amp;hL, const double &amp;hR, const double &amp;uL, const double &amp;uR)</argsstring>
        <name>phi</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2DCV.h" line="62" column="15" bodyfile="mprans/SW2DCV.h" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1aea851b1d02fbb510e83331beade83dbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::fp</definition>
        <argsstring>(const double &amp;g, const double &amp;h, const double &amp;hZ)</argsstring>
        <name>fp</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hZ</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2DCV.h" line="66" column="15" bodyfile="mprans/SW2DCV.h" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a475fb9d85bb327fe4849011189f20e62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::phip</definition>
        <argsstring>(const double &amp;g, const double &amp;h, const double &amp;hL, const double &amp;hR)</argsstring>
        <name>phip</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2DCV.h" line="72" column="15" bodyfile="mprans/SW2DCV.h" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a51bc0d78c532a8a341af66a2e2fb5895" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::nu1</definition>
        <argsstring>(const double &amp;g, const double &amp;hStar, const double &amp;hL, const double &amp;uL, const double &amp;one_over_hL)</argsstring>
        <name>nu1</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hStar</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>one_over_hL</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2DCV.h" line="76" column="15" bodyfile="mprans/SW2DCV.h" bodystart="76" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1acbf7b0274d3a40eff8ecced146ce77f7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::nu3</definition>
        <argsstring>(const double &amp;g, const double &amp;hStar, const double &amp;hR, const double &amp;uR, const double &amp;one_over_hR)</argsstring>
        <name>nu3</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hStar</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>one_over_hR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2DCV.h" line="82" column="15" bodyfile="mprans/SW2DCV.h" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a24e3549b98c861e0a822612a088a0d82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::phiDiff</definition>
        <argsstring>(const double &amp;g, const double &amp;h1k, const double &amp;h2k, const double &amp;hL, const double &amp;hR, const double &amp;uL, const double &amp;uR)</argsstring>
        <name>phiDiff</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h1k</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h2k</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2DCV.h" line="88" column="15" bodyfile="mprans/SW2DCV.h" bodystart="88" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a7667307f5ed3630618f22cc94c48d7af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::phiDDiff1</definition>
        <argsstring>(const double &amp;g, const double &amp;h1k, const double &amp;h2k, const double &amp;hL, const double &amp;hR, const double &amp;uL, const double &amp;uR)</argsstring>
        <name>phiDDiff1</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h1k</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h2k</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2DCV.h" line="94" column="15" bodyfile="mprans/SW2DCV.h" bodystart="94" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a2883fc0e26145438f8d6d901e5af539c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::phiDDiff2</definition>
        <argsstring>(const double &amp;g, const double &amp;h1k, const double &amp;h2k, const double &amp;hL, const double &amp;hR, const double &amp;uL, const double &amp;uR)</argsstring>
        <name>phiDDiff2</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h1k</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h2k</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2DCV.h" line="100" column="15" bodyfile="mprans/SW2DCV.h" bodystart="100" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a7330c388dd299f1f57a761407b3f9803" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::hStarLFromQuadPhiFromAbove</definition>
        <argsstring>(const double &amp;g, const double &amp;hStarL, const double &amp;hStarR, const double &amp;hL, const double &amp;hR, const double &amp;uL, const double &amp;uR)</argsstring>
        <name>hStarLFromQuadPhiFromAbove</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hStarL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hStarR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2DCV.h" line="106" column="15" bodyfile="mprans/SW2DCV.h" bodystart="106" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1aa4fb5dbd416856817199520f28e815b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::hStarRFromQuadPhiFromBelow</definition>
        <argsstring>(const double &amp;g, const double &amp;hStarL, const double &amp;hStarR, const double &amp;hL, const double &amp;hR, const double &amp;uL, const double &amp;uR)</argsstring>
        <name>hStarRFromQuadPhiFromBelow</name>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hStarL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hStarR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hR</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uL</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>uR</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2DCV.h" line="117" column="15" bodyfile="mprans/SW2DCV.h" bodystart="117" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a59cc84282aef464a74b9ff0639e5042d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="dd/d18/classproteus_1_1SW2DCV__base" kindref="compound">SW2DCV_base</ref> *</type>
        <definition>SW2DCV_base* proteus::newSW2DCV</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newSW2DCV</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/SW2DCV.h" line="2155" column="20" bodyfile="mprans/SW2DCV.h" bodystart="2155" bodyend="2165"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a2c7f6c475014e2f499e8120ec89fd1bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="df/d6f/classproteus_1_1VOF__base" kindref="compound">VOF_base</ref> *</type>
        <definition>VOF_base* proteus::newVOF</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newVOF</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/VOF.h" line="2022" column="19" bodyfile="mprans/VOF.h" bodystart="2022" bodyend="2046"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a0b02db9f7a910f9de800e86346ec9123" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d7/d0f/classproteus_1_1cppVOF3P__base" kindref="compound">cppVOF3P_base</ref> *</type>
        <definition>cppVOF3P_base* proteus::newVOF3P</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newVOF3P</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/VOF3P.h" line="2025" column="24" bodyfile="mprans/VOF3P.h" bodystart="2025" bodyend="2049"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a69cf5aef6d7e8c9a8c0affe3b2c25dea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d4/dc9/classproteus_1_1cppVOS3P__base" kindref="compound">cppVOS3P_base</ref> *</type>
        <definition>cppVOS3P_base* proteus::newVOS3P</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newVOS3P</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="mprans/VOS3P.h" line="2466" column="24" bodyfile="mprans/VOS3P.h" bodystart="2466" bodyend="2490"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1add82470d4c0cfc04c1844575a09a3cc6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int proteus::partitionElementsOriginal</definition>
        <argsstring>(const MPI_Comm &amp;PROTEUS_COMM_WORLD, Mesh &amp;mesh, int nElements_overlap)</argsstring>
        <name>partitionElementsOriginal</name>
        <param>
          <type>const MPI_Comm &amp;</type>
          <declname>PROTEUS_COMM_WORLD</declname>
        </param>
        <param>
          <type><ref refid="da/d29/structMesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_overlap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.cpp" line="6" column="5" bodyfile="partitioning.cpp" bodystart="6" bodyend="537" declfile="partitioning.h" declline="149" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ad76a320dedee422e8e0064e7dd9d0912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int proteus::partitionNodes</definition>
        <argsstring>(const MPI_Comm &amp;PROTEUS_COMM_WORLD, Mesh &amp;mesh, int nNodes_overlap)</argsstring>
        <name>partitionNodes</name>
        <param>
          <type>const MPI_Comm &amp;</type>
          <declname>PROTEUS_COMM_WORLD</declname>
        </param>
        <param>
          <type><ref refid="da/d29/structMesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nNodes_overlap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.cpp" line="539" column="5" bodyfile="partitioning.cpp" bodystart="539" bodyend="1462" declfile="partitioning.h" declline="151" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a84bde2e556d60a8bd93bede8bbdfd053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int proteus::partitionNodesFromTetgenFiles</definition>
        <argsstring>(const MPI_Comm &amp;PROTEUS_COMM_WORLD, const char *filebase, int indexBase, Mesh &amp;newMesh, int nNodes_overlap)</argsstring>
        <name>partitionNodesFromTetgenFiles</name>
        <param>
          <type>const MPI_Comm &amp;</type>
          <declname>PROTEUS_COMM_WORLD</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
        </param>
        <param>
          <type><ref refid="da/d29/structMesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>newMesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nNodes_overlap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.cpp" line="1464" column="5" bodyfile="partitioning.cpp" bodystart="1464" bodyend="2957" declfile="partitioning.h" declline="153" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a9f658c0988941cfae4d401e59bbe7816" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int proteus::partitionNodesFromTriangleFiles</definition>
        <argsstring>(const MPI_Comm &amp;PROTEUS_COMM_WORLD, const char *filebase, int indexBase, Mesh &amp;newMesh, int nNodes_overlap)</argsstring>
        <name>partitionNodesFromTriangleFiles</name>
        <param>
          <type>const MPI_Comm &amp;</type>
          <declname>PROTEUS_COMM_WORLD</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filebase</declname>
        </param>
        <param>
          <type>int</type>
          <declname>indexBase</declname>
        </param>
        <param>
          <type><ref refid="da/d29/structMesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>newMesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nNodes_overlap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.cpp" line="2958" column="5" bodyfile="partitioning.cpp" bodystart="2958" bodyend="4449" declfile="partitioning.h" declline="154" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ac704dbcca07e0565d2a9b74ae01c6e4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int proteus::partitionElements</definition>
        <argsstring>(const MPI_Comm &amp;PROTEUS_COMM_WORLD, Mesh &amp;mesh, int nElements_overlap)</argsstring>
        <name>partitionElements</name>
        <param>
          <type>const MPI_Comm &amp;</type>
          <declname>PROTEUS_COMM_WORLD</declname>
        </param>
        <param>
          <type><ref refid="da/d29/structMesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_overlap</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.cpp" line="4451" column="5" bodyfile="partitioning.cpp" bodystart="4451" bodyend="5484" declfile="partitioning.h" declline="156" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a7d697516d1d1a1f9828c3a6f9077a857" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int proteus::buildQuadraticSubdomain2GlobalMappings_1d</definition>
        <argsstring>(const MPI_Comm &amp;PROTEUS_COMM_WORLD, Mesh &amp;mesh, const int *elementOffsets_subdomain_owned, const int *nodeOffsets_subdomain_owned, const int *elementNumbering_subdomain2global, const int *nodeNumbering_subdomain2global, int &amp;nDOF_all_processes, int &amp;nDOF_subdomain, int &amp;max_dof_neighbors, int *offsets_subdomain_owned, int *subdomain_l2g, int *subdomain2global, double *lagrangeNodesArray)</argsstring>
        <name>buildQuadraticSubdomain2GlobalMappings_1d</name>
        <param>
          <type>const MPI_Comm &amp;</type>
          <declname>PROTEUS_COMM_WORLD</declname>
        </param>
        <param>
          <type><ref refid="da/d29/structMesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementOffsets_subdomain_owned</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>nodeOffsets_subdomain_owned</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNumbering_subdomain2global</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>nodeNumbering_subdomain2global</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nDOF_all_processes</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nDOF_subdomain</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>max_dof_neighbors</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>offsets_subdomain_owned</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>subdomain_l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>subdomain2global</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lagrangeNodesArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.cpp" line="5486" column="5" bodyfile="partitioning.cpp" bodystart="5486" bodyend="5636" declfile="partitioning.h" declline="158" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ae3b0032832415b3d23047133de4f44e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int proteus::buildQuadraticSubdomain2GlobalMappings_2d</definition>
        <argsstring>(const MPI_Comm &amp;PROTEUS_COMM_WORLD, Mesh &amp;mesh, const int *elementBoundaryOffsets_subdomain_owned, const int *nodeOffsets_subdomain_owned, const int *elementBoundaryNumbering_subdomain2global, const int *nodeNumbering_subdomain2global, int &amp;nDOF_all_processes, int &amp;nDOF_subdomain, int &amp;max_dof_neighbors, int *offsets_subdomain_owned, int *subdomain_l2g, int *subdomain2global, double *lagrangeNodesArray)</argsstring>
        <name>buildQuadraticSubdomain2GlobalMappings_2d</name>
        <param>
          <type>const MPI_Comm &amp;</type>
          <declname>PROTEUS_COMM_WORLD</declname>
        </param>
        <param>
          <type><ref refid="da/d29/structMesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryOffsets_subdomain_owned</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>nodeOffsets_subdomain_owned</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementBoundaryNumbering_subdomain2global</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>nodeNumbering_subdomain2global</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nDOF_all_processes</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nDOF_subdomain</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>max_dof_neighbors</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>offsets_subdomain_owned</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>subdomain_l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>subdomain2global</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lagrangeNodesArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.cpp" line="5638" column="5" bodyfile="partitioning.cpp" bodystart="5638" bodyend="5794" declfile="partitioning.h" declline="171" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1abd6874e2f56d12ee95a6d1ada134b922" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int proteus::buildQuadraticSubdomain2GlobalMappings_3d</definition>
        <argsstring>(const MPI_Comm &amp;PROTEUS_COMM_WORLD, Mesh &amp;mesh, const int *edgeOffsets_subdomain_owned, const int *nodeOffsets_subdomain_owned, const int *edgeNumbering_subdomain2global, const int *nodeNumbering_subdomain2global, int &amp;nDOF_all_processes, int &amp;nDOF_subdomain, int &amp;max_dof_neighbors, int *offsets_subdomain_owned, int *subdomain_l2g, int *subdomain2global, double *lagrangeNodesArray)</argsstring>
        <name>buildQuadraticSubdomain2GlobalMappings_3d</name>
        <param>
          <type>const MPI_Comm &amp;</type>
          <declname>PROTEUS_COMM_WORLD</declname>
        </param>
        <param>
          <type><ref refid="da/d29/structMesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>edgeOffsets_subdomain_owned</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>nodeOffsets_subdomain_owned</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>edgeNumbering_subdomain2global</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>nodeNumbering_subdomain2global</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nDOF_all_processes</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nDOF_subdomain</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>max_dof_neighbors</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>offsets_subdomain_owned</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>subdomain_l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>subdomain2global</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lagrangeNodesArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.cpp" line="5797" column="5" bodyfile="partitioning.cpp" bodystart="5797" bodyend="6074" declfile="partitioning.h" declline="184" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a99665ca027f2bc715a648c4b7c981dbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int proteus::buildQuadraticCubeSubdomain2GlobalMappings_3d</definition>
        <argsstring>(const MPI_Comm &amp;PROTEUS_COMM_WORLD, Mesh &amp;mesh, const int *edgeOffsets_subdomain_owned, const int *nodeOffsets_subdomain_owned, const int *edgeNumbering_subdomain2global, const int *nodeNumbering_subdomain2global, int &amp;nDOF_all_processes, int &amp;nDOF_subdomain, int &amp;max_dof_neighbors, int *offsets_subdomain_owned, int *subdomain_l2g, int *subdomain2global, double *lagrangeNodesArray)</argsstring>
        <name>buildQuadraticCubeSubdomain2GlobalMappings_3d</name>
        <param>
          <type>const MPI_Comm &amp;</type>
          <declname>PROTEUS_COMM_WORLD</declname>
        </param>
        <param>
          <type><ref refid="da/d29/structMesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>edgeOffsets_subdomain_owned</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>nodeOffsets_subdomain_owned</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>edgeNumbering_subdomain2global</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>nodeNumbering_subdomain2global</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nDOF_all_processes</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nDOF_subdomain</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>max_dof_neighbors</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>offsets_subdomain_owned</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>subdomain_l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>subdomain2global</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>lagrangeNodesArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.cpp" line="6076" column="5" bodyfile="partitioning.cpp" bodystart="6076" bodyend="6444" declfile="partitioning.h" declline="197" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1aadf24948dcd2edecf8a923495153c3f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int proteus::buildDiscontinuousGalerkinSubdomain2GlobalMappings</definition>
        <argsstring>(const MPI_Comm &amp;PROTEUS_COMM_WORLD, Mesh &amp;mesh, const int *elementOffsets_subdomain_owned, const int *elementNumbering_subdomain2global, int nDOF_element, int &amp;nDOF_all_processes, int &amp;nDOF_subdomain, int &amp;max_dof_neighbors, int *offsets_subdomain_owned, int *subdomain_l2g, int *subdomain2global)</argsstring>
        <name>buildDiscontinuousGalerkinSubdomain2GlobalMappings</name>
        <param>
          <type>const MPI_Comm &amp;</type>
          <declname>PROTEUS_COMM_WORLD</declname>
        </param>
        <param>
          <type><ref refid="da/d29/structMesh" kindref="compound">Mesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementOffsets_subdomain_owned</declname>
        </param>
        <param>
          <type>const int *</type>
          <declname>elementNumbering_subdomain2global</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_element</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nDOF_all_processes</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>nDOF_subdomain</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>max_dof_neighbors</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>offsets_subdomain_owned</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>subdomain_l2g</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>subdomain2global</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.cpp" line="6450" column="5" bodyfile="partitioning.cpp" bodystart="6450" bodyend="6499" declfile="partitioning.h" declline="210" declcolumn="14"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a99cb3ee44f63e8b574ed4188e2db1460" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t proteus::getPeakRSS</definition>
        <argsstring>()</argsstring>
        <name>getPeakRSS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the peak (maximum so far) resident set size (physical memory use) measured in bytes, or zero if the value cannot be determined on this OS. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.h" line="51" column="17" bodyfile="partitioning.h" bodystart="51" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a89275774c97322cfeb7ed2d03dc36197" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t proteus::getCurrentRSS</definition>
        <argsstring>()</argsstring>
        <name>getCurrentRSS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the current resident set size (physical memory use) measured in bytes, or zero if the value cannot be determined on this OS. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.h" line="93" column="17" bodyfile="partitioning.h" bodystart="93" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1afa9f1b379dd528d249097642bacf85b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int proteus::enforceMemoryLimit</definition>
        <argsstring>(const MPI_Comm &amp;PROTEUS_COMM_WORLD, int rank, double max_rss_gb, const char *msg)</argsstring>
        <name>enforceMemoryLimit</name>
        <param>
          <type>const MPI_Comm &amp;</type>
          <declname>PROTEUS_COMM_WORLD</declname>
        </param>
        <param>
          <type>int</type>
          <declname>rank</declname>
        </param>
        <param>
          <type>double</type>
          <declname>max_rss_gb</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="partitioning.h" line="130" column="14" bodyfile="partitioning.h" bodystart="130" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ae047139fa4c89b9f232350e1476ff911" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="d1/d9d/classproteus_1_1Richards__base" kindref="compound">Richards_base</ref> *</type>
        <definition>Richards_base* proteus::newRichards</definition>
        <argsstring>(int nSpaceIn, int nQuadraturePoints_elementIn, int nDOF_mesh_trial_elementIn, int nDOF_trial_elementIn, int nDOF_test_elementIn, int nQuadraturePoints_elementBoundaryIn, int CompKernelFlag)</argsstring>
        <name>newRichards</name>
        <param>
          <type>int</type>
          <declname>nSpaceIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_mesh_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_trial_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nDOF_test_elementIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nQuadraturePoints_elementBoundaryIn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>CompKernelFlag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="richards/Richards.h" line="1139" column="26" bodyfile="richards/Richards.h" bodystart="1139" bodyend="1154"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1af4b7697a2b9211bb1a702296514107be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int proteus::nDim</definition>
        <argsstring>(3)</argsstring>
        <name>nDim</name>
        <param>
          <type>3</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="9" column="12" declfile="WaveTools.h" declline="9" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a9f1ef6b3c041c453169aeeb50596a6af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::fastcosh</definition>
        <argsstring>(double *hype, double k, double Z, bool fast)</argsstring>
        <name>fastcosh</name>
        <param>
          <type>double *</type>
          <declname>hype</declname>
        </param>
        <param>
          <type>double</type>
          <declname>k</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Z</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="20" column="14" bodyfile="WaveTools.h" bodystart="20" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1abd4712d78e326780bb07a5f2864c352d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::fastcos</definition>
        <argsstring>(double phi, bool fast)</argsstring>
        <name>fastcos</name>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="46" column="16" bodyfile="WaveTools.h" bodystart="46" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a86d09a6252c985061843e4a0db8c237a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::__cpp_eta_mode</definition>
        <argsstring>(double x[nDim], double t, double kDir[nDim], double omega, double phi, double amplitude, bool fast)</argsstring>
        <name>__cpp_eta_mode</name>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kDir</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="92" column="16" bodyfile="WaveTools.h" bodystart="92" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ad64bc33f0990504145ab8050e1e24c19" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::__cpp_vel_mode_p</definition>
        <argsstring>(double *U, double x[nDim], double t, double kDir[nDim], double kAbs, double omega, double phi, double amplitude, double mwl, double depth, double waveDir[nDim], double vDir[nDim], double tanhkd, double gAbs, bool fast)</argsstring>
        <name>__cpp_vel_mode_p</name>
        <param>
          <type>double *</type>
          <declname>U</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kDir</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>kAbs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mwl</declname>
        </param>
        <param>
          <type>double</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>waveDir</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>vDir</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>tanhkd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gAbs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="136" column="14" bodyfile="WaveTools.h" bodystart="136" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1af5dc7e525208ddf109d65e0e6cfc5bd5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::__cpp_etaFenton</definition>
        <argsstring>(double x[nDim], double t, double kDir[nDim], double kAbs, double omega, double phi0, double amplitude, int Nf, double *Ycoeff, bool fast)</argsstring>
        <name>__cpp_etaFenton</name>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kDir</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>kAbs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nf</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Ycoeff</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="184" column="16" bodyfile="WaveTools.h" bodystart="184" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a6871b5852d120f329927fbf05bc817a4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::__cpp_uFenton</definition>
        <argsstring>(double *U, double x[nDim], double t, double kDir[nDim], double kAbs, double omega, double phi0, double amplitude, double mwl, double depth, double gAbs, int Nf, double *Bcoeff, double mV[nDim], double waveDir[nDim], double vDir[nDim], double *tanhF, bool fast)</argsstring>
        <name>__cpp_uFenton</name>
        <param>
          <type>double *</type>
          <declname>U</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>kDir</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>kAbs</declname>
        </param>
        <param>
          <type>double</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double</type>
          <declname>phi0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mwl</declname>
        </param>
        <param>
          <type>double</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gAbs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nf</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>Bcoeff</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mV</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>waveDir</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>vDir</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>tanhF</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="209" column="14" bodyfile="WaveTools.h" bodystart="209" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1aaec62b92525eff6067aa6dabae7ea5e6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::__cpp_etaRandom</definition>
        <argsstring>(double x[nDim], double t, double *kDir, double *omega, double *phi, double *amplitude, int N, bool fast)</argsstring>
        <name>__cpp_etaRandom</name>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kDir</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="256" column="16" bodyfile="WaveTools.h" bodystart="256" bodyend="274"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ab8b4b99d6a7236ae6c29026172cbf0b5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::__cpp_uRandom</definition>
        <argsstring>(double *U, double x[nDim], double t, double *kDir, double *kAbs, double *omega, double *phi, double *amplitude, double mwl, double depth, int N, double waveDir[nDim], double vDir[nDim], double *tanhF, double gAbs, bool fast)</argsstring>
        <name>__cpp_uRandom</name>
        <param>
          <type>double *</type>
          <declname>U</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kDir</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kAbs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mwl</declname>
        </param>
        <param>
          <type>double</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double</type>
          <declname>waveDir</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>vDir</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>tanhF</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gAbs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="276" column="14" bodyfile="WaveTools.h" bodystart="276" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a0966dedd1c4b7c752898ea2b154f0dcf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::__cpp_uDir</definition>
        <argsstring>(double *U, double x[nDim], double t, double *kDir, double *kAbs, double *omega, double *phi, double *amplitude, double mwl, double depth, int N, double *waveDir, double vDir[nDim], double *tanhF, double gAbs, bool fast)</argsstring>
        <name>__cpp_uDir</name>
        <param>
          <type>double *</type>
          <declname>U</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kDir</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kAbs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mwl</declname>
        </param>
        <param>
          <type>double</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>waveDir</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vDir</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>tanhF</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gAbs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="303" column="14" bodyfile="WaveTools.h" bodystart="303" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ae99d54f536a6e4dab95975a65177b5d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int proteus::__cpp_findWindow</definition>
        <argsstring>(double t, double handover, double t0, double Twindow, int Nwindows, double *windows_handover)</argsstring>
        <name>__cpp_findWindow</name>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double</type>
          <declname>handover</declname>
        </param>
        <param>
          <type>double</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double</type>
          <declname>Twindow</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nwindows</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>windows_handover</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="332" column="13" bodyfile="WaveTools.h" bodystart="332" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a2ff294cb24d0fb5910d2077b7517d6e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::__cpp_etaDirect</definition>
        <argsstring>(double x[nDim], double x0[nDim], double t, double *kDir, double *omega, double *phi, double *amplitude, int N, bool fast)</argsstring>
        <name>__cpp_etaDirect</name>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x0</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kDir</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="348" column="16" bodyfile="WaveTools.h" bodystart="348" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a493a59d230a26b58d7ff69ec9dda7b9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::__cpp_uDirect</definition>
        <argsstring>(double *U, double x[nDim], double x0[nDim], double t, double *kDir, double *kAbs, double *omega, double *phi, double *amplitude, double mwl, double depth, int N, double *waveDir, double vDir[nDim], double *tanhKd, double gAbs, bool fast)</argsstring>
        <name>__cpp_uDirect</name>
        <param>
          <type>double *</type>
          <declname>U</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x0</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kDir</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kAbs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mwl</declname>
        </param>
        <param>
          <type>double</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>waveDir</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vDir</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double *</type>
          <declname>tanhKd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gAbs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="365" column="14" bodyfile="WaveTools.h" bodystart="365" bodyend="377"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a33b52a50282ac2313f93eecbf9246f5f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::__cpp_etaWindow</definition>
        <argsstring>(double x[nDim], double x0[nDim], double t, double *t0, double *kDir, double *omega, double *phi, double *amplitude, int N, int Nw, bool fast)</argsstring>
        <name>__cpp_etaWindow</name>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x0</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kDir</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nw</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="380" column="16" bodyfile="WaveTools.h" bodystart="380" bodyend="405"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1add69646049d50cc929479d8e25e998c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::__cpp_uWindow</definition>
        <argsstring>(double *U, double x[nDim], double x0[nDim], double t, double *t0, double *kDir, double *kAbs, double *omega, double *phi, double *amplitude, double mwl, double depth, int N, int Nw, double *waveDir, double *vDir, double *tanhF, double gAbs, bool fast)</argsstring>
        <name>__cpp_uWindow</name>
        <param>
          <type>double *</type>
          <declname>U</declname>
        </param>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>x0</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>t0</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kDir</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kAbs</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mwl</declname>
        </param>
        <param>
          <type>double</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Nw</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>waveDir</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>vDir</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tanhF</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gAbs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="409" column="14" bodyfile="WaveTools.h" bodystart="409" bodyend="436"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1ad29673cc45eaacc052b993f1fed99339" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::__cpp_eta2nd</definition>
        <argsstring>(double x[nDim], double t, double *kDir, double *ki, double *omega, double *phi, double *amplitude, int N, double *sinhKd, double *tanhKd, bool fast)</argsstring>
        <name>__cpp_eta2nd</name>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kDir</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ki</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sinhKd</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tanhKd</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="439" column="16" bodyfile="WaveTools.h" bodystart="439" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a94cac08291d32757f8e18db090d6b394" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::__cpp_eta_short</definition>
        <argsstring>(double x[nDim], double t, double *kDir, double *ki, double *omega, double *phi, double *amplitude, int N, double *sinhKd, double *tanhKd, double gAbs, bool fast)</argsstring>
        <name>__cpp_eta_short</name>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kDir</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ki</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sinhKd</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tanhKd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gAbs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="464" column="16" bodyfile="WaveTools.h" bodystart="464" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="d8/dd9/namespaceproteus_1a5e07508f4e335ae785e3068d2925fea4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::__cpp_eta_long</definition>
        <argsstring>(double x[nDim], double t, double *kDir, double *ki, double *omega, double *phi, double *amplitude, int N, double *sinhKd, double *tanhKd, double gAbs, bool fast)</argsstring>
        <name>__cpp_eta_long</name>
        <param>
          <type>double</type>
          <declname>x</declname>
          <array>[nDim]</array>
        </param>
        <param>
          <type>double</type>
          <declname>t</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>kDir</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>ki</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>omega</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>amplitude</declname>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>sinhKd</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>tanhKd</declname>
        </param>
        <param>
          <type>double</type>
          <declname>gAbs</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>fast</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="WaveTools.h" line="508" column="16" bodyfile="WaveTools.h" bodystart="508" bodyend="550"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><verbatim>Modules for computing numerical solutions of differential equations
</verbatim> </para>
    </detaileddescription>
    <location file="__init__.py" line="1" column="1"/>
  </compounddef>
</doxygen>
