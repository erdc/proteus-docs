<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classproteus_1_1_s_w2_d_c_v" kind="class" language="C++" prot="public">
    <compoundname>proteus::SW2DCV</compoundname>
    <basecompoundref refid="classproteus_1_1_s_w2_d_c_v__base" prot="public" virt="non-virtual">proteus::SW2DCV_base</basecompoundref>
    <includes refid="_s_w2_d_c_v_8h" local="no">/Users/cekees/proteus/proteus/mprans/SW2DCV.h</includes>
    <templateparamlist>
      <param>
        <type>class CompKernelType</type>
      </param>
      <param>
        <type>int</type>
        <declname>nSpace</declname>
        <defname>nSpace</defname>
      </param>
      <param>
        <type>int</type>
        <declname>nQuadraturePoints_element</declname>
        <defname>nQuadraturePoints_element</defname>
      </param>
      <param>
        <type>int</type>
        <declname>nDOF_mesh_trial_element</declname>
        <defname>nDOF_mesh_trial_element</defname>
      </param>
      <param>
        <type>int</type>
        <declname>nDOF_trial_element</declname>
        <defname>nDOF_trial_element</defname>
      </param>
      <param>
        <type>int</type>
        <declname>nDOF_test_element</declname>
        <defname>nDOF_test_element</defname>
      </param>
      <param>
        <type>int</type>
        <declname>nQuadraturePoints_elementBoundary</declname>
        <defname>nQuadraturePoints_elementBoundary</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classproteus_1_1_s_w2_d_c_v_1a436d94ac8ffa3d1c04f5233796fda997" prot="public" static="no" mutable="no">
        <type>const int</type>
        <definition>const int proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::nDOF_test_X_trial_element</definition>
        <argsstring></argsstring>
        <name>nDOF_test_X_trial_element</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="348" column="13" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="348" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_s_w2_d_c_v_1a42fa8af0f0201d2e8628fc0882be65b3" prot="public" static="no" mutable="no">
        <type>CompKernelType</type>
        <definition>CompKernelType proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::ck</definition>
        <argsstring></argsstring>
        <name>ck</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="349" column="18" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="349" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classproteus_1_1_s_w2_d_c_v_1a6061b14676c6805006ffe7a0d2dc7f57" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::SW2DCV</definition>
        <argsstring>()</argsstring>
        <name>SW2DCV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="350" column="3" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="350" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_s_w2_d_c_v_1a15b751910485ef014d5e17e2d1458b2c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::maxWaveSpeedSharpInitialGuess</definition>
        <argsstring>(double g, double nx, double ny, double hL, double huL, double hvL, double hR, double huR, double hvR, double hEpsL, double hEpsR, bool debugging)</argsstring>
        <name>maxWaveSpeedSharpInitialGuess</name>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>huL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hvL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>huR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hvR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hEpsL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hEpsR</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>debugging</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="360" column="17" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="360" bodyend="446"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_s_w2_d_c_v_1a0c50c147886c351f2c336e56b4594a92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::maxWaveSpeedIterativeProcess</definition>
        <argsstring>(double g, double nx, double ny, double hL, double huL, double hvL, double hR, double huR, double hvR, double hEpsL, double hEpsR, bool verbose)</argsstring>
        <name>maxWaveSpeedIterativeProcess</name>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nx</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ny</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>huL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hvL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>huR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hvR</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hEpsL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hEpsR</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verbose</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="448" column="17" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="448" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_s_w2_d_c_v_1ad75334d654320f591240fd36d0ce19b2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::calculateCFL</definition>
        <argsstring>(const double &amp;elementDiameter, const double &amp;g, const double &amp;h, const double &amp;hu, const double &amp;hv, const double hEps, double &amp;cfl)</argsstring>
        <name>calculateCFL</name>
        <param>
          <type>const double &amp;</type>
          <declname>elementDiameter</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>g</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>h</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hu</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>hv</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>hEps</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>cfl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="613" column="15" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="613" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_s_w2_d_c_v_1ae3140262de2a97188c35e91820ffea06" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::FCTStep</definition>
        <argsstring>(double dt, int NNZ, int numDOFs, xt::pyarray&lt; double &gt; &amp;lumped_mass_matrix, xt::pyarray&lt; double &gt; &amp;h_old, xt::pyarray&lt; double &gt; &amp;hu_old, xt::pyarray&lt; double &gt; &amp;hv_old, xt::pyarray&lt; double &gt; &amp;b_dof, xt::pyarray&lt; double &gt; &amp;high_order_hnp1, xt::pyarray&lt; double &gt; &amp;high_order_hunp1, xt::pyarray&lt; double &gt; &amp;high_order_hvnp1, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hu, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hv, xt::pyarray&lt; double &gt; &amp;limited_hnp1, xt::pyarray&lt; double &gt; &amp;limited_hunp1, xt::pyarray&lt; double &gt; &amp;limited_hvnp1, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_DofLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_DofLoops, xt::pyarray&lt; double &gt; &amp;MassMatrix, xt::pyarray&lt; double &gt; &amp;dH_minus_dL, xt::pyarray&lt; double &gt; &amp;muH_minus_muL, double hEps, xt::pyarray&lt; double &gt; &amp;hReg, int LUMPED_MASS_MATRIX, xt::pyarray&lt; double &gt; &amp;dLow, xt::pyarray&lt; double &gt; &amp;hBT, xt::pyarray&lt; double &gt; &amp;huBT, xt::pyarray&lt; double &gt; &amp;hvBT)</argsstring>
        <name>FCTStep</name>
        <reimplements refid="classproteus_1_1_s_w2_d_c_v__base_1a29732452cef6c4c60fa77e9b66c43986">FCTStep</reimplements>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NNZ</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDOFs</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>lumped_mass_matrix</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>b_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hunp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hvnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hunp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hvnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>MassMatrix</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dH_minus_dL</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>muH_minus_muL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hEps</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hReg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LUMPED_MASS_MATRIX</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dLow</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>huBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hvBT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="632" column="8" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="632" bodyend="858"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_s_w2_d_c_v_1a55def2a2da653a465d2ba407c14eeb6b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::convexLimiting</definition>
        <argsstring>(double dt, int NNZ, int numDOFs, xt::pyarray&lt; double &gt; &amp;lumped_mass_matrix, xt::pyarray&lt; double &gt; &amp;h_old, xt::pyarray&lt; double &gt; &amp;hu_old, xt::pyarray&lt; double &gt; &amp;hv_old, xt::pyarray&lt; double &gt; &amp;b_dof, xt::pyarray&lt; double &gt; &amp;high_order_hnp1, xt::pyarray&lt; double &gt; &amp;high_order_hunp1, xt::pyarray&lt; double &gt; &amp;high_order_hvnp1, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hu, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hv, xt::pyarray&lt; double &gt; &amp;limited_hnp1, xt::pyarray&lt; double &gt; &amp;limited_hunp1, xt::pyarray&lt; double &gt; &amp;limited_hvnp1, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_DofLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_DofLoops, xt::pyarray&lt; double &gt; &amp;MassMatrix, xt::pyarray&lt; double &gt; &amp;dH_minus_dL, xt::pyarray&lt; double &gt; &amp;muH_minus_muL, double hEps, xt::pyarray&lt; double &gt; &amp;hReg, int LUMPED_MASS_MATRIX, xt::pyarray&lt; double &gt; &amp;dLow, xt::pyarray&lt; double &gt; &amp;hBT, xt::pyarray&lt; double &gt; &amp;huBT, xt::pyarray&lt; double &gt; &amp;hvBT)</argsstring>
        <name>convexLimiting</name>
        <reimplements refid="classproteus_1_1_s_w2_d_c_v__base_1a9550e8cde159e1f21c8a3d65e44ddc27">convexLimiting</reimplements>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NNZ</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDOFs</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>lumped_mass_matrix</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>b_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hunp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>high_order_hvnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hunp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_hvnp1</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>MassMatrix</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dH_minus_dL</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>muH_minus_muL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hEps</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hReg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LUMPED_MASS_MATRIX</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dLow</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>huBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hvBT</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="861" column="3" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="861" bodyend="1142"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_s_w2_d_c_v_1a6a5061dc4af0d39057452992e39f8eff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>double</type>
        <definition>double proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::calculateEdgeBasedCFL</definition>
        <argsstring>(double g, int numDOFsPerEqn, xt::pyarray&lt; double &gt; &amp;lumped_mass_matrix, xt::pyarray&lt; double &gt; &amp;h_dof_old, xt::pyarray&lt; double &gt; &amp;hu_dof_old, xt::pyarray&lt; double &gt; &amp;hv_dof_old, xt::pyarray&lt; double &gt; &amp;b_dof, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_DofLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_DofLoops, double hEps, xt::pyarray&lt; double &gt; &amp;hReg, xt::pyarray&lt; double &gt; &amp;Cx, xt::pyarray&lt; double &gt; &amp;Cy, xt::pyarray&lt; double &gt; &amp;CTx, xt::pyarray&lt; double &gt; &amp;CTy, xt::pyarray&lt; double &gt; &amp;dLow, double run_cfl, xt::pyarray&lt; double &gt; &amp;edge_based_cfl, int debug)</argsstring>
        <name>calculateEdgeBasedCFL</name>
        <reimplements refid="classproteus_1_1_s_w2_d_c_v__base_1a5bd0aac3317cf4502674430006424386">calculateEdgeBasedCFL</reimplements>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDOFsPerEqn</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>lumped_mass_matrix</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>b_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_DofLoops</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hEps</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hReg</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>Cx</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>Cy</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>CTx</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>CTy</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dLow</declname>
        </param>
        <param>
          <type>double</type>
          <declname>run_cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>edge_based_cfl</declname>
        </param>
        <param>
          <type>int</type>
          <declname>debug</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="1144" column="10" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="1144" bodyend="1302"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_s_w2_d_c_v_1a7fa01e59b0eb34efbab75be01799e138" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::calculateResidual</definition>
        <argsstring>(xt::pyarray&lt; double &gt; &amp;mesh_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_dof, xt::pyarray&lt; double &gt; &amp;mesh_velocity_dof, double MOVING_DOMAIN, xt::pyarray&lt; int &gt; &amp;mesh_l2g, xt::pyarray&lt; double &gt; &amp;dV_ref, xt::pyarray&lt; double &gt; &amp;h_trial_ref, xt::pyarray&lt; double &gt; &amp;h_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;h_test_ref, xt::pyarray&lt; double &gt; &amp;h_grad_test_ref, xt::pyarray&lt; double &gt; &amp;vel_trial_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;vel_test_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_test_ref, xt::pyarray&lt; double &gt; &amp;mesh_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;dS_ref, xt::pyarray&lt; double &gt; &amp;h_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;h_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;h_test_trace_ref, xt::pyarray&lt; double &gt; &amp;h_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_test_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;normal_ref, xt::pyarray&lt; double &gt; &amp;boundaryJac_ref, xt::pyarray&lt; double &gt; &amp;elementDiameter, int nElements_global, double useRBLES, double useMetrics, double alphaBDF, double nu, double g, xt::pyarray&lt; int &gt; &amp;h_l2g, xt::pyarray&lt; int &gt; &amp;vel_l2g, xt::pyarray&lt; double &gt; &amp;h_dof_old, xt::pyarray&lt; double &gt; &amp;hu_dof_old, xt::pyarray&lt; double &gt; &amp;hv_dof_old, xt::pyarray&lt; double &gt; &amp;b_dof, xt::pyarray&lt; double &gt; &amp;h_dof, xt::pyarray&lt; double &gt; &amp;hu_dof, xt::pyarray&lt; double &gt; &amp;hv_dof, xt::pyarray&lt; double &gt; &amp;h_dof_sge, xt::pyarray&lt; double &gt; &amp;hu_dof_sge, xt::pyarray&lt; double &gt; &amp;hv_dof_sge, xt::pyarray&lt; double &gt; &amp;q_mass_acc, xt::pyarray&lt; double &gt; &amp;q_mom_hu_acc, xt::pyarray&lt; double &gt; &amp;q_mom_hv_acc, xt::pyarray&lt; double &gt; &amp;q_mass_adv, xt::pyarray&lt; double &gt; &amp;q_mass_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_mom_hu_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_mom_hv_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_cfl, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hu_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hu_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hv_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hv_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hv_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hv_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hu_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hu_colind, int offset_h, int offset_hu, int offset_hv, int stride_h, int stride_hu, int stride_hv, xt::pyarray&lt; double &gt; &amp;globalResidual, int nExteriorElementBoundaries_global, xt::pyarray&lt; int &gt; &amp;exteriorElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryElementsArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryLocalElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_h, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_hu, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_hv, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_h, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_hu, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_hv, xt::pyarray&lt; int &gt; &amp;isDiffusiveFluxBoundary_hu, xt::pyarray&lt; int &gt; &amp;isDiffusiveFluxBoundary_hv, xt::pyarray&lt; double &gt; &amp;ebqe_bc_h_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mass_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mom_hu_adv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mom_hv_adv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_hu_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_hu_diff_ext, xt::pyarray&lt; double &gt; &amp;ebqe_penalty_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_hv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_hv_diff_ext, xt::pyarray&lt; double &gt; &amp;q_velocity, xt::pyarray&lt; double &gt; &amp;ebqe_velocity, xt::pyarray&lt; double &gt; &amp;flux, xt::pyarray&lt; double &gt; &amp;elementResidual_h_save, xt::pyarray&lt; double &gt; &amp;Cx, xt::pyarray&lt; double &gt; &amp;Cy, xt::pyarray&lt; double &gt; &amp;CTx, xt::pyarray&lt; double &gt; &amp;CTy, int numDOFsPerEqn, int NNZ, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_DofLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_DofLoops, xt::pyarray&lt; double &gt; &amp;lumped_mass_matrix, double cfl_run, double hEps, xt::pyarray&lt; double &gt; &amp;hReg, xt::pyarray&lt; double &gt; &amp;hnp1_at_quad_point, xt::pyarray&lt; double &gt; &amp;hunp1_at_quad_point, xt::pyarray&lt; double &gt; &amp;hvnp1_at_quad_point, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hu, xt::pyarray&lt; double &gt; &amp;extendedSourceTerm_hv, xt::pyarray&lt; double &gt; &amp;dH_minus_dL, xt::pyarray&lt; double &gt; &amp;muH_minus_muL, double cE, int LUMPED_MASS_MATRIX, double dt, int LINEAR_FRICTION, double mannings, xt::pyarray&lt; double &gt; &amp;quantDOFs, int SECOND_CALL_CALCULATE_RESIDUAL, int COMPUTE_NORMALS, xt::pyarray&lt; double &gt; &amp;normalx, xt::pyarray&lt; double &gt; &amp;normaly, xt::pyarray&lt; double &gt; &amp;dLow, xt::pyarray&lt; double &gt; &amp;hBT, xt::pyarray&lt; double &gt; &amp;huBT, xt::pyarray&lt; double &gt; &amp;hvBT, int lstage)</argsstring>
        <name>calculateResidual</name>
        <reimplements refid="classproteus_1_1_s_w2_d_c_v__base_1a19fcf6437a3aa073de583d06143d6b00">calculateResidual</reimplements>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_velocity_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>MOVING_DOMAIN</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>elementDiameter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useRBLES</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useMetrics</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaBDF</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>h_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>vel_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>b_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mass_acc</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hu_acc</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hv_acc</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mass_adv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mass_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hu_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hv_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hu_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hu_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hv_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hv_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hv_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hv_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hu_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hu_colind</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_hu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_hv</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_hu</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>globalResidual</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDiffusiveFluxBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDiffusiveFluxBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_h_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mass_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mom_hu_adv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mom_hv_adv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_hu_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_hu_diff_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_penalty_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_hv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_hv_diff_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_velocity</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_velocity</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>elementResidual_h_save</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>Cx</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>Cy</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>CTx</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>CTy</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDOFsPerEqn</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NNZ</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>lumped_mass_matrix</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cfl_run</declname>
        </param>
        <param>
          <type>double</type>
          <declname>hEps</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hReg</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hnp1_at_quad_point</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hunp1_at_quad_point</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hvnp1_at_quad_point</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>extendedSourceTerm_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dH_minus_dL</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>muH_minus_muL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cE</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LUMPED_MASS_MATRIX</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LINEAR_FRICTION</declname>
        </param>
        <param>
          <type>double</type>
          <declname>mannings</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>quantDOFs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>SECOND_CALL_CALCULATE_RESIDUAL</declname>
        </param>
        <param>
          <type>int</type>
          <declname>COMPUTE_NORMALS</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normalx</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normaly</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dLow</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>huBT</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hvBT</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lstage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="1304" column="8" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="1304" bodyend="1850"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_s_w2_d_c_v_1a08e6446a4ad3ab39f68a77e954fc5c97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::calculateMassMatrix</definition>
        <argsstring>(xt::pyarray&lt; double &gt; &amp;mesh_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_dof, xt::pyarray&lt; double &gt; &amp;mesh_velocity_dof, double MOVING_DOMAIN, xt::pyarray&lt; int &gt; &amp;mesh_l2g, xt::pyarray&lt; double &gt; &amp;dV_ref, xt::pyarray&lt; double &gt; &amp;h_trial_ref, xt::pyarray&lt; double &gt; &amp;h_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;h_test_ref, xt::pyarray&lt; double &gt; &amp;h_grad_test_ref, xt::pyarray&lt; double &gt; &amp;vel_trial_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;vel_test_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_test_ref, xt::pyarray&lt; double &gt; &amp;mesh_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;dS_ref, xt::pyarray&lt; double &gt; &amp;h_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;h_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;h_test_trace_ref, xt::pyarray&lt; double &gt; &amp;h_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_test_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;normal_ref, xt::pyarray&lt; double &gt; &amp;boundaryJac_ref, xt::pyarray&lt; double &gt; &amp;elementDiameter, int nElements_global, double useRBLES, double useMetrics, double alphaBDF, double nu, double g, xt::pyarray&lt; int &gt; &amp;h_l2g, xt::pyarray&lt; int &gt; &amp;vel_l2g, xt::pyarray&lt; double &gt; &amp;b_dof, xt::pyarray&lt; double &gt; &amp;h_dof, xt::pyarray&lt; double &gt; &amp;hu_dof, xt::pyarray&lt; double &gt; &amp;hv_dof, xt::pyarray&lt; double &gt; &amp;h_dof_sge, xt::pyarray&lt; double &gt; &amp;hu_dof_sge, xt::pyarray&lt; double &gt; &amp;hv_dof_sge, xt::pyarray&lt; double &gt; &amp;q_mass_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_mom_hu_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_mom_hv_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_cfl, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hu_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hu_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hv_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hv_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hv_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hv_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hu_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hu_colind, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_hv, xt::pyarray&lt; double &gt; &amp;globalJacobian, int nExteriorElementBoundaries_global, xt::pyarray&lt; int &gt; &amp;exteriorElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryElementsArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryLocalElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_h, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_hu, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_hv, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_h, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_hu, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_hv, xt::pyarray&lt; int &gt; &amp;isDiffusiveFluxBoundary_hu, xt::pyarray&lt; int &gt; &amp;isDiffusiveFluxBoundary_hv, xt::pyarray&lt; double &gt; &amp;ebqe_bc_h_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mass_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mom_hu_adv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mom_hv_adv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_hu_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_hu_diff_ext, xt::pyarray&lt; double &gt; &amp;ebqe_penalty_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_hv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_hv_diff_ext, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_h_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_h_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_h_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hu_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hu_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hu_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hv_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hv_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hv_hv, double dt)</argsstring>
        <name>calculateMassMatrix</name>
        <reimplements refid="classproteus_1_1_s_w2_d_c_v__base_1a7c76a593aa9056241aa375c0fb1b2ede">calculateMassMatrix</reimplements>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_velocity_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>MOVING_DOMAIN</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>elementDiameter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useRBLES</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useMetrics</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaBDF</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>h_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>vel_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>b_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mass_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hu_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hv_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hu_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hu_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hv_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hv_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hv_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hv_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hu_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hu_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>globalJacobian</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDiffusiveFluxBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDiffusiveFluxBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_h_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mass_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mom_hu_adv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mom_hv_adv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_hu_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_hu_diff_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_penalty_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_hv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_hv_diff_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_h_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_h_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_h_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hu_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hu_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hu_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hv_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hv_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hv_hv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="1852" column="8" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="1852" bodyend="1972"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_s_w2_d_c_v_1a971fc58a27027ec96d1f8936ea2a8292" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;::calculateLumpedMassMatrix</definition>
        <argsstring>(xt::pyarray&lt; double &gt; &amp;mesh_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_dof, xt::pyarray&lt; double &gt; &amp;mesh_velocity_dof, double MOVING_DOMAIN, xt::pyarray&lt; int &gt; &amp;mesh_l2g, xt::pyarray&lt; double &gt; &amp;dV_ref, xt::pyarray&lt; double &gt; &amp;h_trial_ref, xt::pyarray&lt; double &gt; &amp;h_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;h_test_ref, xt::pyarray&lt; double &gt; &amp;h_grad_test_ref, xt::pyarray&lt; double &gt; &amp;vel_trial_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;vel_test_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_test_ref, xt::pyarray&lt; double &gt; &amp;mesh_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;dS_ref, xt::pyarray&lt; double &gt; &amp;h_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;h_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;h_test_trace_ref, xt::pyarray&lt; double &gt; &amp;h_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_test_trace_ref, xt::pyarray&lt; double &gt; &amp;vel_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;normal_ref, xt::pyarray&lt; double &gt; &amp;boundaryJac_ref, xt::pyarray&lt; double &gt; &amp;elementDiameter, int nElements_global, double useRBLES, double useMetrics, double alphaBDF, double nu, double g, xt::pyarray&lt; int &gt; &amp;h_l2g, xt::pyarray&lt; int &gt; &amp;vel_l2g, xt::pyarray&lt; double &gt; &amp;b_dof, xt::pyarray&lt; double &gt; &amp;h_dof, xt::pyarray&lt; double &gt; &amp;hu_dof, xt::pyarray&lt; double &gt; &amp;hv_dof, xt::pyarray&lt; double &gt; &amp;h_dof_sge, xt::pyarray&lt; double &gt; &amp;hu_dof_sge, xt::pyarray&lt; double &gt; &amp;hv_dof_sge, xt::pyarray&lt; double &gt; &amp;q_mass_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_mom_hu_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_mom_hv_acc_beta_bdf, xt::pyarray&lt; double &gt; &amp;q_cfl, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hu_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hu_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hv_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hu_hv_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hv_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hv_colind, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hu_rowptr, xt::pyarray&lt; int &gt; &amp;sdInfo_hv_hu_colind, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_h_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_h_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hu_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hu_hv, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_h, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_hu, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_hv_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_hv_hv, xt::pyarray&lt; double &gt; &amp;globalJacobian, int nExteriorElementBoundaries_global, xt::pyarray&lt; int &gt; &amp;exteriorElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryElementsArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryLocalElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_h, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_hu, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_hv, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_h, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_hu, xt::pyarray&lt; int &gt; &amp;isAdvectiveFluxBoundary_hv, xt::pyarray&lt; int &gt; &amp;isDiffusiveFluxBoundary_hu, xt::pyarray&lt; int &gt; &amp;isDiffusiveFluxBoundary_hv, xt::pyarray&lt; double &gt; &amp;ebqe_bc_h_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mass_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mom_hu_adv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_mom_hv_adv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_hu_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_hu_diff_ext, xt::pyarray&lt; double &gt; &amp;ebqe_penalty_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_hv_ext, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_hv_diff_ext, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_h_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_h_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_h_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hu_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hu_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hu_hv, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hv_h, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hv_hu, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_hv_hv, double dt)</argsstring>
        <name>calculateLumpedMassMatrix</name>
        <reimplements refid="classproteus_1_1_s_w2_d_c_v__base_1a21857521d58062e9d1ae472066f1367d">calculateLumpedMassMatrix</reimplements>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_velocity_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>MOVING_DOMAIN</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>vel_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>elementDiameter</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useRBLES</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useMetrics</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaBDF</declname>
        </param>
        <param>
          <type>double</type>
          <declname>nu</declname>
        </param>
        <param>
          <type>double</type>
          <declname>g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>h_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>vel_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>b_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>h_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hu_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>hv_dof_sge</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mass_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hu_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_mom_hv_acc_beta_bdf</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hu_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hu_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hv_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hu_hv_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hv_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hv_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hu_rowptr</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>sdInfo_hv_hu_colind</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_h_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_h_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hu_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hu_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_hv_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_hv_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>globalJacobian</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isAdvectiveFluxBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDiffusiveFluxBoundary_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDiffusiveFluxBoundary_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_h_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mass_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mom_hu_adv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_mom_hv_adv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_hu_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_hu_diff_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_penalty_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_hv_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_hv_diff_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_h_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_h_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_h_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hu_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hu_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hu_hv</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hv_h</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hv_hu</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_hv_hv</declname>
        </param>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="1974" column="8" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="1974" bodyend="2094"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;</label>
        <link refid="classproteus_1_1_s_w2_d_c_v"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>proteus::SW2DCV_base</label>
        <link refid="classproteus_1_1_s_w2_d_c_v__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>proteus::SW2DCV&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;</label>
        <link refid="classproteus_1_1_s_w2_d_c_v"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>proteus::SW2DCV_base</label>
        <link refid="classproteus_1_1_s_w2_d_c_v__base"/>
        <childnode refid="3" relation="usage">
          <edgelabel>Kmax</edgelabel>
          <edgelabel>Rneg</edgelabel>
          <edgelabel>Rpos</edgelabel>
          <edgelabel>hLow</edgelabel>
          <edgelabel>huLow</edgelabel>
          <edgelabel>hvLow</edgelabel>
        </childnode>
      </node>
      <node id="3">
        <label>std::valarray&lt; double &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" line="346" column="1" bodyfile="/Users/cekees/proteus/proteus/mprans/SW2DCV.h" bodystart="346" bodyend="2095"/>
    <listofallmembers>
      <member refid="classproteus_1_1_s_w2_d_c_v_1ad75334d654320f591240fd36d0ce19b2" prot="public" virt="non-virtual"><scope>proteus::SW2DCV</scope><name>calculateCFL</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v_1a6a5061dc4af0d39057452992e39f8eff" prot="public" virt="virtual"><scope>proteus::SW2DCV</scope><name>calculateEdgeBasedCFL</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v_1a971fc58a27027ec96d1f8936ea2a8292" prot="public" virt="virtual"><scope>proteus::SW2DCV</scope><name>calculateLumpedMassMatrix</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v_1a08e6446a4ad3ab39f68a77e954fc5c97" prot="public" virt="virtual"><scope>proteus::SW2DCV</scope><name>calculateMassMatrix</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v_1a7fa01e59b0eb34efbab75be01799e138" prot="public" virt="virtual"><scope>proteus::SW2DCV</scope><name>calculateResidual</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v_1a42fa8af0f0201d2e8628fc0882be65b3" prot="public" virt="non-virtual"><scope>proteus::SW2DCV</scope><name>ck</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v_1a55def2a2da653a465d2ba407c14eeb6b" prot="public" virt="virtual"><scope>proteus::SW2DCV</scope><name>convexLimiting</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v_1ae3140262de2a97188c35e91820ffea06" prot="public" virt="virtual"><scope>proteus::SW2DCV</scope><name>FCTStep</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v__base_1abdadd2784c820637d6c58aff40c7abfc" prot="public" virt="non-virtual"><scope>proteus::SW2DCV</scope><name>hLow</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v__base_1aa7c01772aa7d25dc5034580569e5db59" prot="public" virt="non-virtual"><scope>proteus::SW2DCV</scope><name>huLow</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v__base_1a0fc4a82d4753808173935f72ed215769" prot="public" virt="non-virtual"><scope>proteus::SW2DCV</scope><name>hvLow</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v__base_1a0036578481a41464d1283b76697f4ae7" prot="public" virt="non-virtual"><scope>proteus::SW2DCV</scope><name>Kmax</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v_1a0c50c147886c351f2c336e56b4594a92" prot="public" virt="non-virtual"><scope>proteus::SW2DCV</scope><name>maxWaveSpeedIterativeProcess</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v_1a15b751910485ef014d5e17e2d1458b2c" prot="public" virt="non-virtual"><scope>proteus::SW2DCV</scope><name>maxWaveSpeedSharpInitialGuess</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v_1a436d94ac8ffa3d1c04f5233796fda997" prot="public" virt="non-virtual"><scope>proteus::SW2DCV</scope><name>nDOF_test_X_trial_element</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v__base_1a2e6f6c26d3d13bff771114b84d5d7b76" prot="public" virt="non-virtual"><scope>proteus::SW2DCV</scope><name>Rneg</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v__base_1a16ecf99dd322a5665ec07245b2399b7b" prot="public" virt="non-virtual"><scope>proteus::SW2DCV</scope><name>Rpos</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v_1a6061b14676c6805006ffe7a0d2dc7f57" prot="public" virt="non-virtual"><scope>proteus::SW2DCV</scope><name>SW2DCV</name></member>
      <member refid="classproteus_1_1_s_w2_d_c_v__base_1a6f4bc17ccb4d3cacdbf16c378b83afa4" prot="public" virt="virtual"><scope>proteus::SW2DCV</scope><name>~SW2DCV_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
