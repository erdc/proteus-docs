<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="en-US">
  <compounddef id="classproteus_1_1_v_o_f__base" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>proteus::VOF_base</compoundname>
    <derivedcompoundref refid="classproteus_1_1_v_o_f" prot="public" virt="non-virtual">proteus::VOF&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;</derivedcompoundref>
    <includes refid="_v_o_f_8h" local="no">/Users/cekees/proteus/proteus/mprans/VOF.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classproteus_1_1_v_o_f__base_1a8e8fe6b24e6c342a253ff5ae8e87e9ba" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::VOF_base::Rpos</definition>
        <argsstring></argsstring>
        <name>Rpos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="48" column="19" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_v_o_f__base_1adac27c539db83f627fb86c0d4e64b87e" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::VOF_base::Rneg</definition>
        <argsstring></argsstring>
        <name>Rneg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="48" column="24" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_v_o_f__base_1a765cbd01dda770ea046ff03ec07c0d8f" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::VOF_base::FluxCorrectionMatrix</definition>
        <argsstring></argsstring>
        <name>FluxCorrectionMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="49" column="19" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_v_o_f__base_1a30c38736a3089df041e6a47873ade3a8" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::VOF_base::TransportMatrix</definition>
        <argsstring></argsstring>
        <name>TransportMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="50" column="19" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_v_o_f__base_1a71c68a5c66a446b71bbf106258677087" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::VOF_base::TransposeTransportMatrix</definition>
        <argsstring></argsstring>
        <name>TransposeTransportMatrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="50" column="35" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_v_o_f__base_1a136be66f29797d0a3198fbe54d42cffe" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::VOF_base::psi</definition>
        <argsstring></argsstring>
        <name>psi</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="51" column="19" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_v_o_f__base_1add02e96979382d838c7dc05894b673fd" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::VOF_base::eta</definition>
        <argsstring></argsstring>
        <name>eta</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="51" column="23" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_v_o_f__base_1a898494c6ae5c679ccb49265b2907bf7d" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::VOF_base::global_entropy_residual</definition>
        <argsstring></argsstring>
        <name>global_entropy_residual</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="51" column="27" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_v_o_f__base_1ad44da89fd183682e1f8ee1a24ee12547" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::VOF_base::boundary_integral</definition>
        <argsstring></argsstring>
        <name>boundary_integral</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="51" column="51" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_v_o_f__base_1a7cda0f58b2ed4cf66480e28a1cfafe05" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::VOF_base::maxVel</definition>
        <argsstring></argsstring>
        <name>maxVel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="52" column="19" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classproteus_1_1_v_o_f__base_1a5fc2aa58a5a8443a082fe07b8d69832f" prot="public" static="no" mutable="no">
        <type>std::valarray&lt; double &gt;</type>
        <definition>std::valarray&lt;double&gt; proteus::VOF_base::maxEntRes</definition>
        <argsstring></argsstring>
        <name>maxEntRes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="52" column="25" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classproteus_1_1_v_o_f__base_1a765ee1139e3ea0cae888188367a673a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual proteus::VOF_base::~VOF_base</definition>
        <argsstring>()</argsstring>
        <name>~VOF_base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="53" column="13" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_v_o_f__base_1a930b1ff65bdefd36b63affb7426407e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::VOF_base::calculateResidualElementBased</definition>
        <argsstring>(double dt, xt::pyarray&lt; double &gt; &amp;mesh_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_dof, xt::pyarray&lt; double &gt; &amp;mesh_velocity_dof, double MOVING_DOMAIN, xt::pyarray&lt; int &gt; &amp;mesh_l2g, xt::pyarray&lt; double &gt; &amp;dV_ref, xt::pyarray&lt; double &gt; &amp;u_trial_ref, xt::pyarray&lt; double &gt; &amp;u_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;u_test_ref, xt::pyarray&lt; double &gt; &amp;u_grad_test_ref, xt::pyarray&lt; double &gt; &amp;mesh_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;dS_ref, xt::pyarray&lt; double &gt; &amp;u_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;u_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;u_test_trace_ref, xt::pyarray&lt; double &gt; &amp;u_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;normal_ref, xt::pyarray&lt; double &gt; &amp;boundaryJac_ref, int nElements_global, double useMetrics, double alphaBDF, int lag_shockCapturing, double shockCapturingDiffusion, double sc_uref, double sc_alpha, const xt::pyarray&lt; double &gt; &amp;q_porosity, const xt::pyarray&lt; double &gt; &amp;porosity_dof, xt::pyarray&lt; int &gt; &amp;u_l2g, xt::pyarray&lt; int &gt; &amp;r_l2g, xt::pyarray&lt; double &gt; &amp;elementDiameter, double degree_polynomial, xt::pyarray&lt; double &gt; &amp;u_dof, xt::pyarray&lt; double &gt; &amp;u_dof_old, xt::pyarray&lt; double &gt; &amp;velocity, xt::pyarray&lt; double &gt; &amp;q_m, xt::pyarray&lt; double &gt; &amp;q_u, xt::pyarray&lt; double &gt; &amp;q_m_betaBDF, xt::pyarray&lt; double &gt; &amp;q_dV, xt::pyarray&lt; double &gt; &amp;q_dV_last, xt::pyarray&lt; double &gt; &amp;cfl, xt::pyarray&lt; double &gt; &amp;edge_based_cfl, xt::pyarray&lt; double &gt; &amp;q_numDiff_u, xt::pyarray&lt; double &gt; &amp;q_numDiff_u_last, int offset_u, int stride_u, xt::pyarray&lt; double &gt; &amp;globalResidual, int nExteriorElementBoundaries_global, xt::pyarray&lt; int &gt; &amp;exteriorElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryElementsArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryLocalElementBoundariesArray, xt::pyarray&lt; double &gt; &amp;ebqe_velocity_ext, const xt::pyarray&lt; double &gt; &amp;ebqe_porosity_ext, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_u, xt::pyarray&lt; double &gt; &amp;ebqe_bc_u_ext, xt::pyarray&lt; int &gt; &amp;isFluxBoundary_u, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_u_ext, xt::pyarray&lt; double &gt; &amp;ebqe_phi, double epsFact, xt::pyarray&lt; double &gt; &amp;ebqe_u, xt::pyarray&lt; double &gt; &amp;ebqe_flux, int stage, xt::pyarray&lt; double &gt; &amp;uTilde_dof, double cE, double cMax, double cK, double uL, double uR, int numDOFs, int NNZ, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_DofLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_DofLoops, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_CellLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_CellLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_CellLoops, xt::pyarray&lt; double &gt; &amp;ML, int LUMPED_MASS_MATRIX, int STABILIZATION_TYPE, int ENTROPY_TYPE, xt::pyarray&lt; double &gt; &amp;uLow, xt::pyarray&lt; double &gt; &amp;dLow, xt::pyarray&lt; double &gt; &amp;dt_times_dH_minus_dL, xt::pyarray&lt; double &gt; &amp;min_u_bc, xt::pyarray&lt; double &gt; &amp;max_u_bc, xt::pyarray&lt; double &gt; &amp;quantDOFs)=0</argsstring>
        <name>calculateResidualElementBased</name>
        <reimplementedby refid="classproteus_1_1_v_o_f_1a0ff10df4b60c407425940f5495aa6a77">calculateResidualElementBased</reimplementedby>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_velocity_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>MOVING_DOMAIN</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useMetrics</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaBDF</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lag_shockCapturing</declname>
        </param>
        <param>
          <type>double</type>
          <declname>shockCapturingDiffusion</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sc_uref</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sc_alpha</declname>
        </param>
        <param>
          <type>const xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_porosity</declname>
        </param>
        <param>
          <type>const xt::pyarray&lt; double &gt; &amp;</type>
          <declname>porosity_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>u_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>r_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>elementDiameter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>degree_polynomial</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_m</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_m_betaBDF</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_dV</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_dV_last</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>edge_based_cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_numDiff_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_numDiff_u_last</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>globalResidual</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_velocity_ext</declname>
        </param>
        <param>
          <type>const xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_porosity_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_u_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isFluxBoundary_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_u_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_phi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsFact</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_flux</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>uTilde_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cE</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cMax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cK</declname>
        </param>
        <param>
          <type>double</type>
          <declname>uL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>uR</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDOFs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NNZ</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_CellLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_CellLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_CellLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ML</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LUMPED_MASS_MATRIX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>STABILIZATION_TYPE</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ENTROPY_TYPE</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>uLow</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dLow</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dt_times_dH_minus_dL</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>min_u_bc</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>max_u_bc</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>quantDOFs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="54" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_v_o_f__base_1adf63bd8b3bcc302fd001de14255e0b39" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::VOF_base::calculateJacobian</definition>
        <argsstring>(xt::pyarray&lt; double &gt; &amp;mesh_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_dof, xt::pyarray&lt; double &gt; &amp;mesh_velocity_dof, double MOVING_DOMAIN, xt::pyarray&lt; int &gt; &amp;mesh_l2g, xt::pyarray&lt; double &gt; &amp;dV_ref, xt::pyarray&lt; double &gt; &amp;u_trial_ref, xt::pyarray&lt; double &gt; &amp;u_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;u_test_ref, xt::pyarray&lt; double &gt; &amp;u_grad_test_ref, xt::pyarray&lt; double &gt; &amp;mesh_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;dS_ref, xt::pyarray&lt; double &gt; &amp;u_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;u_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;u_test_trace_ref, xt::pyarray&lt; double &gt; &amp;u_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;normal_ref, xt::pyarray&lt; double &gt; &amp;boundaryJac_ref, int nElements_global, double useMetrics, double alphaBDF, int lag_shockCapturing, double shockCapturingDiffusion, const xt::pyarray&lt; double &gt; &amp;q_porosity, xt::pyarray&lt; int &gt; &amp;u_l2g, xt::pyarray&lt; int &gt; &amp;r_l2g, xt::pyarray&lt; double &gt; &amp;elementDiameter, xt::pyarray&lt; double &gt; &amp;u_dof, xt::pyarray&lt; double &gt; &amp;velocity, xt::pyarray&lt; double &gt; &amp;q_m_betaBDF, xt::pyarray&lt; double &gt; &amp;cfl, xt::pyarray&lt; double &gt; &amp;q_numDiff_u_last, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_u_u, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_u_u, xt::pyarray&lt; double &gt; &amp;globalJacobian, int nExteriorElementBoundaries_global, xt::pyarray&lt; int &gt; &amp;exteriorElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryElementsArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryLocalElementBoundariesArray, xt::pyarray&lt; double &gt; &amp;ebqe_velocity_ext, const xt::pyarray&lt; double &gt; &amp;ebqe_porosity_ext, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_u, xt::pyarray&lt; double &gt; &amp;ebqe_bc_u_ext, xt::pyarray&lt; int &gt; &amp;isFluxBoundary_u, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_u_ext, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_u_u, int STABILIZATION_TYPE)=0</argsstring>
        <name>calculateJacobian</name>
        <reimplementedby refid="classproteus_1_1_v_o_f_1a3d9767e8fdc254dffa66683772fcd946">calculateJacobian</reimplementedby>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_velocity_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>MOVING_DOMAIN</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useMetrics</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaBDF</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lag_shockCapturing</declname>
        </param>
        <param>
          <type>double</type>
          <declname>shockCapturingDiffusion</declname>
        </param>
        <param>
          <type>const xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_porosity</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>u_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>r_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>elementDiameter</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_m_betaBDF</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_numDiff_u_last</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_u_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_u_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>globalJacobian</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_velocity_ext</declname>
        </param>
        <param>
          <type>const xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_porosity_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_u_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isFluxBoundary_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_u_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_u_u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>STABILIZATION_TYPE</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="153" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_v_o_f__base_1a8b8afd435ca35ed9322e0d52a7076a86" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::VOF_base::FCTStep</definition>
        <argsstring>(double dt, int NNZ, int numDOFs, xt::pyarray&lt; double &gt; &amp;lumped_mass_matrix, xt::pyarray&lt; double &gt; &amp;soln, xt::pyarray&lt; double &gt; &amp;solH, xt::pyarray&lt; double &gt; &amp;uLow, xt::pyarray&lt; double &gt; &amp;dLow, xt::pyarray&lt; double &gt; &amp;limited_solution, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_DofLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_DofLoops, xt::pyarray&lt; double &gt; &amp;MassMatrix, xt::pyarray&lt; double &gt; &amp;dt_times_dH_minus_dL, xt::pyarray&lt; double &gt; &amp;min_u_bc, xt::pyarray&lt; double &gt; &amp;max_u_bc, int LUMPED_MASS_MATRIX, int STABILIZATION_TYPE)=0</argsstring>
        <name>FCTStep</name>
        <reimplementedby refid="classproteus_1_1_v_o_f_1ad9ab222841510461b80757cdb04ec0e0">FCTStep</reimplementedby>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NNZ</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDOFs</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>lumped_mass_matrix</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>soln</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>solH</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>uLow</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dLow</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>limited_solution</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>MassMatrix</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dt_times_dH_minus_dL</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>min_u_bc</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>max_u_bc</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LUMPED_MASS_MATRIX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>STABILIZATION_TYPE</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="208" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classproteus_1_1_v_o_f__base_1ac3c839b1322ee796407be597c7acf5b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void proteus::VOF_base::calculateResidualEdgeBased</definition>
        <argsstring>(double dt, xt::pyarray&lt; double &gt; &amp;mesh_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;mesh_dof, xt::pyarray&lt; double &gt; &amp;mesh_velocity_dof, double MOVING_DOMAIN, xt::pyarray&lt; int &gt; &amp;mesh_l2g, xt::pyarray&lt; double &gt; &amp;dV_ref, xt::pyarray&lt; double &gt; &amp;u_trial_ref, xt::pyarray&lt; double &gt; &amp;u_grad_trial_ref, xt::pyarray&lt; double &gt; &amp;u_test_ref, xt::pyarray&lt; double &gt; &amp;u_grad_test_ref, xt::pyarray&lt; double &gt; &amp;mesh_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;mesh_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;dS_ref, xt::pyarray&lt; double &gt; &amp;u_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;u_grad_trial_trace_ref, xt::pyarray&lt; double &gt; &amp;u_test_trace_ref, xt::pyarray&lt; double &gt; &amp;u_grad_test_trace_ref, xt::pyarray&lt; double &gt; &amp;normal_ref, xt::pyarray&lt; double &gt; &amp;boundaryJac_ref, int nElements_global, double useMetrics, double alphaBDF, int lag_shockCapturing, double shockCapturingDiffusion, double sc_uref, double sc_alpha, const xt::pyarray&lt; double &gt; &amp;q_porosity, const xt::pyarray&lt; double &gt; &amp;porosity_dof, xt::pyarray&lt; int &gt; &amp;u_l2g, xt::pyarray&lt; int &gt; &amp;r_l2g, xt::pyarray&lt; double &gt; &amp;elementDiameter, double degree_polynomial, xt::pyarray&lt; double &gt; &amp;u_dof, xt::pyarray&lt; double &gt; &amp;u_dof_old, xt::pyarray&lt; double &gt; &amp;velocity, xt::pyarray&lt; double &gt; &amp;q_m, xt::pyarray&lt; double &gt; &amp;q_u, xt::pyarray&lt; double &gt; &amp;q_m_betaBDF, xt::pyarray&lt; double &gt; &amp;q_dV, xt::pyarray&lt; double &gt; &amp;q_dV_last, xt::pyarray&lt; double &gt; &amp;cfl, xt::pyarray&lt; double &gt; &amp;edge_based_cfl, xt::pyarray&lt; double &gt; &amp;q_numDiff_u, xt::pyarray&lt; double &gt; &amp;q_numDiff_u_last, int offset_u, int stride_u, xt::pyarray&lt; double &gt; &amp;globalResidual, int nExteriorElementBoundaries_global, xt::pyarray&lt; int &gt; &amp;exteriorElementBoundariesArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryElementsArray, xt::pyarray&lt; int &gt; &amp;elementBoundaryLocalElementBoundariesArray, xt::pyarray&lt; double &gt; &amp;ebqe_velocity_ext, const xt::pyarray&lt; double &gt; &amp;ebqe_porosity_ext, xt::pyarray&lt; int &gt; &amp;isDOFBoundary_u, xt::pyarray&lt; double &gt; &amp;ebqe_bc_u_ext, xt::pyarray&lt; int &gt; &amp;isFluxBoundary_u, xt::pyarray&lt; double &gt; &amp;ebqe_bc_flux_u_ext, xt::pyarray&lt; double &gt; &amp;ebqe_phi, double epsFact, xt::pyarray&lt; double &gt; &amp;ebqe_u, xt::pyarray&lt; double &gt; &amp;ebqe_flux, int stage, xt::pyarray&lt; double &gt; &amp;uTilde_dof, double cE, double cMax, double cK, double uL, double uR, int numDOFs, int NNZ, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_DofLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_DofLoops, xt::pyarray&lt; int &gt; &amp;csrRowIndeces_CellLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_CellLoops, xt::pyarray&lt; int &gt; &amp;csrColumnOffsets_eb_CellLoops, xt::pyarray&lt; double &gt; &amp;ML, int LUMPED_MASS_MATRIX, int STABILIZATION_TYPE, int ENTROPY_TYPE, xt::pyarray&lt; double &gt; &amp;uLow, xt::pyarray&lt; double &gt; &amp;dLow, xt::pyarray&lt; double &gt; &amp;dt_times_dH_minus_dL, xt::pyarray&lt; double &gt; &amp;min_u_bc, xt::pyarray&lt; double &gt; &amp;max_u_bc, xt::pyarray&lt; double &gt; &amp;quantDOFs)=0</argsstring>
        <name>calculateResidualEdgeBased</name>
        <reimplementedby refid="classproteus_1_1_v_o_f_1a5e0676e7b1ad54cf47a991b19427de20">calculateResidualEdgeBased</reimplementedby>
        <param>
          <type>double</type>
          <declname>dt</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_velocity_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>MOVING_DOMAIN</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>mesh_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dV_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_trial_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_test_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>mesh_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dS_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_trial_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_grad_test_trace_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>normal_ref</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>boundaryJac_ref</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nElements_global</declname>
        </param>
        <param>
          <type>double</type>
          <declname>useMetrics</declname>
        </param>
        <param>
          <type>double</type>
          <declname>alphaBDF</declname>
        </param>
        <param>
          <type>int</type>
          <declname>lag_shockCapturing</declname>
        </param>
        <param>
          <type>double</type>
          <declname>shockCapturingDiffusion</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sc_uref</declname>
        </param>
        <param>
          <type>double</type>
          <declname>sc_alpha</declname>
        </param>
        <param>
          <type>const xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_porosity</declname>
        </param>
        <param>
          <type>const xt::pyarray&lt; double &gt; &amp;</type>
          <declname>porosity_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>u_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>r_l2g</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>elementDiameter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>degree_polynomial</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_dof</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>u_dof_old</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>velocity</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_m</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_m_betaBDF</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_dV</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_dV_last</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>edge_based_cfl</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_numDiff_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>q_numDiff_u_last</declname>
        </param>
        <param>
          <type>int</type>
          <declname>offset_u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stride_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>globalResidual</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nExteriorElementBoundaries_global</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>exteriorElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryElementsArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>elementBoundaryLocalElementBoundariesArray</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_velocity_ext</declname>
        </param>
        <param>
          <type>const xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_porosity_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isDOFBoundary_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_u_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>isFluxBoundary_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_bc_flux_u_ext</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_phi</declname>
        </param>
        <param>
          <type>double</type>
          <declname>epsFact</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_u</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ebqe_flux</declname>
        </param>
        <param>
          <type>int</type>
          <declname>stage</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>uTilde_dof</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cE</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cMax</declname>
        </param>
        <param>
          <type>double</type>
          <declname>cK</declname>
        </param>
        <param>
          <type>double</type>
          <declname>uL</declname>
        </param>
        <param>
          <type>double</type>
          <declname>uR</declname>
        </param>
        <param>
          <type>int</type>
          <declname>numDOFs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>NNZ</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_DofLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrRowIndeces_CellLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_CellLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; int &gt; &amp;</type>
          <declname>csrColumnOffsets_eb_CellLoops</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>ML</declname>
        </param>
        <param>
          <type>int</type>
          <declname>LUMPED_MASS_MATRIX</declname>
        </param>
        <param>
          <type>int</type>
          <declname>STABILIZATION_TYPE</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ENTROPY_TYPE</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>uLow</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dLow</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>dt_times_dH_minus_dL</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>min_u_bc</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>max_u_bc</declname>
        </param>
        <param>
          <type>xt::pyarray&lt; double &gt; &amp;</type>
          <declname>quantDOFs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="226" column="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>proteus::VOF&lt; CompKernelType, nSpace, nQuadraturePoints_element, nDOF_mesh_trial_element, nDOF_trial_element, nDOF_test_element, nQuadraturePoints_elementBoundary &gt;</label>
        <link refid="classproteus_1_1_v_o_f"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>proteus::VOF_base</label>
        <link refid="classproteus_1_1_v_o_f__base"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>proteus::VOF_base</label>
        <link refid="classproteus_1_1_v_o_f__base"/>
        <childnode refid="2" relation="usage">
          <edgelabel>FluxCorrectionMatrix</edgelabel>
          <edgelabel>Rneg</edgelabel>
          <edgelabel>Rpos</edgelabel>
          <edgelabel>TransportMatrix</edgelabel>
          <edgelabel>TransposeTransportMatrix</edgelabel>
          <edgelabel>boundary_integral</edgelabel>
          <edgelabel>eta</edgelabel>
          <edgelabel>global_entropy_residual</edgelabel>
          <edgelabel>maxEntRes</edgelabel>
          <edgelabel>maxVel</edgelabel>
          <edgelabel>...</edgelabel>
        </childnode>
      </node>
      <node id="2">
        <label>std::valarray&lt; double &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/Users/cekees/proteus/proteus/mprans/VOF.h" line="44" column="3" bodyfile="/Users/cekees/proteus/proteus/mprans/VOF.h" bodystart="45" bodyend="325"/>
    <listofallmembers>
      <member refid="classproteus_1_1_v_o_f__base_1ad44da89fd183682e1f8ee1a24ee12547" prot="public" virt="non-virtual"><scope>proteus::VOF_base</scope><name>boundary_integral</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1adf63bd8b3bcc302fd001de14255e0b39" prot="public" virt="pure-virtual"><scope>proteus::VOF_base</scope><name>calculateJacobian</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1ac3c839b1322ee796407be597c7acf5b2" prot="public" virt="pure-virtual"><scope>proteus::VOF_base</scope><name>calculateResidualEdgeBased</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1a930b1ff65bdefd36b63affb7426407e5" prot="public" virt="pure-virtual"><scope>proteus::VOF_base</scope><name>calculateResidualElementBased</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1add02e96979382d838c7dc05894b673fd" prot="public" virt="non-virtual"><scope>proteus::VOF_base</scope><name>eta</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1a8b8afd435ca35ed9322e0d52a7076a86" prot="public" virt="pure-virtual"><scope>proteus::VOF_base</scope><name>FCTStep</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1a765cbd01dda770ea046ff03ec07c0d8f" prot="public" virt="non-virtual"><scope>proteus::VOF_base</scope><name>FluxCorrectionMatrix</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1a898494c6ae5c679ccb49265b2907bf7d" prot="public" virt="non-virtual"><scope>proteus::VOF_base</scope><name>global_entropy_residual</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1a5fc2aa58a5a8443a082fe07b8d69832f" prot="public" virt="non-virtual"><scope>proteus::VOF_base</scope><name>maxEntRes</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1a7cda0f58b2ed4cf66480e28a1cfafe05" prot="public" virt="non-virtual"><scope>proteus::VOF_base</scope><name>maxVel</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1a136be66f29797d0a3198fbe54d42cffe" prot="public" virt="non-virtual"><scope>proteus::VOF_base</scope><name>psi</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1adac27c539db83f627fb86c0d4e64b87e" prot="public" virt="non-virtual"><scope>proteus::VOF_base</scope><name>Rneg</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1a8e8fe6b24e6c342a253ff5ae8e87e9ba" prot="public" virt="non-virtual"><scope>proteus::VOF_base</scope><name>Rpos</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1a30c38736a3089df041e6a47873ade3a8" prot="public" virt="non-virtual"><scope>proteus::VOF_base</scope><name>TransportMatrix</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1a71c68a5c66a446b71bbf106258677087" prot="public" virt="non-virtual"><scope>proteus::VOF_base</scope><name>TransposeTransportMatrix</name></member>
      <member refid="classproteus_1_1_v_o_f__base_1a765ee1139e3ea0cae888188367a673a1" prot="public" virt="virtual"><scope>proteus::VOF_base</scope><name>~VOF_base</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
