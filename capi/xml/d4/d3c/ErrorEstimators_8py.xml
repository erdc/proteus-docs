<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d4/d3c/ErrorEstimators_8py" kind="file" language="Python">
    <compoundname>ErrorEstimators.py</compoundname>
    <innerclass refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator" prot="public">proteus::ErrorEstimators::HierarchicalMeshEstimator</innerclass>
    <innernamespace refid="d1/df5/namespaceproteus_1_1ErrorEstimators">proteus::ErrorEstimators</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="d1/df5/namespaceproteus_1_1ErrorEstimators" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">Classes<sp/>for<sp/>a<sp/>posteriori<sp/>error<sp/>estimation</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">..<sp/>inheritance-diagram::<sp/>proteus.ErrorEstimators</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/><sp/><sp/>:parts:<sp/>1</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>absolute_import</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>range</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>object</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.Profiling<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logEvent</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator" kindref="compound">HierarchicalMeshEstimator</ref>(object):</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator_1a8d9a4233a77c2618f44fa6cb291f15f0" kindref="member">__init__</ref>(self,mlTransport):</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator_1a8c492a9fb72984af6ed2d4dfaaf690b4" kindref="member">mlTransport</ref><sp/>=<sp/>mlTransport</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator_1a5bce3c40e5913c60e9075f99dcac3bb4" kindref="member">calculate</ref>(self):</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Norms</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>.<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>FemTools</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t=0.0</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLevels<sp/>=<sp/>len(self.<ref refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator_1a8c492a9fb72984af6ed2d4dfaaf690b4" kindref="member">mlTransport</ref>.uList)</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>nLevels<sp/>&gt;<sp/>1,<sp/></highlight><highlight class="stringliteral">&quot;Need<sp/>at<sp/>least<sp/>two<sp/>grids<sp/>for<sp/>hierarchical<sp/>mesh<sp/>estimate&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefficients<sp/>=<sp/>self.<ref refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator_1a8c492a9fb72984af6ed2d4dfaaf690b4" kindref="member">mlTransport</ref>.modelList[-1].coefficients</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mCoarse<sp/>=<sp/>self.<ref refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator_1a8c492a9fb72984af6ed2d4dfaaf690b4" kindref="member">mlTransport</ref>.modelList[-2]</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uCoarse<sp/>=<sp/>self.<ref refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator_1a8c492a9fb72984af6ed2d4dfaaf690b4" kindref="member">mlTransport</ref>.modelList[-2].u</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFine<sp/>=<sp/>self.<ref refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator_1a8c492a9fb72984af6ed2d4dfaaf690b4" kindref="member">mlTransport</ref>.modelList[-1]</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uFine<sp/>=<sp/>self.<ref refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator_1a8c492a9fb72984af6ed2d4dfaaf690b4" kindref="member">mlTransport</ref>.modelList[-1].u</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj_uCoarse<sp/><sp/>=<sp/>[<ref refid="db/d0a/classproteus_1_1FemTools_1_1FiniteElementFunction" kindref="compound">FemTools.FiniteElementFunction</ref>(mFine.u[ci].femSpace)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(coefficients.nc)]</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj_uCoarse_q<sp/><sp/><sp/>=<sp/>[numpy.zeros(mFine.q[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,ci)].shape,</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(coefficients.nc)]</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementError<sp/>=<sp/>[numpy.zeros((mFine.mesh.nElements_global,),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(coefficients.nc)]</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementTagArray<sp/>=<sp/>numpy.zeros((mFine.mesh.nElements_global,),</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementTagArray.flat[:]=0.0</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localRefinement=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(coefficients.nc):</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d7/d24/classproteus_1_1ErrorEstimators_1_1HierarchicalMeshEstimator_1a8c492a9fb72984af6ed2d4dfaaf690b4" kindref="member">mlTransport</ref>.meshTransfers.prolong_bcListDict[ci][-1].matvec(uCoarse[ci].dof,</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj_uCoarse[ci].dof)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#load<sp/>Dirichlet<sp/>conditions<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dofN,g<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mFine.dirichletConditions[ci].DOFBoundaryConditionsDict.items():</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj_uCoarse[ci].dof[dofN]<sp/>=<sp/><ref refid="d7/db9/namespaceproteus_1_1Optimizers_1ac61a46e0c63f4fca39b193e3457840f9" kindref="member">g</ref>(mFine.dirichletConditions[ci].DOFBoundaryPointDict[dofN],t)</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj_uCoarse[ci].getValues(mFine.q[</highlight><highlight class="stringliteral">&apos;v&apos;</highlight><highlight class="normal">,ci],proj_uCoarse_q[ci])</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>+=<sp/>Norms.L2errorSFEM_local(mFine.q[(</highlight><highlight class="stringliteral">&apos;dV_u&apos;</highlight><highlight class="normal">,ci)],</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mFine.q[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,ci)],</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>proj_uCoarse_q[ci],</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementError[ci])</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>eN<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(mFine.mesh.nElements_global):</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mFine.mesh.nElements_global*elementError[ci][eN]/error)<sp/>&gt;<sp/>5.0:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementTagArray[eN]<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>localRefinement=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>localRefinement:</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementTagArray.flat[:]=1</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d2/d0f/namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;error<sp/>&quot;</highlight><highlight class="normal">+repr(error),level=3)</highlight><highlight class="comment">#mwf<sp/>debug<sp/>turn<sp/>off,&quot;elementTagArray&quot;,elementTagArray</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(error,elementTagArray)</highlight></codeline>
    </programlisting>
    <location file="ErrorEstimators.py"/>
  </compounddef>
</doxygen>
