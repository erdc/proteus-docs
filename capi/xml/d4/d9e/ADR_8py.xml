<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="d4/d9e/ADR_8py" kind="file" language="Python">
    <compoundname>ADR.py</compoundname>
    <innerclass refid="da/d7b/classproteus_1_1ADR_1_1SubgridError" prot="public">proteus::ADR::SubgridError</innerclass>
    <innerclass refid="d4/d4e/classproteus_1_1ADR_1_1ShockCapturing" prot="public">proteus::ADR::ShockCapturing</innerclass>
    <innerclass refid="d1/d12/classproteus_1_1ADR_1_1NumericalFlux__IIPG" prot="public">proteus::ADR::NumericalFlux_IIPG</innerclass>
    <innerclass refid="db/d68/classproteus_1_1ADR_1_1NumericalFlux__SIPG" prot="public">proteus::ADR::NumericalFlux_SIPG</innerclass>
    <innerclass refid="d0/d8f/classproteus_1_1ADR_1_1NumericalFlux__NIPG" prot="public">proteus::ADR::NumericalFlux_NIPG</innerclass>
    <innerclass refid="d5/d64/classproteus_1_1ADR_1_1Coefficients" prot="public">proteus::ADR::Coefficients</innerclass>
    <innerclass refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel" prot="public">proteus::ADR::LevelModel</innerclass>
    <innernamespace refid="da/de6/namespaceproteus_1_1ADR">proteus::ADR</innernamespace>
    <innernamespace refid="d3/d0c/namespaceproteus_1_1cADR">proteus::cADR</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="da/de6/namespaceproteus_1_1ADR" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">An<sp/>optimized<sp/>Advection-Diffusion-Reaction<sp/>module</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>math<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>fabs</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>proteus</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>proteus<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><sp/>cfemIntegrals,<sp/>Quadrature</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="de/ddd/namespaceproteus_1_1NonlinearSolvers" kindref="compound">proteus.NonlinearSolvers</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>NonlinearEquation</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="da/dd2/namespaceproteus_1_1FemTools" kindref="compound">proteus.FemTools</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>(DOFBoundaryConditions,</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FluxBoundaryConditions,</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C0_AffineLinearOnSimplexWithNodalBasis)</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="da/d52/namespaceproteus_1_1Comm" kindref="compound">proteus.Comm</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>globalMax,<sp/>globalSum</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="d6/da7/namespaceproteus_1_1Profiling" kindref="compound">proteus.Profiling</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><sp/>memory</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="d6/da7/namespaceproteus_1_1Profiling" kindref="compound">proteus.Profiling</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><sp/>logEvent<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>log</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="d7/d8b/namespaceproteus_1_1Transport" kindref="compound">proteus.Transport</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>OneLevelTransport</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="d7/ded/namespaceproteus_1_1TransportCoefficients" kindref="compound">proteus.TransportCoefficients</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>TC_base</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="da/dfd/namespaceproteus_1_1SubgridError" kindref="compound">proteus.SubgridError</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>SGE_base</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="db/da7/namespaceproteus_1_1ShockCapturing" kindref="compound">proteus.ShockCapturing</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/><sp/>ShockCapturing_base</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="d8/d66/classproteus_1_1cADR" kindref="compound">proteus.cADR</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="d1/d5a/namespaceproteus_1_1mprans" kindref="compound">proteus.mprans</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cArgumentsDict</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="da/d7b/classproteus_1_1ADR_1_1SubgridError" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="da/d7b/classproteus_1_1ADR_1_1SubgridError" kindref="compound">SubgridError</ref>(<ref refid="d7/dbf/classproteus_1_1SubgridError_1_1SGE__base" kindref="compound">SGE_base</ref>):</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="25"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>SubgridError<sp/>approximation<sp/>for<sp/>ADR<sp/>equations</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>inheritance-diagram::<sp/>SubgridError</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:parts:<sp/>2</highlight></codeline>
<codeline lineno="29"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/d7b/classproteus_1_1ADR_1_1SubgridError_1a94455b49eec13cc8b6d4c4c56d19005a" kindref="member">__init__</ref>(self,coefficients,nd):</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SGE_base.__init__(self,coefficients,nd,lag=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/d7b/classproteus_1_1ADR_1_1SubgridError_1a35293876d008d875f95eacb9d4a1ffb8" kindref="member">initializeElementQuadrature</ref>(self,mesh,t,cq):</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/d7b/classproteus_1_1ADR_1_1SubgridError_1a9be46f50a03c39ecc352bb0244a99295" kindref="member">updateSubgridErrorHistory</ref>(self,initializationPhase=False):</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="da/d7b/classproteus_1_1ADR_1_1SubgridError_1a7ddd2f39cdcd11c2ad21f3a76a0047d1" kindref="member">calculateSubgridError</ref>(self,q):</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="d4/d4e/classproteus_1_1ADR_1_1ShockCapturing" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ShockCapturing(ShockCapturing_base):</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Residual-based<sp/>shock<sp/>capturing<sp/>for<sp/>ADR<sp/>equations</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>inheritance-diagram::<sp/>ShockCapturing</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:parts:<sp/>2</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/d4e/classproteus_1_1ADR_1_1ShockCapturing_1a3e4466138db4af6dd5730d0609e30862" kindref="member">__init__</ref>(self,coefficients,nd,shockCapturingFactor=0.25,lag=True,nStepsToDelay=None):</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ShockCapturing_base.__init__(self,coefficients,nd,shockCapturingFactor,lag)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nStepsToDelay<sp/>=<sp/>nStepsToDelay</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nSteps=0</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.lag:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;ADR.ShockCapturing:<sp/>lagging<sp/>requested<sp/>but<sp/>must<sp/>lag<sp/>the<sp/>first<sp/>step;<sp/>switching<sp/>lagging<sp/>off<sp/>and<sp/>delaying&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nStepsToDelay=1</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.lag=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/d4e/classproteus_1_1ADR_1_1ShockCapturing_1af9c04927ad88c38966c863b009ceab78" kindref="member">initializeElementQuadrature</ref>(self,mesh,t,cq):</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.mesh=mesh</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.numDiff=[]</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.numDiff_last=[]</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.nc):</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.numDiff.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(cq[(</highlight><highlight class="stringliteral">&apos;numDiff&apos;</highlight><highlight class="normal">,ci,ci)])</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.numDiff_last.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(cq[(</highlight><highlight class="stringliteral">&apos;numDiff&apos;</highlight><highlight class="normal">,ci,ci)])</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d4/d4e/classproteus_1_1ADR_1_1ShockCapturing_1ae97d309ee0d194c4d41cd2f1ab9dd94f" kindref="member">updateShockCapturingHistory</ref>(self):</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nSteps<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.lag:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.nc):</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.numDiff_last[ci][:]<sp/>=<sp/>self.numDiff[ci]</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.lag<sp/>==<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.nStepsToDelay<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.nSteps<sp/>&gt;<sp/>self.nStepsToDelay:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;ADR.ShockCapturing:<sp/>switched<sp/>to<sp/>lagged<sp/>shock<sp/>capturing&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.lag<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.numDiff_last=[]</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.nc):</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.numDiff_last.<ref refid="da/dd2/namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(self.numDiff[ci].copy())</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;VOF:<sp/>max<sp/>numDiff<sp/>%e&quot;</highlight><highlight class="normal"><sp/>%<sp/>(<ref refid="da/d52/namespaceproteus_1_1Comm_1a23c807099621eedf0347f6dc84dfaa70" kindref="member">globalMax</ref>(self.numDiff_last[0].<ref refid="d7/daa/group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>()),))</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="d1/d12/classproteus_1_1ADR_1_1NumericalFlux__IIPG" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d1/d12/classproteus_1_1ADR_1_1NumericalFlux__IIPG" kindref="compound">NumericalFlux_IIPG</ref>(<ref refid="de/d87/classproteus_1_1NumericalFlux_1_1Advection__DiagonalUpwind__Diffusion__IIPG__exterior" kindref="compound">proteus.NumericalFlux.Advection_DiagonalUpwind_Diffusion_IIPG_exterior</ref>):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d1/d12/classproteus_1_1ADR_1_1NumericalFlux__IIPG_1a0b2c2751bbc47efcc99f986a366fd325" kindref="member">__init__</ref>(self,vt,getPointwiseBoundaryConditions,</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getAdvectiveFluxBoundaryConditions,</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDiffusiveFluxBoundaryConditions):</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="de/d87/classproteus_1_1NumericalFlux_1_1Advection__DiagonalUpwind__Diffusion__IIPG__exterior_1aa0c40f4a8c27d65dce62970d3507cd5d" kindref="member">proteus.NumericalFlux.Advection_DiagonalUpwind_Diffusion_IIPG_exterior.__init__</ref>(self,vt,getPointwiseBoundaryConditions,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getAdvectiveFluxBoundaryConditions,</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDiffusiveFluxBoundaryConditions)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="db/d68/classproteus_1_1ADR_1_1NumericalFlux__SIPG" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="db/d68/classproteus_1_1ADR_1_1NumericalFlux__SIPG" kindref="compound">NumericalFlux_SIPG</ref>(<ref refid="d4/d65/classproteus_1_1NumericalFlux_1_1Advection__DiagonalUpwind__Diffusion__SIPG__exterior" kindref="compound">proteus.NumericalFlux.Advection_DiagonalUpwind_Diffusion_SIPG_exterior</ref>):</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="db/d68/classproteus_1_1ADR_1_1NumericalFlux__SIPG_1aaae1fb70cb7f34072c57e67f41ba88bb" kindref="member">__init__</ref>(self,vt,getPointwiseBoundaryConditions,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getAdvectiveFluxBoundaryConditions,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDiffusiveFluxBoundaryConditions):</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d65/classproteus_1_1NumericalFlux_1_1Advection__DiagonalUpwind__Diffusion__SIPG__exterior_1a952ccc171dec619257e4e0ca4f0be2ef" kindref="member">proteus.NumericalFlux.Advection_DiagonalUpwind_Diffusion_SIPG_exterior.__init__</ref>(self,vt,getPointwiseBoundaryConditions,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getAdvectiveFluxBoundaryConditions,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDiffusiveFluxBoundaryConditions)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="d0/d8f/classproteus_1_1ADR_1_1NumericalFlux__NIPG" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d0/d8f/classproteus_1_1ADR_1_1NumericalFlux__NIPG" kindref="compound">NumericalFlux_NIPG</ref>(<ref refid="dd/d5a/classproteus_1_1NumericalFlux_1_1Advection__DiagonalUpwind__Diffusion__NIPG__exterior" kindref="compound">proteus.NumericalFlux.Advection_DiagonalUpwind_Diffusion_NIPG_exterior</ref>):</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d0/d8f/classproteus_1_1ADR_1_1NumericalFlux__NIPG_1ae6edb31674ab87ec13e49f72c796f4f9" kindref="member">__init__</ref>(self,vt,getPointwiseBoundaryConditions,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getAdvectiveFluxBoundaryConditions,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDiffusiveFluxBoundaryConditions):</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dd/d5a/classproteus_1_1NumericalFlux_1_1Advection__DiagonalUpwind__Diffusion__NIPG__exterior_1a1a52fb6cff662334027bfb94fdc22ea0" kindref="member">proteus.NumericalFlux.Advection_DiagonalUpwind_Diffusion_NIPG_exterior.__init__</ref>(self,vt,getPointwiseBoundaryConditions,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getAdvectiveFluxBoundaryConditions,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getDiffusiveFluxBoundaryConditions)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal">NumericalFlux<sp/>=<sp/>NumericalFlux_SIPG</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="d5/d64/classproteus_1_1ADR_1_1Coefficients" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients" kindref="compound">Coefficients</ref>(<ref refid="d1/d7a/classproteus_1_1TransportCoefficients_1_1TC__base" kindref="compound">TC_base</ref>):</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Coefficients<sp/>of<sp/>linear<sp/>ADR<sp/>equations</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>inheritance-diagram::<sp/>Coefficients</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:parts:<sp/>2</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>proteus.ctransportCoefficients<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>L2projectEvaluate</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a6d83d628bf475eb0c3b8658cf1e6b3fd" kindref="member">__init__</ref>(self,aOfX,fOfX,velocity=None,nc=1,nd=2,l2proj=None,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timeVaryingCoefficients=False,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>forceStrongDirichlet=False,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useMetrics=0.0,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc_uref=1.0,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sc_beta=1.0,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>embeddedBoundary=False,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>embeddedBoundary_penalty=100.0,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>embeddedBoundary_ghost_penalty=0.1,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>embeddedBoundary_sdf=None,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>embeddedBoundary_u=None):</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a5fc5d226587cc86f47c2745669dfa3d5" kindref="member">embeddedBoundary</ref>=embeddedBoundary</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1aa3af5487a047863884cdcffaec442664" kindref="member">embeddedBoundary_penalty</ref>=embeddedBoundary_penalty</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a2b70c6d40fe504c22415a1522cce1f41" kindref="member">embeddedBoundary_ghost_penalty</ref>=embeddedBoundary_ghost_penalty</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a4ce1e2e728d248fb529cb81aa0126c2c" kindref="member">embeddedBoundary_sdf</ref>=embeddedBoundary_sdf</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a1f3a78af2f06a59ce50024b03849430a" kindref="member">embeddedBoundary_u</ref>=embeddedBoundary_u</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a5fc5d226587cc86f47c2745669dfa3d5" kindref="member">embeddedBoundary</ref>:</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a4ce1e2e728d248fb529cb81aa0126c2c" kindref="member">embeddedBoundary_sdf</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a1f3a78af2f06a59ce50024b03849430a" kindref="member">embeddedBoundary_u</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a7089bab34005c07f7824280a812f4609" kindref="member">useMetrics</ref><sp/>=<sp/>useMetrics</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1aeede438c353d1be39aba035fcb99c1cd" kindref="member">forceStrongDirichlet</ref>=forceStrongDirichlet</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a32b81d73d359e3842bc57b2f2cc9e14b" kindref="member">aOfX</ref><sp/>=<sp/>aOfX</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a4e75143133205304dc202571977046c0" kindref="member">fOfX</ref><sp/>=<sp/>fOfX</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a09070fbf0d751d62f446518eb973fb12" kindref="member">velocity</ref>=velocity</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a51b82bfd46a962fbcaab47ecd82d6826" kindref="member">nd</ref><sp/>=<sp/>nd</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a73744d9a1b0873894b0325e1737e1052" kindref="member">l2proj</ref><sp/>=<sp/>l2proj</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1acb006f90a58d3fb63057166be5713e96" kindref="member">timeVaryingCoefficients</ref>=timeVaryingCoefficients</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a8b5c07257e7d16f177eb7c2e9f0f5f13" kindref="member">sc_uref</ref>=sc_uref</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a484f57a90919f47f319f0b1e8bfb0a61" kindref="member">sc_beta</ref>=sc_beta</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advection<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffusion<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potential<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reaction<sp/><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hamiltonian<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nc):</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffusion[i]<sp/>=<sp/>{i<sp/>:<sp/>{i:</highlight><highlight class="stringliteral">&apos;constant&apos;</highlight><highlight class="normal">}}</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reaction[i]<sp/><sp/>=<sp/>{i<sp/>:<sp/></highlight><highlight class="stringliteral">&apos;constant&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advection[i]<sp/>=<sp/>{i<sp/>:<sp/></highlight><highlight class="stringliteral">&apos;linear&apos;</highlight><highlight class="normal">}<sp/></highlight><highlight class="comment">#now<sp/>include<sp/>for<sp/>gravity<sp/>type<sp/>terms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potential[i]<sp/>=<sp/>{i<sp/>:<sp/></highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#end<sp/>i</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sdInfo<sp/>=<sp/>{(0,0):(np.arange(start=0,stop=self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a51b82bfd46a962fbcaab47ecd82d6826" kindref="member">nd</ref>**2+1,step=self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a51b82bfd46a962fbcaab47ecd82d6826" kindref="member">nd</ref>,dtype=</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>np.array([range(self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a51b82bfd46a962fbcaab47ecd82d6826" kindref="member">nd</ref>)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>row<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a51b82bfd46a962fbcaab47ecd82d6826" kindref="member">nd</ref>)],dtype=</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">))}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TC_base.__init__(self,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nc,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mass,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advection,</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffusion,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>potential,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reaction,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hamiltonian,</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variableNames=[</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">],</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sparseDiffusionTensors=sdInfo,</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useSparseDiffusion=</highlight><highlight class="keyword">True</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movingDomain=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a50dc538a559b840164e3f6a719a0fdc9" kindref="member">initializeMesh</ref>(self,mesh):<sp/></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1afeae9f4f0828af731009579b6e3f64db" kindref="member">embeddedBoundary_sdf_nodes</ref><sp/>=<sp/>np.ones((mesh.nodeArray.shape[0],),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a5fc5d226587cc86f47c2745669dfa3d5" kindref="member">embeddedBoundary</ref>:</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>nN<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(mesh.nodeArray.shape[0]):</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1afeae9f4f0828af731009579b6e3f64db" kindref="member">embeddedBoundary_sdf_nodes</ref>[nN],<sp/>dummy_normal<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a4ce1e2e728d248fb529cb81aa0126c2c" kindref="member">embeddedBoundary_sdf</ref>(t=0.0,x=mesh.nodeArray[nN])</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1ad4f0afb0ece31cae983bd575c00f1c7b" kindref="member">initializeElementQuadrature</ref>(self,t,cq):</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a51b82bfd46a962fbcaab47ecd82d6826" kindref="member">nd</ref></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d1/d7a/classproteus_1_1TransportCoefficients_1_1TC__base_1af04a9ac0f31e09c43d0914a3d3f77379" kindref="member">nc</ref>):</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,ci,ci)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>cq:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a09070fbf0d751d62f446518eb973fb12" kindref="member">velocity</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cq[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,ci,ci)][...,:]<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a09070fbf0d751d62f446518eb973fb12" kindref="member">velocity</ref></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cq[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,ci,ci)].flat[:]<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(cq[(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,ci)].flat)):</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cq[(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,ci)].flat[i]<sp/>=<sp/>-self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a4e75143133205304dc202571977046c0" kindref="member">fOfX</ref>[ci](cq[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">].flat[3*i:3*(i+1)])</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cq[(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,ci,ci)].flat[nd*nd*i:nd*nd*(i+1)]<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a32b81d73d359e3842bc57b2f2cc9e14b" kindref="member">aOfX</ref>[ci](cq[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">].flat[3*i:3*(i+1)]).flat</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cq[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_sdf&apos;</highlight><highlight class="normal">]<sp/>=<sp/>np.ones_like(cq[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)])</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cq[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_normal&apos;</highlight><highlight class="normal">]<sp/>=<sp/>np.ones_like(cq[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cq[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_u&apos;</highlight><highlight class="normal">]<sp/>=<sp/>np.ones_like(cq[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)])</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a5fc5d226587cc86f47c2745669dfa3d5" kindref="member">embeddedBoundary</ref>:</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>eN<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(cq[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_sdf&apos;</highlight><highlight class="normal">].shape[0]):</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(cq[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_sdf&apos;</highlight><highlight class="normal">].shape[1]):</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cq[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_sdf&apos;</highlight><highlight class="normal">][eN,k],cq[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_normal&apos;</highlight><highlight class="normal">][eN,k]<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a4ce1e2e728d248fb529cb81aa0126c2c" kindref="member">embeddedBoundary_sdf</ref>(t=0.0,x=cq[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">][eN,k])</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cq[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_u&apos;</highlight><highlight class="normal">][eN,k]<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a1f3a78af2f06a59ce50024b03849430a" kindref="member">embeddedBoundary_u</ref>(t=0.0,x=cq[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">][eN,k])</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a9a0241b52b0c61b5f152bdb679e0391b" kindref="member">initializeElementBoundaryQuadrature</ref>(self,t,cebq,cebq_global):</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a51b82bfd46a962fbcaab47ecd82d6826" kindref="member">nd</ref></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[cebq,cebq_global]:</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d1/d7a/classproteus_1_1TransportCoefficients_1_1TC__base_1af04a9ac0f31e09c43d0914a3d3f77379" kindref="member">nc</ref>):</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,ci,ci)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>c:</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a09070fbf0d751d62f446518eb973fb12" kindref="member">velocity</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,ci,ci)][...,:]<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a09070fbf0d751d62f446518eb973fb12" kindref="member">velocity</ref></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,ci,ci)].flat[:]<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,ci,ci)</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>c:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(c[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,ci)].flat)):</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,ci)].flat[i]<sp/>=<sp/>-self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a4e75143133205304dc202571977046c0" kindref="member">fOfX</ref>[ci](c[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">].flat[3*i:3*(i+1)])</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,ci,ci)].flat[nd*nd*i:nd*nd*(i+1)]<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a32b81d73d359e3842bc57b2f2cc9e14b" kindref="member">aOfX</ref>[ci](c[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">].flat[3*i:3*(i+1)]).flat</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a76127e323d6efaf518e201635c395dac" kindref="member">initializeGlobalExteriorElementBoundaryQuadrature</ref>(self,t,cebqe):</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a51b82bfd46a962fbcaab47ecd82d6826" kindref="member">nd</ref></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[cebqe]:</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d1/d7a/classproteus_1_1TransportCoefficients_1_1TC__base_1af04a9ac0f31e09c43d0914a3d3f77379" kindref="member">nc</ref>):</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,ci,ci)</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>c:</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a09070fbf0d751d62f446518eb973fb12" kindref="member">velocity</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,ci,ci)][...,:]<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a09070fbf0d751d62f446518eb973fb12" kindref="member">velocity</ref></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,ci,ci)].flat[:]<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>c<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,ci,ci)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>c:</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(c[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,ci)].flat)):</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,ci)].flat[i]<sp/>=<sp/>-self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a4e75143133205304dc202571977046c0" kindref="member">fOfX</ref>[ci](c[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">].flat[3*i:3*(i+1)])</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,ci,ci)].flat[nd*nd*i:nd*nd*(i+1)]<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a32b81d73d359e3842bc57b2f2cc9e14b" kindref="member">aOfX</ref>[ci](c[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">].flat[3*i:3*(i+1)]).flat</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a7b6e1c75434cd2ecffe270e3383b2e28" kindref="member">evaluate</ref>(self,t,c):</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1acb006f90a58d3fb63057166be5713e96" kindref="member">timeVaryingCoefficients</ref>:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a51b82bfd46a962fbcaab47ecd82d6826" kindref="member">nd</ref></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d1/d7a/classproteus_1_1TransportCoefficients_1_1TC__base_1af04a9ac0f31e09c43d0914a3d3f77379" kindref="member">nc</ref>):</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a09070fbf0d751d62f446518eb973fb12" kindref="member">velocity</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,ci,ci)][...,:]<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a09070fbf0d751d62f446518eb973fb12" kindref="member">velocity</ref></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,ci,ci)].flat[:]<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(c[(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,ci)].flat)):</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,ci)].flat[i]<sp/>=<sp/>-self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a4e75143133205304dc202571977046c0" kindref="member">fOfX</ref>[ci](c[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">].flat[3*i:3*(i+1)])</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,ci,ci)].flat[nd*nd*i:nd*nd*(i+1)]<sp/>=<sp/>self.<ref refid="d5/d64/classproteus_1_1ADR_1_1Coefficients_1a32b81d73d359e3842bc57b2f2cc9e14b" kindref="member">aOfX</ref>[ci](c[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">].flat[3*i:3*(i+1)]).flat</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229" refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel" kindref="compound">LevelModel</ref>(<ref refid="dc/d1f/classproteus_1_1Transport_1_1OneLevelTransport" kindref="compound">proteus.Transport.OneLevelTransport</ref>):</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="231"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Optimized<sp/>LevelModel<sp/>for<sp/>ADR<sp/>equations</highlight></codeline>
<codeline lineno="232"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="233"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>..<sp/>inheritance-diagram::<sp/>LevelModel</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:parts:<sp/>2</highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>nCalls=0</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a7b92681742fb597016ea2a2dfa892771" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uDict,</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phiDict,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testSpaceDict,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>matType,</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dofBoundaryConditionsDict,</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dofBoundaryConditionsSetterDict,</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coefficients,</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadrature,</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryQuadrature,</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fluxBoundaryConditionsDict=None,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advectiveFluxBoundaryConditionsSetterDict=None,</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffusiveFluxBoundaryConditionsSetterDictDict=None,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stressTraceBoundaryConditionsSetterDict=None,</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stabilization=None,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shockCapturing=None,</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>conservativeFluxDict=None,</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numericalFluxType=None,</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TimeIntegrationClass=None,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>massLumping=False,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reactionLumping=False,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options=None,</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=&apos;defaultName&apos;,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>reuse_trial_and_test_quadrature=True,</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sd<sp/>=<sp/>True,</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>movingDomain=False):</highlight><highlight class="comment">#,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>proteus<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Comm</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#set<sp/>the<sp/>objects<sp/>describing<sp/>the<sp/>method<sp/>and<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a95397b9a2fe08483269a32d4414b1f80" kindref="member">movingDomain</ref>=movingDomain</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ac163480f4ccafa3f0848557f3b3ab7bb" kindref="member">tLast_mesh</ref>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a6fd4558879be4e099c4c765be8704705" kindref="member">name</ref>=name</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a3f814065799f8f4f880395921a8522c7" kindref="member">sd</ref>=sd</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ad02e16562cd35fd895eb2df2f68ee735" kindref="member">Hess</ref>=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a46ca6b6050ca35e8fdeb507850870248" kindref="member">lowmem</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a6cf0237cad1bd7be8c8e1c029b19f342" kindref="member">timeTerm</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="comment">#allow<sp/>turning<sp/>off<sp/><sp/>the<sp/><sp/>time<sp/>derivative</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.lowmem=False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a8efcc1eb0ab993bd161891fc174db7d9" kindref="member">testIsTrial</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ad1e1b46724a105067e45be355f652782" kindref="member">phiTrialIsTrial</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae26ad1ca963f84ed5290b88408d59479" kindref="member">u</ref><sp/>=<sp/>uDict</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ab2aebb19de3ce5e069adf9b2da2b7898" kindref="member">ua</ref><sp/>=<sp/>{}</highlight><highlight class="comment">#analytical<sp/>solutions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a506088caeaeed00f15db53af0e73189d" kindref="member">phi</ref><sp/><sp/>=<sp/>phiDict</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a58efe52fa626fa3ecf5a324cdb1ce763" kindref="member">dphi</ref>={}</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a3190ed642ccf9409de67fd0251e9fc81" kindref="member">matType</ref><sp/>=<sp/>matType</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a52a00b523eac052fcb3d18c23e849f81" kindref="member">reuse_test_trial_quadrature</ref><sp/>=<sp/>reuse_trial_and_test_quadrature</highlight><highlight class="comment">#True#False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a52a00b523eac052fcb3d18c23e849f81" kindref="member">reuse_test_trial_quadrature</ref>:</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(1,coefficients.nc):</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae26ad1ca963f84ed5290b88408d59479" kindref="member">u</ref>[ci].femSpace.__class__.__name__<sp/>==<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae26ad1ca963f84ed5290b88408d59479" kindref="member">u</ref>[0].femSpace.__class__.__name__,<sp/></highlight><highlight class="stringliteral">&quot;to<sp/>reuse_test_trial_quad<sp/>all<sp/>femSpaces<sp/>must<sp/>be<sp/>the<sp/>same!&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref><sp/>=<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae26ad1ca963f84ed5290b88408d59479" kindref="member">u</ref>[0].femSpace.mesh<sp/></highlight><highlight class="comment">#assume<sp/>the<sp/>same<sp/>mesh<sp/>for<sp/><sp/>all<sp/>components<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1abe55636e2a4ea934a0aa09c1b20bd487" kindref="member">testSpace</ref><sp/>=<sp/>testSpaceDict</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a7a20b7230e21232acb2145f5a05cbc11" kindref="member">dirichletConditions</ref><sp/>=<sp/>dofBoundaryConditionsDict</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1aa0f378a311a8cd8de25945b541ad8217" kindref="member">dirichletNodeSetList</ref>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#explicit<sp/>Dirichlet<sp/><sp/>conditions<sp/>for<sp/>now,<sp/>no<sp/>Dirichlet<sp/>BC<sp/>constraints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref><sp/>=<sp/>coefficients</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.<ref refid="d2/d2f/group__mesh_1ga509a95e0124b5fdd0a7cd09574cb5e30" kindref="member">initializeMesh</ref>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>)</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1aba00a14c20d29860dfb4e91d3b728c71" kindref="member">nc</ref><sp/>=<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.nc</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae7dc9fbbc8181a57dc3a88f6a7ffc6b7" kindref="member">stabilization</ref><sp/>=<sp/>stabilization</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ab3bf093d346e114df0bd7c42e0213e47" kindref="member">shockCapturing</ref><sp/>=<sp/>shockCapturing</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ade70e4ddf19aee2d2ab3315ab03f338b" kindref="member">conservativeFlux</ref><sp/>=<sp/>conservativeFluxDict<sp/></highlight><highlight class="comment">#no<sp/>velocity<sp/>post-processing<sp/>for<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a3309ec598896be07d1bddac1324e499b" kindref="member">fluxBoundaryConditions</ref>=fluxBoundaryConditionsDict</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1abd522ab2dfae8fefc3dae4c16ad86390" kindref="member">advectiveFluxBoundaryConditionsSetterDict</ref>=advectiveFluxBoundaryConditionsSetterDict</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a3dbe03632b30e58d6786adc62ef1ed04" kindref="member">diffusiveFluxBoundaryConditionsSetterDictDict</ref><sp/>=<sp/>diffusiveFluxBoundaryConditionsSetterDictDict</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#determine<sp/>whether<sp/><sp/>the<sp/>stabilization<sp/>term<sp/>is<sp/>nonlinear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af6f9235149e03ba18155626b7f5833f7" kindref="member">stabilizationIsNonlinear</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#cek<sp/>come<sp/>back</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae7dc9fbbc8181a57dc3a88f6a7ffc6b7" kindref="member">stabilization</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1aba00a14c20d29860dfb4e91d3b728c71" kindref="member">nc</ref>):</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coefficients.mass:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coefficients.mass[ci].values():</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;nonlinear&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af6f9235149e03ba18155626b7f5833f7" kindref="member">stabilizationIsNonlinear</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coefficients.advection:</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/>flag<sp/><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coefficients.advection[ci].values():</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;nonlinear&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af6f9235149e03ba18155626b7f5833f7" kindref="member">stabilizationIsNonlinear</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coefficients.diffusion:</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>diffusionDict<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coefficients.diffusion[ci].values():</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/>flag<sp/><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>diffusionDict.values():</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;constant&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af6f9235149e03ba18155626b7f5833f7" kindref="member">stabilizationIsNonlinear</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coefficients.potential:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coefficients.potential[ci].values():</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>flag<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;nonlinear&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af6f9235149e03ba18155626b7f5833f7" kindref="member">stabilizationIsNonlinear</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coefficients.reaction:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coefficients.reaction[ci].values():</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>flag<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;nonlinear&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af6f9235149e03ba18155626b7f5833f7" kindref="member">stabilizationIsNonlinear</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coefficients.hamiltonian:</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>coefficients.hamiltonian[ci].values():</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><sp/>flag<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;nonlinear&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af6f9235149e03ba18155626b7f5833f7" kindref="member">stabilizationIsNonlinear</ref>=</highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#determine<sp/>if<sp/>we<sp/>need<sp/>element<sp/>boundary<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a02c9b3ef2b3024766811d13b7b0e95c5" kindref="member">elementBoundaryIntegrals</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1aba00a14c20d29860dfb4e91d3b728c71" kindref="member">nc</ref>):</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a02c9b3ef2b3024766811d13b7b0e95c5" kindref="member">elementBoundaryIntegrals</ref>[ci]<sp/>=<sp/>((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ade70e4ddf19aee2d2ab3315ab03f338b" kindref="member">conservativeFlux</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(numericalFluxType<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a3309ec598896be07d1bddac1324e499b" kindref="member">fluxBoundaryConditions</ref>[ci]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;outFlow&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a3309ec598896be07d1bddac1324e499b" kindref="member">fluxBoundaryConditions</ref>[ci]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;mixedFlow&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a3309ec598896be07d1bddac1324e499b" kindref="member">fluxBoundaryConditions</ref>[ci]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;setFlow&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#calculate<sp/>some<sp/>dimensions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af09cdd78d432ca9e0950362da272d5ab" kindref="member">nSpace_global</ref><sp/><sp/><sp/><sp/>=<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae26ad1ca963f84ed5290b88408d59479" kindref="member">u</ref>[0].femSpace.nSpace_global<sp/></highlight><highlight class="comment">#assume<sp/>same<sp/>space<sp/>dim<sp/>for<sp/>all<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a09eb6d648b28e1f8c99a5f6016f34628" kindref="member">nDOF_trial_element</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>[u_j.femSpace.max_nDOF_element<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/>u_j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae26ad1ca963f84ed5290b88408d59479" kindref="member">u</ref>.values()]</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a19e0e8b548987aeb33493e59dc0c9620" kindref="member">nDOF_phi_trial_element</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>[phi_k.femSpace.max_nDOF_element<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/>phi_k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a506088caeaeed00f15db53af0e73189d" kindref="member">phi</ref>.values()]</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a730459fd0a8b54c87c0116d5e45bf011" kindref="member">n_phi_ip_element</ref><sp/>=<sp/>[phi_k.femSpace.referenceFiniteElement.interpolationConditions.nQuadraturePoints<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/><sp/>phi_k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a506088caeaeed00f15db53af0e73189d" kindref="member">phi</ref>.values()]</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a920d41c395c46b2a6577ed02f1368e9b" kindref="member">nDOF_test_element</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>[femSpace.max_nDOF_element<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>femSpace<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1abe55636e2a4ea934a0aa09c1b20bd487" kindref="member">testSpace</ref>.values()]</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1accc1360f22185a2954d9d5b075e2311b" kindref="member">nFreeDOF_global</ref><sp/><sp/>=<sp/>[dc.nFreeDOF_global<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>dc<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a7a20b7230e21232acb2145f5a05cbc11" kindref="member">dirichletConditions</ref>.values()]</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a3aadcb337173d38757417e5da7370639" kindref="member">nVDOF_element</ref><sp/><sp/><sp/><sp/>=<sp/><ref refid="de/d5b/Headers_8h_1a4236a05d5d04839f0af91439cb8820b8" kindref="member">sum</ref>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a09eb6d648b28e1f8c99a5f6016f34628" kindref="member">nDOF_trial_element</ref>)</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a331cb5e7b1fff44a8a9962f0906160ab" kindref="member">nFreeVDOF_global</ref><sp/>=<sp/><ref refid="de/d5b/Headers_8h_1a4236a05d5d04839f0af91439cb8820b8" kindref="member">sum</ref>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1accc1360f22185a2954d9d5b075e2311b" kindref="member">nFreeDOF_global</ref>)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NonlinearEquation.__init__(self,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a331cb5e7b1fff44a8a9962f0906160ab" kindref="member">nFreeVDOF_global</ref>)</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#build<sp/>the<sp/>quadrature<sp/>point<sp/>dictionaries<sp/>from<sp/>the<sp/>input<sp/>(this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#is<sp/>just<sp/>for<sp/>convenience<sp/>so<sp/>that<sp/>the<sp/>input<sp/>doesn&apos;t<sp/>have<sp/>to<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#complete)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict={}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elemQuadIsDict<sp/>=<sp/>isinstance(elementQuadrature,dict)</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>elemQuadIsDict:<sp/></highlight><highlight class="comment">#set<sp/>terms<sp/>manually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>I<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.elementIntegralKeys:</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>I<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>elementQuadrature:</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[I]<sp/>=<sp/>elementQuadrature[I]</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[I]<sp/>=<sp/>elementQuadrature[</highlight><highlight class="stringliteral">&apos;default&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>I<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.elementIntegralKeys:</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[I]<sp/>=<sp/>elementQuadrature</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae7dc9fbbc8181a57dc3a88f6a7ffc6b7" kindref="member">stabilization</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>I<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.elementIntegralKeys:</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>elemQuadIsDict:</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>I<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>elementQuadrature:</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[(</highlight><highlight class="stringliteral">&apos;stab&apos;</highlight><highlight class="normal">,)+I[1:]]<sp/>=<sp/>elementQuadrature[I]</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[(</highlight><highlight class="stringliteral">&apos;stab&apos;</highlight><highlight class="normal">,)+I[1:]]<sp/>=<sp/>elementQuadrature[</highlight><highlight class="stringliteral">&apos;default&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[(</highlight><highlight class="stringliteral">&apos;stab&apos;</highlight><highlight class="normal">,)+I[1:]]<sp/>=<sp/>elementQuadrature</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ab3bf093d346e114df0bd7c42e0213e47" kindref="member">shockCapturing</ref><sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ab3bf093d346e114df0bd7c42e0213e47" kindref="member">shockCapturing</ref>.components:</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>elemQuadIsDict:</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="stringliteral">&apos;numDiff&apos;</highlight><highlight class="normal">,ci,ci)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>elementQuadrature:</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[(</highlight><highlight class="stringliteral">&apos;numDiff&apos;</highlight><highlight class="normal">,ci,ci)]<sp/>=<sp/>elementQuadrature[(</highlight><highlight class="stringliteral">&apos;numDiff&apos;</highlight><highlight class="normal">,ci,ci)]</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[(</highlight><highlight class="stringliteral">&apos;numDiff&apos;</highlight><highlight class="normal">,ci,ci)]<sp/>=<sp/>elementQuadrature[</highlight><highlight class="stringliteral">&apos;default&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[(</highlight><highlight class="stringliteral">&apos;numDiff&apos;</highlight><highlight class="normal">,ci,ci)]<sp/>=<sp/>elementQuadrature</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>massLumping:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.mass.keys():</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[(</highlight><highlight class="stringliteral">&apos;m&apos;</highlight><highlight class="normal">,ci)]<sp/>=<sp/><ref refid="de/d6b/classproteus_1_1Quadrature_1_1SimplexLobattoQuadrature" kindref="compound">Quadrature.SimplexLobattoQuadrature</ref>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af09cdd78d432ca9e0950362da272d5ab" kindref="member">nSpace_global</ref>,1)</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>I<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.elementIntegralKeys:</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[(</highlight><highlight class="stringliteral">&apos;stab&apos;</highlight><highlight class="normal">,)+I[1:]]<sp/>=<sp/><ref refid="de/d6b/classproteus_1_1Quadrature_1_1SimplexLobattoQuadrature" kindref="compound">Quadrature.SimplexLobattoQuadrature</ref>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af09cdd78d432ca9e0950362da272d5ab" kindref="member">nSpace_global</ref>,1)</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>reactionLumping:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.mass.keys():</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,ci)]<sp/>=<sp/><ref refid="de/d6b/classproteus_1_1Quadrature_1_1SimplexLobattoQuadrature" kindref="compound">Quadrature.SimplexLobattoQuadrature</ref>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af09cdd78d432ca9e0950362da272d5ab" kindref="member">nSpace_global</ref>,1)</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>I<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.elementIntegralKeys:</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementQuadratureDict[(</highlight><highlight class="stringliteral">&apos;stab&apos;</highlight><highlight class="normal">,)+I[1:]]<sp/>=<sp/><ref refid="de/d6b/classproteus_1_1Quadrature_1_1SimplexLobattoQuadrature" kindref="compound">Quadrature.SimplexLobattoQuadrature</ref>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af09cdd78d432ca9e0950362da272d5ab" kindref="member">nSpace_global</ref>,1)</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryQuadratureDict={}</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>isinstance(elementBoundaryQuadrature,dict):<sp/></highlight><highlight class="comment">#set<sp/>terms<sp/>manually</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>I<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.elementBoundaryIntegralKeys:</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>I<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>elementBoundaryQuadrature:</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryQuadratureDict[I]<sp/>=<sp/>elementBoundaryQuadrature[I]</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryQuadratureDict[I]<sp/>=<sp/>elementBoundaryQuadrature[</highlight><highlight class="stringliteral">&apos;default&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>I<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.elementBoundaryIntegralKeys:</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elementBoundaryQuadratureDict[I]<sp/>=<sp/>elementBoundaryQuadrature</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>find<sp/>the<sp/>union<sp/>of<sp/>all<sp/>element<sp/>quadrature<sp/>points<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>build<sp/>a<sp/>quadrature<sp/>rule<sp/>for<sp/>each<sp/>integral<sp/>that<sp/>has<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>weight<sp/>at<sp/>each<sp/>point<sp/>in<sp/>the<sp/>union</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.elementQuadraturePoints,self.elementQuadratureWeights,</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.elementQuadratureRuleIndeces)<sp/>=<sp/>Quadrature.buildUnion(elementQuadratureDict)</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2a5471b311ffba990dc265a44e9fc9a1" kindref="member">nQuadraturePoints_element</ref><sp/>=<sp/>self.elementQuadraturePoints.shape[0]</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ac6e13c3c47ab32266a4a2ebca8aeecd7" kindref="member">nQuadraturePoints_global</ref><sp/>=<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2a5471b311ffba990dc265a44e9fc9a1" kindref="member">nQuadraturePoints_element</ref>*self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nElements_global</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#Repeat<sp/>the<sp/>same<sp/>thing<sp/>for<sp/>the<sp/>element<sp/>boundary<sp/>quadrature</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(self.elementBoundaryQuadraturePoints,</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.elementBoundaryQuadratureWeights,</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.elementBoundaryQuadratureRuleIndeces)<sp/>=<sp/>Quadrature.buildUnion(elementBoundaryQuadratureDict)</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref><sp/>=<sp/>self.elementBoundaryQuadraturePoints.shape[0]</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9cf458737ce2e3145138bdc1e5f1bafc" kindref="member">nElementBoundaryQuadraturePoints_global</ref><sp/>=<sp/>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nElements_global*</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nElementBoundaries_element*</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#simplified<sp/>allocations<sp/>for<sp/>test==trial<sp/>and<sp/>also<sp/>check<sp/>if<sp/>space<sp/>is<sp/>mixed<sp/>or<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ad912134009660561651d5ac56d33cd43" kindref="member">q</ref>={}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a8eb15a574fc86b195397d3deeda3ed01" kindref="member">ebq</ref>={}</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ab83d80d2fbde88c52c7e01b0c0868b02" kindref="member">ebq_global</ref>={}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>={}</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a0582520b5485dab40d743204ffb51f82" kindref="member">phi_ip</ref>={}</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ad912134009660561651d5ac56d33cd43" kindref="member">q</ref>[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nElements_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2a5471b311ffba990dc265a44e9fc9a1" kindref="member">nQuadraturePoints_element</ref>,3),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>,3),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ad912134009660561651d5ac56d33cd43" kindref="member">q</ref>[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nElements_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2a5471b311ffba990dc265a44e9fc9a1" kindref="member">nQuadraturePoints_element</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ad912134009660561651d5ac56d33cd43" kindref="member">q</ref>[(</highlight><highlight class="stringliteral">&apos;grad(u)&apos;</highlight><highlight class="normal">,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nElements_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2a5471b311ffba990dc265a44e9fc9a1" kindref="member">nQuadraturePoints_element</ref>,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af09cdd78d432ca9e0950362da272d5ab" kindref="member">nSpace_global</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ad912134009660561651d5ac56d33cd43" kindref="member">q</ref>[(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,0,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nElements_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2a5471b311ffba990dc265a44e9fc9a1" kindref="member">nQuadraturePoints_element</ref>,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.sdInfo[(0,0)][0][-1]),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ad912134009660561651d5ac56d33cd43" kindref="member">q</ref>[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,0,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nElements_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2a5471b311ffba990dc265a44e9fc9a1" kindref="member">nQuadraturePoints_element</ref>,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af09cdd78d432ca9e0950362da272d5ab" kindref="member">nSpace_global</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ad912134009660561651d5ac56d33cd43" kindref="member">q</ref>[(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nElements_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2a5471b311ffba990dc265a44e9fc9a1" kindref="member">nQuadraturePoints_element</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ad912134009660561651d5ac56d33cd43" kindref="member">q</ref>[(</highlight><highlight class="stringliteral">&apos;cfl&apos;</highlight><highlight class="normal">,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nElements_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2a5471b311ffba990dc265a44e9fc9a1" kindref="member">nQuadraturePoints_element</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ad912134009660561651d5ac56d33cd43" kindref="member">q</ref>[(</highlight><highlight class="stringliteral">&apos;numDiff&apos;</highlight><highlight class="normal">,0,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nElements_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2a5471b311ffba990dc265a44e9fc9a1" kindref="member">nQuadraturePoints_element</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[</highlight><highlight class="stringliteral">&apos;penalty&apos;</highlight><highlight class="normal">]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;diffusiveFlux_bc_flag&apos;</highlight><highlight class="normal">,0,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>),</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;diffusiveFlux_bc&apos;</highlight><highlight class="normal">,0,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;advectiveFlux_bc_flag&apos;</highlight><highlight class="normal">,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>),</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;advectiveFlux_bc&apos;</highlight><highlight class="normal">,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;grad(u)&apos;</highlight><highlight class="normal">,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af09cdd78d432ca9e0950362da272d5ab" kindref="member">nSpace_global</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,0,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.sdInfo[(0,0)][0][-1]),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,0,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af09cdd78d432ca9e0950362da272d5ab" kindref="member">nSpace_global</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,0)]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a0f50b79b6427bcb30b63e4b4005277a1" kindref="member">points_elementBoundaryQuadrature</ref>=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>()</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1aa25029cc6262f2df709be632e4d8cc0c" kindref="member">scalars_elementBoundaryQuadrature</ref>=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,ci)<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1aba00a14c20d29860dfb4e91d3b728c71" kindref="member">nc</ref>)])</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9221fb698b9ec7b68b4d2c6b8253958e" kindref="member">vectors_elementBoundaryQuadrature</ref>=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>()</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a6f75f11627cc98a228591d218e7e7ede" kindref="member">tensors_elementBoundaryQuadrature</ref>=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>()</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(<ref refid="d6/df4/namespaceproteus_1_1Archiver_1a3ee04819526c756f63d480d2d483f574" kindref="member">memory</ref>(</highlight><highlight class="stringliteral">&quot;element<sp/>and<sp/>element<sp/>boundary<sp/>Jacobians&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;OneLevelTransport&quot;</highlight><highlight class="normal">),level=4)</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a71ace6482336beeccd117901ac952d7b" kindref="member">inflowBoundaryBC</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a1cc0230a0a971fbfdd1da5732fba0bdb" kindref="member">inflowBoundaryBC_values</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae83290a42276ba879d280b74648eb4db" kindref="member">inflowFlux</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1aba00a14c20d29860dfb4e91d3b728c71" kindref="member">nc</ref>):</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a71ace6482336beeccd117901ac952d7b" kindref="member">inflowBoundaryBC</ref>[cj]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,),</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a1cc0230a0a971fbfdd1da5732fba0bdb" kindref="member">inflowBoundaryBC_values</ref>[cj]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a09eb6d648b28e1f8c99a5f6016f34628" kindref="member">nDOF_trial_element</ref>[cj]),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae83290a42276ba879d280b74648eb4db" kindref="member">inflowFlux</ref>[cj]<sp/>=<sp/>np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global,self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>),</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a8a05947df6eb6274fadd1e437d281322" kindref="member">internalNodes</ref><sp/>=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>(range(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nNodes_global))</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#identify<sp/>the<sp/>internal<sp/>nodes<sp/>this<sp/>is<sp/>ought<sp/>to<sp/>be<sp/>in<sp/>mesh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ebNE<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global):</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN<sp/>=<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.exteriorElementBoundariesArray[ebNE]</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>eN_global<sp/><sp/><sp/>=<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.elementBoundaryElementsArray[ebN,0]</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN_element<sp/><sp/>=<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.elementBoundaryLocalElementBoundariesArray[ebN,0]</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nNodes_element):</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/>!=<sp/>ebN_element:</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>=<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.elementNodesArray[eN_global,i]</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a8a05947df6eb6274fadd1e437d281322" kindref="member">internalNodes</ref><sp/>-=<sp/><ref refid="d0/d93/namespaceproteus_1_1Context_1a5966a755fc5ade13023e4c265d76d131" kindref="member">set</ref>([I])</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a3d3f283be51d35722bd73b1e07443874" kindref="member">nNodes_internal</ref><sp/>=<sp/>len(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a8a05947df6eb6274fadd1e437d281322" kindref="member">internalNodes</ref>)</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ab8851f6fea3f26f7e81aeb47f1fe6eff" kindref="member">internalNodesArray</ref>=np.zeros((self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a3d3f283be51d35722bd73b1e07443874" kindref="member">nNodes_internal</ref>,),</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>nI,n<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a8a05947df6eb6274fadd1e437d281322" kindref="member">internalNodes</ref>):</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ab8851f6fea3f26f7e81aeb47f1fe6eff" kindref="member">internalNodesArray</ref>[nI]=n</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>del<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a8a05947df6eb6274fadd1e437d281322" kindref="member">internalNodes</ref></highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a8a05947df6eb6274fadd1e437d281322" kindref="member">internalNodes</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Updating<sp/>local<sp/>to<sp/>global<sp/>mappings&quot;</highlight><highlight class="normal">,2)</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d1f/classproteus_1_1Transport_1_1OneLevelTransport_1a23b8023d354a50660d7ee3266c94e264" kindref="member">updateLocal2Global</ref>()</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Building<sp/>time<sp/>integration<sp/>object&quot;</highlight><highlight class="normal">,2)</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(<ref refid="d6/df4/namespaceproteus_1_1Archiver_1a3ee04819526c756f63d480d2d483f574" kindref="member">memory</ref>(</highlight><highlight class="stringliteral">&quot;inflowBC,<sp/>internalNodes,updateLocal2Global&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;OneLevelTransport&quot;</highlight><highlight class="normal">),level=4)</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae7dc9fbbc8181a57dc3a88f6a7ffc6b7" kindref="member">stabilization</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae7dc9fbbc8181a57dc3a88f6a7ffc6b7" kindref="member">stabilization</ref>.usesGradientStabilization:</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a7b26e64c53bed54750256d45733a08d8" kindref="member">timeIntegration</ref><sp/>=<sp/><ref refid="df/dc9/namespacetestTimeIntegration_1a88feba9cc95ed528bc05417ccaff6689" kindref="member">TimeIntegrationClass</ref>(self,integrateInterpolationPoints=</highlight><highlight class="keyword">True</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a7b26e64c53bed54750256d45733a08d8" kindref="member">timeIntegration</ref><sp/>=<sp/><ref refid="df/dc9/namespacetestTimeIntegration_1a88feba9cc95ed528bc05417ccaff6689" kindref="member">TimeIntegrationClass</ref>(self)</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a7b26e64c53bed54750256d45733a08d8" kindref="member">timeIntegration</ref>.setFromOptions(options)</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(<ref refid="d6/df4/namespaceproteus_1_1Archiver_1a3ee04819526c756f63d480d2d483f574" kindref="member">memory</ref>(</highlight><highlight class="stringliteral">&quot;TimeIntegration&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;OneLevelTransport&quot;</highlight><highlight class="normal">),level=4)</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Calculating<sp/>numerical<sp/>quadrature<sp/>formulas&quot;</highlight><highlight class="normal">,2)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d1f/classproteus_1_1Transport_1_1OneLevelTransport_1a98126dbbc3079af3eeeb11141b15f4d3" kindref="member">calculateQuadrature</ref>()</highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm<sp/>=<sp/>Comm.get()</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a174d2d99f441cbfe16a921ce2eaeb75f" kindref="member">comm</ref>=comm</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>comm.size()<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>numericalFluxType<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>numericalFluxType.useWeakDirichletConditions,</highlight><highlight class="stringliteral">&quot;You<sp/>must<sp/>use<sp/>a<sp/>numerical<sp/>flux<sp/>to<sp/>apply<sp/>weak<sp/>boundary<sp/>conditions<sp/>for<sp/>parallel<sp/>runs&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="dc/d1f/classproteus_1_1Transport_1_1OneLevelTransport_1a3a791b8baf39193aa135e85e46a456fd" kindref="member">setupFieldStrides</ref>()</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(<ref refid="d6/df4/namespaceproteus_1_1Archiver_1a3ee04819526c756f63d480d2d483f574" kindref="member">memory</ref>(</highlight><highlight class="stringliteral">&quot;stride+offset&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;OneLevelTransport&quot;</highlight><highlight class="normal">),level=4)</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>numericalFluxType<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>options<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>options.periodicDirichletConditions<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2cf283fd9bc86a90cc0a18ec0c430b0f" kindref="member">numericalFlux</ref><sp/>=<sp/><ref refid="dd/d67/namespaceproteus_1_1default__n_1a3c2f4b48591204d3e6539ba1a38657d1" kindref="member">numericalFluxType</ref>(self,</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dofBoundaryConditionsSetterDict,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advectiveFluxBoundaryConditionsSetterDict,</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffusiveFluxBoundaryConditionsSetterDictDict)</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2cf283fd9bc86a90cc0a18ec0c430b0f" kindref="member">numericalFlux</ref><sp/>=<sp/><ref refid="dd/d67/namespaceproteus_1_1default__n_1a3c2f4b48591204d3e6539ba1a38657d1" kindref="member">numericalFluxType</ref>(self,</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dofBoundaryConditionsSetterDict,</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>advectiveFluxBoundaryConditionsSetterDict,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diffusiveFluxBoundaryConditionsSetterDictDict,</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.periodicDirichletConditions)</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2cf283fd9bc86a90cc0a18ec0c430b0f" kindref="member">numericalFlux</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#set<sp/>penalty<sp/>terms</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#cek<sp/>todo<sp/>move<sp/>into<sp/>numerical<sp/>flux<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;penalty&apos;</highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ab83d80d2fbde88c52c7e01b0c0868b02" kindref="member">ebq_global</ref>:</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ebN<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nElementBoundaries_global):</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>):</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ab83d80d2fbde88c52c7e01b0c0868b02" kindref="member">ebq_global</ref>[</highlight><highlight class="stringliteral">&apos;penalty&apos;</highlight><highlight class="normal">][ebN,k]<sp/>=<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2cf283fd9bc86a90cc0a18ec0c430b0f" kindref="member">numericalFlux</ref>.penalty_constant/(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.elementBoundaryDiametersArray[ebN]**self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2cf283fd9bc86a90cc0a18ec0c430b0f" kindref="member">numericalFlux</ref>.penalty_power)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#penalty<sp/>term</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#cek<sp/>move<sp/><sp/>to<sp/>Numerical<sp/>flux<sp/>initialization</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;penalty&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>:</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ebNE<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nExteriorElementBoundaries_global):</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ebN<sp/>=<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.exteriorElementBoundariesArray[ebNE]</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>):</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[</highlight><highlight class="stringliteral">&apos;penalty&apos;</highlight><highlight class="normal">][ebNE,k]<sp/>=<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2cf283fd9bc86a90cc0a18ec0c430b0f" kindref="member">numericalFlux</ref>.penalty_constant/self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.elementBoundaryDiametersArray[ebN]**self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2cf283fd9bc86a90cc0a18ec0c430b0f" kindref="member">numericalFlux</ref>.penalty_power</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(<ref refid="d6/df4/namespaceproteus_1_1Archiver_1a3ee04819526c756f63d480d2d483f574" kindref="member">memory</ref>(</highlight><highlight class="stringliteral">&quot;numericalFlux&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;OneLevelTransport&quot;</highlight><highlight class="normal">),level=4)</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a0e83e2c29f359e24871df0ef14ddc478" kindref="member">elementEffectiveDiametersArray</ref><sp/><sp/>=<sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.elementInnerDiametersArray</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#use<sp/>post<sp/>processing<sp/>tools<sp/>to<sp/>get<sp/>conservative<sp/>fluxes,<sp/>None<sp/>by<sp/>default</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>proteus<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>PostProcessingTools</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1aa172dc009e6be4653e53915ab5fec873" kindref="member">velocityPostProcessor</ref><sp/>=<sp/>PostProcessingTools.VelocityPostProcessingChooser(self)</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(<ref refid="d6/df4/namespaceproteus_1_1Archiver_1a3ee04819526c756f63d480d2d483f574" kindref="member">memory</ref>(</highlight><highlight class="stringliteral">&quot;velocity<sp/>postprocessor&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&quot;OneLevelTransport&quot;</highlight><highlight class="normal">),level=4)</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#helper<sp/>for<sp/>writing<sp/>out<sp/>data<sp/>storage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>proteus<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>Archiver</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a1ccd7ba1227d7d6f9b4029ca16c95eb8" kindref="member">elementQuadratureDictionaryWriter</ref><sp/>=<sp/><ref refid="d7/d1f/classproteus_1_1Archiver_1_1XdmfWriter" kindref="compound">Archiver.XdmfWriter</ref>()</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5555bceb39372e4363ff8cca2ea693d1" kindref="member">elementBoundaryQuadratureDictionaryWriter</ref><sp/>=<sp/><ref refid="d7/d1f/classproteus_1_1Archiver_1_1XdmfWriter" kindref="compound">Archiver.XdmfWriter</ref>()</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a7186be0762ad3d1b20f51ea99c8364f1" kindref="member">exteriorElementBoundaryQuadratureDictionaryWriter</ref><sp/>=<sp/><ref refid="d7/d1f/classproteus_1_1Archiver_1_1XdmfWriter" kindref="compound">Archiver.XdmfWriter</ref>()</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ci,fbcObject<sp/><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae8971b878f4742f4b1167dc8d53146c4" kindref="member">fluxBoundaryConditionsObjectsDict</ref>.items():</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;advectiveFlux_bc_flag&apos;</highlight><highlight class="normal">,ci)]<sp/>=<sp/>np.zeros(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;advectiveFlux_bc&apos;</highlight><highlight class="normal">,ci)].shape,</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t,g<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fbcObject.advectiveFluxBoundaryConditionsDict.items():</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ci<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a5cc9593f7e5e8ceebae042e11a88617e" kindref="member">coefficients</ref>.advection:</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;advectiveFlux_bc&apos;</highlight><highlight class="normal">,ci)][t[0],t[1]]<sp/>=<sp/><ref refid="d7/db9/namespaceproteus_1_1Optimizers_1ac61a46e0c63f4fca39b193e3457840f9" kindref="member">g</ref>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">)][t[0],t[1]],self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a7b26e64c53bed54750256d45733a08d8" kindref="member">timeIntegration</ref>.t)</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;advectiveFlux_bc_flag&apos;</highlight><highlight class="normal">,ci)][t[0],t[1]]<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>ck,diffusiveFluxBoundaryConditionsDict<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>fbcObject.diffusiveFluxBoundaryConditionsDictDict.items():</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;diffusiveFlux_bc_flag&apos;</highlight><highlight class="normal">,ck,ci)]<sp/>=<sp/>np.zeros(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;diffusiveFlux_bc&apos;</highlight><highlight class="normal">,ck,ci)].shape,</highlight><highlight class="stringliteral">&apos;i&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>t,g<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>diffusiveFluxBoundaryConditionsDict.items():</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;diffusiveFlux_bc&apos;</highlight><highlight class="normal">,ck,ci)][t[0],t[1]]<sp/>=<sp/><ref refid="d7/db9/namespaceproteus_1_1Optimizers_1ac61a46e0c63f4fca39b193e3457840f9" kindref="member">g</ref>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">)][t[0],t[1]],self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a7b26e64c53bed54750256d45733a08d8" kindref="member">timeIntegration</ref>.t)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>[(</highlight><highlight class="stringliteral">&apos;diffusiveFlux_bc_flag&apos;</highlight><highlight class="normal">,ck,ci)][t[0],t[1]]<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2cf283fd9bc86a90cc0a18ec0c430b0f" kindref="member">numericalFlux</ref>.setDirichletValues(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af95d9b373796f72c51b04e3c4f809d9d" kindref="member">ebqe</ref>)</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a95397b9a2fe08483269a32d4414b1f80" kindref="member">movingDomain</ref>:</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a03760eebb999aa6fdc69580900fd16e6" kindref="member">MOVING_DOMAIN</ref>=1.0</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a03760eebb999aa6fdc69580900fd16e6" kindref="member">MOVING_DOMAIN</ref>=0.0</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#cek<sp/>hack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a95397b9a2fe08483269a32d4414b1f80" kindref="member">movingDomain</ref>=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a03760eebb999aa6fdc69580900fd16e6" kindref="member">MOVING_DOMAIN</ref>=0.0</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nodeVelocityArray<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nodeVelocityArray<sp/>=<sp/>np.zeros(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af40fb21172b29740e5a21e872857c79c" kindref="member">mesh</ref>.nodeArray.shape,</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#cek/ido<sp/>todo<sp/>replace<sp/>python<sp/>loops<sp/>in<sp/>modules<sp/>with<sp/>optimized<sp/>code<sp/>if<sp/>possible/necessary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a3590855b9d21e723c5a078c26a4386cf" kindref="member">forceStrongConditions</ref>=coefficients.forceStrongDirichlet</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af6905ebf00519d96a42a1fdf20357653" kindref="member">dirichletConditionsForceDOF</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a3590855b9d21e723c5a078c26a4386cf" kindref="member">forceStrongConditions</ref>:</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1aba00a14c20d29860dfb4e91d3b728c71" kindref="member">nc</ref>):</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af6905ebf00519d96a42a1fdf20357653" kindref="member">dirichletConditionsForceDOF</ref>[cj]<sp/>=<sp/><ref refid="dd/de6/classproteus_1_1FemTools_1_1DOFBoundaryConditions" kindref="compound">DOFBoundaryConditions</ref>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae26ad1ca963f84ed5290b88408d59479" kindref="member">u</ref>[cj].femSpace,dofBoundaryConditionsSetterDict[cj],weakDirichletConditions=</highlight><highlight class="keyword">False</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compKernelFlag<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2a7e5ea1e92d1b727820b3f181995a33" kindref="member">adr</ref><sp/>=<sp/><ref refid="d2/d20/classproteus_1_1cADR__base" kindref="compound">cADR_base</ref>(self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1af09cdd78d432ca9e0950362da272d5ab" kindref="member">nSpace_global</ref>,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a2a5471b311ffba990dc265a44e9fc9a1" kindref="member">nQuadraturePoints_element</ref>,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae26ad1ca963f84ed5290b88408d59479" kindref="member">u</ref>[0].femSpace.elementMaps.localFunctionSpace.dim,</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ae26ad1ca963f84ed5290b88408d59479" kindref="member">u</ref>[0].femSpace.referenceFiniteElement.localFunctionSpace.dim,</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1abe55636e2a4ea934a0aa09c1b20bd487" kindref="member">testSpace</ref>[0].referenceFiniteElement.localFunctionSpace.dim,</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9f8261b516c08c125dbb0e88539a59f2" kindref="member">nElementBoundaryQuadraturePoints_elementBoundary</ref>,</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compKernelFlag)</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9284f6cf0cee42b2947f8017ec0c315c" kindref="member">calculateCoefficients</ref>(self):</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a9e9e858ab2c247d15b3ad15d3cd45214" kindref="member">getResidual</ref>(self,u,r):</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pdb</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>copy</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="586"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Calculate<sp/>the<sp/>element<sp/>residuals<sp/>and<sp/>add<sp/>in<sp/>to<sp/>the<sp/>global<sp/>residual</highlight></codeline>
<codeline lineno="587"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r.fill(0.0)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.isActiveDOF[:]<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal"><sp/>AttributeError:</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.isActiveDOF<sp/>=<sp/>np.zeros_like(r)</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#Load<sp/>the<sp/>unknowns<sp/>into<sp/>the<sp/>finite<sp/>element<sp/>dof</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.setUnknowns(u)</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#no<sp/>flux<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict<sp/>=<sp/>cArgumentsDict.ArgumentsDict()</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.elementMaps.psi</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_grad_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.elementMaps.grad_psi</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.nodeArray</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.elementNodesArray</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;dV_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.elementQuadratureWeights[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.psi</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_grad_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.grad_psi</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_test_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.psi</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_grad_test_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.grad_psi</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;elementDiameter&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.elementDiametersArray</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;cfl&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[(</highlight><highlight class="stringliteral">&apos;cfl&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;Ct_sge&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.shockCapturing.shockCapturingFactor</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sc_uref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.sc_uref</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sc_alpha&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.sc_beta</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;useMetrics&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.useMetrics</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_trial_trace_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.elementMaps.psi_trace</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_grad_trial_trace_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.elementMaps.grad_psi_trace</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;dS_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.elementBoundaryQuadratureWeights[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_trial_trace_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.psi_trace</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_grad_trial_trace_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.grad_psi_trace</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_test_trace_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.psi_trace</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_grad_test_trace_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.grad_psi_trace</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;normal_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.elementMaps.boundaryNormals</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;boundaryJac_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.elementMaps.boundaryJacobians</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nElements_global&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.nElements_global</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.dofMap.l2g</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].dof</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sd_rowptr&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.sdInfo[(0,0)][0]</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sd_colind&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.sdInfo[(0,0)][1]</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;q_a&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,0,0)]</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;q_v&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,0,0)]</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;q_r&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;lag_shockCapturing&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.shockCapturing.lag</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;shockCapturingDiffusion&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.shockCapturing.shockCapturingFactor</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;q_numDiff_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.shockCapturing.numDiff[0]</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;q_numDiff_u_last&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.shockCapturing.numDiff_last[0]</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;offset_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.offset[0]</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;stride_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.stride[0]</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;globalResidual&quot;</highlight><highlight class="normal">]<sp/>=<sp/>r</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nExteriorElementBoundaries_global&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.nExteriorElementBoundaries_global</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;exteriorElementBoundariesArray&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.exteriorElementBoundariesArray</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;elementBoundaryElementsArray&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.elementBoundaryElementsArray</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;elementBoundaryLocalElementBoundariesArray&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.elementBoundaryLocalElementBoundariesArray</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;ebqe_a&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,0,0)]</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;ebqe_v&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,0,0)]</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;isDOFBoundary_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.numericalFlux.isDOFBoundary[0]</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;ebqe_bc_u_ext&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.numericalFlux.ebqe[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;isDiffusiveFluxBoundary_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;diffusiveFlux_bc_flag&apos;</highlight><highlight class="normal">,0,0)]</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;isAdvectiveFluxBoundary_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;advectiveFlux_bc_flag&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;ebqe_bc_flux_u_ext&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;diffusiveFlux_bc&apos;</highlight><highlight class="normal">,0,0)]</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;ebqe_bc_advectiveFlux_u_ext&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;advectiveFlux_bc&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;ebqe_penalty_ext&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[</highlight><highlight class="stringliteral">&apos;penalty&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;eb_adjoint_sigma&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.numericalFlux.boundaryAdjoint_sigma</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.embeddedBoundary</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary_penalty&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.embeddedBoundary_penalty</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary_ghost_penalty&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.embeddedBoundary_ghost_penalty</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary_sdf_nodes&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.embeddedBoundary_sdf_nodes</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary_sdf&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_sdf&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary_normal&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_normal&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_u&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;isActiveDOF&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.isActiveDOF</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.adr.calculateResidual(argsDict)</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.u[0].dof[:]<sp/>=<sp/>np.where(self.isActiveDOF<sp/>==<sp/>1.0,<sp/>self.u[0].dof,0.0)</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r*=self.isActiveDOF</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Global<sp/>residual&quot;</highlight><highlight class="normal">,level=9,data=r)</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.coefficients.massConservationError<sp/>=<sp/>fabs(<ref refid="da/d52/namespaceproteus_1_1Comm_1a1b3562c9458366ecefbdd721e49b8b34" kindref="member">globalSum</ref>(<ref refid="de/d5b/Headers_8h_1a4236a05d5d04839f0af91439cb8820b8" kindref="member">sum</ref>(r.flat[:self.mesh.nElements_owned])))</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/>Mass<sp/>Conservation<sp/>Error&quot;</highlight><highlight class="normal">,level=3,data=self.coefficients.massConservationError)</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nonlinear_function_evaluations<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a1e4f7ca79dda71f4dbf8aab7ec64db5d" kindref="member">getJacobian</ref>(self,jacobian):</highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#import<sp/>superluWrappers</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#import<sp/>numpy</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pdb</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cfemIntegrals.zeroJacobian_CSR(self.nNonzerosInJacobian,jacobian)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict<sp/>=<sp/>cArgumentsDict.ArgumentsDict()</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.elementMaps.psi</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_grad_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.elementMaps.grad_psi</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.nodeArray</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.elementNodesArray</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;dV_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.elementQuadratureWeights[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.psi</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_grad_trial_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.grad_psi</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_test_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.psi</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_grad_test_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.grad_psi</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;elementDiameter&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.elementDiametersArray</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;cfl&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[(</highlight><highlight class="stringliteral">&apos;cfl&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;Ct_sge&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.shockCapturing.shockCapturingFactor</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sc_uref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.sc_uref</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sc_alpha&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.sc_beta</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;useMetrics&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.useMetrics</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_trial_trace_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.elementMaps.psi_trace</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;mesh_grad_trial_trace_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.elementMaps.grad_psi_trace</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;dS_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.elementBoundaryQuadratureWeights[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_trial_trace_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.psi_trace</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_grad_trial_trace_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.grad_psi_trace</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_test_trace_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.psi_trace</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_grad_test_trace_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.grad_psi_trace</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;normal_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.elementMaps.boundaryNormals</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;boundaryJac_ref&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.elementMaps.boundaryJacobians</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nElements_global&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.nElements_global</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_l2g&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].femSpace.dofMap.l2g</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;u_dof&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.u[0].dof</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sd_rowptr&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.sdInfo[(0,0)][0]</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;sd_colind&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.sdInfo[(0,0)][1]</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;q_a&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,0,0)]</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;q_v&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,0,0)]</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;q_r&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[(</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;lag_shockCapturing&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.shockCapturing.lag</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;shockCapturingDiffusion&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.shockCapturing.shockCapturingFactor</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;q_numDiff_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.shockCapturing.numDiff[0]</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;q_numDiff_u_last&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.shockCapturing.numDiff_last[0]</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrRowIndeces_u_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.csrRowIndeces[(0,0)]</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_u_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.csrColumnOffsets[(0,0)]</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;globalJacobian&quot;</highlight><highlight class="normal">]<sp/>=<sp/>jacobian.getCSRrepresentation()[2]</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;nExteriorElementBoundaries_global&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.nExteriorElementBoundaries_global</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;exteriorElementBoundariesArray&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.exteriorElementBoundariesArray</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;elementBoundaryElementsArray&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.elementBoundaryElementsArray</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;elementBoundaryLocalElementBoundariesArray&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.mesh.elementBoundaryLocalElementBoundariesArray</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;ebqe_a&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;a&apos;</highlight><highlight class="normal">,0,0)]</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;ebqe_v&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;df&apos;</highlight><highlight class="normal">,0,0)]</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;isDOFBoundary_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.numericalFlux.isDOFBoundary[0]</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;ebqe_bc_u_ext&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.numericalFlux.ebqe[(</highlight><highlight class="stringliteral">&apos;u&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;isDiffusiveFluxBoundary_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;diffusiveFlux_bc_flag&apos;</highlight><highlight class="normal">,0,0)]</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;isAdvectiveFluxBoundary_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;advectiveFlux_bc_flag&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;ebqe_bc_flux_u_ext&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;diffusiveFlux_bc&apos;</highlight><highlight class="normal">,0,0)]</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;ebqe_bc_advectiveFlux_u_ext&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;advectiveFlux_bc&apos;</highlight><highlight class="normal">,0)]</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;csrColumnOffsets_eb_u_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.csrColumnOffsets_eb[(0,0)]</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;ebqe_penalty_ext&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.ebqe[</highlight><highlight class="stringliteral">&apos;penalty&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;eb_adjoint_sigma&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.numericalFlux.boundaryAdjoint_sigma</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.embeddedBoundary</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary_penalty&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.embeddedBoundary_penalty</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary_ghost_penalty&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.embeddedBoundary_ghost_penalty</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary_sdf_nodes&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.coefficients.embeddedBoundary_sdf_nodes</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary_sdf&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_sdf&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary_normal&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_normal&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;embeddedBoundary_u&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.q[</highlight><highlight class="stringliteral">&apos;embeddedBoundary_u&apos;</highlight><highlight class="normal">]</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argsDict[</highlight><highlight class="stringliteral">&quot;isActiveDOF&quot;</highlight><highlight class="normal">]<sp/>=<sp/>self.isActiveDOF</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.adr.calculateJacobian(argsDict)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="d4/d88/namespaceproteus_1_1iproteus_1a14d952654ce3f13565e6160fb52ae8a1" kindref="member">log</ref>(</highlight><highlight class="stringliteral">&quot;Jacobian<sp/>&quot;</highlight><highlight class="normal">,level=10,data=jacobian)</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nonlinear_function_jacobian_evaluations<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>global_dofN_a<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>np.argwhere(self.isActiveDOF==0.0):</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>global_dofN<sp/>=<sp/>global_dofN_a[0]</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rowptr[global_dofN],</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.rowptr[global_dofN<sp/>+<sp/>1]):</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self.colind[i]<sp/>==<sp/>global_dofN):</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nzval[i]<sp/>=<sp/>1.0</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nzval[i]<sp/>=<sp/>0.0</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jacobian</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1aaaedf995bf23032bec1fceea79252493" kindref="member">calculateElementQuadrature</ref>(self):</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="750"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Calculate<sp/>the<sp/>physical<sp/>location<sp/>and<sp/>weights<sp/>of<sp/>the<sp/>quadrature<sp/>rules</highlight></codeline>
<codeline lineno="751"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>and<sp/>the<sp/>shape<sp/>information<sp/>at<sp/>the<sp/>quadrature<sp/>points.</highlight></codeline>
<codeline lineno="752"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="753"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>function<sp/>should<sp/>be<sp/>called<sp/>only<sp/>when<sp/>the<sp/>mesh<sp/>changes.</highlight></codeline>
<codeline lineno="754"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.u[0].femSpace.elementMaps.getValues(self.elementQuadraturePoints,</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.q[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.u[0].femSpace.elementMaps.getBasisValuesRef(self.elementQuadraturePoints)</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.u[0].femSpace.elementMaps.getBasisGradientValuesRef(self.elementQuadraturePoints)</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.u[0].femSpace.getBasisValuesRef(self.elementQuadraturePoints)</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.u[0].femSpace.getBasisGradientValuesRef(self.elementQuadraturePoints)</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.coefficients.initializeElementQuadrature(self.timeIntegration.t,self.q)</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.stabilization<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.stabilization.initializeElementQuadrature(self.mesh,self.timeIntegration.t,self.q)</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.stabilization.<ref refid="dc/d1f/classproteus_1_1Transport_1_1OneLevelTransport_1a2aced4db3f99cbb34b92e8fd15e687ae" kindref="member">initializeTimeIntegration</ref>(self.timeIntegration)</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.shockCapturing<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.shockCapturing.initializeElementQuadrature(self.mesh,self.timeIntegration.t,self.q)</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1ada3156119b01e15cacf7344aea0e7344" kindref="member">calculateElementBoundaryQuadrature</ref>(self):</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a6ae65093a16e05babbe0414a26dcef53" kindref="member">calculateExteriorElementBoundaryQuadrature</ref>(self):</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.u[0].femSpace.elementMaps.getBasisValuesTraceRef(self.elementBoundaryQuadraturePoints)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.u[0].femSpace.elementMaps.getBasisGradientValuesTraceRef(self.elementBoundaryQuadraturePoints)</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.u[0].femSpace.getBasisValuesTraceRef(self.elementBoundaryQuadraturePoints)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.u[0].femSpace.getBasisGradientValuesTraceRef(self.elementBoundaryQuadraturePoints)</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.u[0].femSpace.elementMaps.getValuesGlobalExteriorTrace(self.elementBoundaryQuadraturePoints,</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.ebqe[</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">])</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.fluxBoundaryConditionsObjectsDict<sp/>=<sp/>dict([(cj,FluxBoundaryConditions(self.mesh,</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.nElementBoundaryQuadraturePoints_elementBoundary,</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.ebqe[(</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">)],</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.advectiveFluxBoundaryConditionsSetterDict[cj],</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.diffusiveFluxBoundaryConditionsSetterDictDict[cj]))</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>cj<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.advectiveFluxBoundaryConditionsSetterDict.keys()])</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.coefficients.initializeGlobalExteriorElementBoundaryQuadrature(self.timeIntegration.t,self.ebqe)</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a60777abeb4537976830f744dec3e371d" kindref="member">estimate_mt</ref>(self):</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1a40b01f60a7036cf3ec8d73e4fb956e77" kindref="member">calculateAuxiliaryQuantitiesAfterStep</ref>(self):</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="d6/d1a/classproteus_1_1ADR_1_1LevelModel_1abceb76e46e731f0e0dd69c89f7352453" kindref="member">calculateSolutionAtQuadrature</ref>(self):</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="ADR.py"/>
  </compounddef>
</doxygen>
