<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="Domain_8py" kind="file" language="Python">
    <compoundname>Domain.py</compoundname>
    <innerclass refid="classproteus_1_1Domain_1_1D__base" prot="public">proteus::Domain::D_base</innerclass>
    <innerclass refid="classproteus_1_1Domain_1_1RectangularDomain" prot="public">proteus::Domain::RectangularDomain</innerclass>
    <innerclass refid="classproteus_1_1Domain_1_1GMSH__3D__Domain" prot="public">proteus::Domain::GMSH_3D_Domain</innerclass>
    <innerclass refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain" prot="public">proteus::Domain::PlanarStraightLineGraphDomain</innerclass>
    <innerclass refid="classproteus_1_1Domain_1_1InterpolatedBathymetryDomain" prot="public">proteus::Domain::InterpolatedBathymetryDomain</innerclass>
    <innerclass refid="classproteus_1_1Domain_1_1TriangulatedSurfaceDomain" prot="public">proteus::Domain::TriangulatedSurfaceDomain</innerclass>
    <innerclass refid="classproteus_1_1Domain_1_1Mesh2DMDomain" prot="public">proteus::Domain::Mesh2DMDomain</innerclass>
    <innerclass refid="classproteus_1_1Domain_1_1Mesh3DMDomain" prot="public">proteus::Domain::Mesh3DMDomain</innerclass>
    <innerclass refid="classproteus_1_1Domain_1_1MeshHexDomain" prot="public">proteus::Domain::MeshHexDomain</innerclass>
    <innerclass refid="classproteus_1_1Domain_1_1MeshTetgenDomain" prot="public">proteus::Domain::MeshTetgenDomain</innerclass>
    <innerclass refid="classproteus_1_1Domain_1_1PUMIDomain" prot="public">proteus::Domain::PUMIDomain</innerclass>
    <innerclass refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain" prot="public">proteus::Domain::PiecewiseLinearComplexDomain</innerclass>
    <innernamespace refid="namespaceproteus_1_1Domain">proteus::Domain</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceproteus_1_1Domain" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">A<sp/>class<sp/>hierarchy<sp/>and<sp/>tools<sp/>for<sp/>building<sp/>domains<sp/>of<sp/>PDE&apos;s.</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">..<sp/>inheritance-diagram::<sp/>proteus.Domain</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral"><sp/><sp/><sp/>:parts:<sp/>1</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>print_function</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>__future__<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>division</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>zip</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>str</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>range</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>past.utils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>old_div</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>builtins<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>object</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespaceproteus_1_1Profiling" kindref="compound">proteus.Profiling</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>logEvent</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>proteus<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MeshTools</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/><ref refid="namespaceproteus_1_1MeshAdaptPUMI" kindref="compound">proteus.MeshAdaptPUMI</ref><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>MeshAdapt</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="classproteus_1_1Domain_1_1D__base" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1D__base" kindref="compound">D_base</ref>(object):</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="23"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>The<sp/>base<sp/>class<sp/>for<sp/>domains</highlight></codeline>
<codeline lineno="24"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1D__base_1aa07397b7965d61977211e7dbf0fe7a57" kindref="member">__init__</ref>(self,<sp/>nd,<sp/>name=&quot;defaultDomain&quot;,<sp/>units=&quot;m&quot;):</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Set<sp/>dimensions<sp/>(nd),<sp/>name<sp/>string,<sp/>and<sp/>units<sp/>string</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nd<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>[1,2,3]:</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>RuntimeError(</highlight><highlight class="stringliteral">&quot;Domain<sp/>object<sp/>must<sp/>have<sp/>dimension<sp/>1,2,<sp/>or<sp/>3&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref><sp/>=<sp/>nd</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a1248c7a4944239779d99d71e5eae7162" kindref="member">name</ref><sp/>=<sp/>name</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a970de618ed8e34c7695e8e84692ed3e4" kindref="member">units</ref><sp/>=<sp/>units</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>make<sp/>default<sp/>empty<sp/>list<sp/>for<sp/>parameters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af816564044e931beaa0e2c8d3f3e158e" kindref="member">facets</ref><sp/>=<sp/>[]<sp/><sp/></highlight><highlight class="comment">#<sp/>necessary<sp/>in<sp/>2D<sp/>for<sp/>gmsh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a25a228a11d132cb908ef5e78b4ceeb52" kindref="member">facetFlags</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c8eed252e3c614d59c95a5516029307" kindref="member">holes_ind</ref><sp/>=<sp/>[]<sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>gmsh:<sp/>index<sp/>of<sp/>hole<sp/>(2D:<sp/>facet;<sp/>3D:<sp/>volume)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a12d4af36350981a4abd033bbd0467bc1" kindref="member">volumes</ref><sp/>=<sp/>[]<sp/><sp/></highlight><highlight class="comment">#<sp/>only<sp/>for<sp/>gmsh:<sp/>loop<sp/>of<sp/>facets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>bounding<sp/>box</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>list<sp/>of<sp/>shape<sp/>instances<sp/>(from<sp/>proteus.SpatialTools.py)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad421ffc12aba48f9054332cc1fc42ad6" kindref="member">shape_list</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>list<sp/>of<sp/>boundary<sp/>conditions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a09f073476ff5801f2c804220f0425c7a" kindref="member">bc</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>list<sp/>of<sp/>auxiliaryVariables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a0c78d773db882f0be4e694845543785f" kindref="member">auxiliaryVariables</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>needed<sp/>for<sp/>gmsh</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a12d4af36350981a4abd033bbd0467bc1" kindref="member">volumes</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a47cab73fda252a4bccbaad2292e4ae77" kindref="member">BC</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af4139a916f38fc55d8f13c6c646b4a78" kindref="member">BCbyFlag</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>use_gmsh<sp/>hack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ab37caff288a66958309df33ae9e617ec" kindref="member">use_gmsh</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af3b259da8e3788350bce76488d93d21e" kindref="member">MeshOptions</ref><sp/>=<sp/><ref refid="classproteus_1_1MeshTools_1_1MeshOptions" kindref="compound">MeshTools.MeshOptions</ref>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>)</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>for<sp/>PUMI<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af4dc82e0787212acf9d44c6cb880d17a" kindref="member">faceList</ref>=[]<sp/></highlight><highlight class="comment">#list<sp/>of<sp/>the<sp/>boundary<sp/>IDs<sp/>that<sp/>have<sp/>corresponding<sp/>BCs,<sp/>might<sp/>be<sp/>the<sp/>same<sp/>as<sp/>self.facets[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a333a99c3734cd7f3592ad7804d444217" kindref="member">regList</ref>=[]<sp/></highlight><highlight class="comment">#<sp/>list<sp/>of<sp/>regions<sp/>in<sp/>the<sp/>domain,<sp/>this<sp/>might<sp/>be<sp/>the<sp/>same<sp/>as<sp/>self.regions[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>to<sp/>know<sp/>if<sp/>domain<sp/>uses<sp/>SpatialTools</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>automatically<sp/>set<sp/>to<sp/>True<sp/>when<sp/>proteus.SpatialTools.assembleDomain()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>is<sp/>called</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a1caa141cc5ac96dece7e871df06a2064" kindref="member">useSpatialTools</ref><sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>default<sp/>value<sp/>for<sp/>barycenters<sp/>(compatibility<sp/>with<sp/>TwoPhaseFlow)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1abaa8e583b2573201e4cbe137ab954f78" kindref="member">barycenters</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#Get<sp/>the<sp/>mesh<sp/>entity<sp/>to<sp/>model<sp/>entity<sp/>classification<sp/>for<sp/>every<sp/>entity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1D__base_1a4eb0856f7e70fc4b3ad2ca9887a50d8c" kindref="member">isOnLine</ref>(self,pointA,pointB,testPoint):</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pointA_np<sp/>=<sp/>np.asarray(pointA).astype(</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pointB_np<sp/>=<sp/>np.asarray(pointB).astype(</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector1<sp/>=<sp/>testPoint-pointA_np</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vector2<sp/>=<sp/>pointB_np-pointA_np</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>np.cross(vector1,vector2)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>if(np.linalg.norm(value)&lt;1e-13):<sp/></highlight><highlight class="comment">#is<sp/>the<sp/>point<sp/>collinear</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(abs(vector1[0])<sp/>&gt;=<sp/>abs(vector1[1])<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>abs(vector1[0])<sp/>&gt;=<sp/>abs(vector1[2])):</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if((vector1[0]&lt;0)==(vector2[0]&lt;0)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>abs(vector1[0])&lt;abs(vector2[0])):</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif(abs(vector1[1])<sp/>&gt;=<sp/>abs(vector1[0])<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>abs(vector1[1])<sp/>&gt;=<sp/>abs(vector1[2])):</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if((vector1[1]&lt;0)==(vector2[1]&lt;0)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>abs(vector1[1])&lt;abs(vector2[1])):</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elif(abs(vector1[2])<sp/>&gt;=<sp/>abs(vector1[1])<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>abs(vector1[2])<sp/>&gt;=<sp/>abs(vector1[0])):</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if((vector1[2]&lt;0)==(vector2[2]&lt;0)<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>abs(vector1[2])&lt;abs(vector2[2])):</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1D__base_1afacc95a01157cc8165dff81c7f117e1e" kindref="member">getMesh2ModelClassification</ref>(self,mesh):</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#There<sp/>is<sp/>an<sp/>implicit<sp/>assumption<sp/>that<sp/>the<sp/>mesh<sp/>comprises<sp/>simplices<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>spatial</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#initialize<sp/>the<sp/>necessary<sp/>list</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>vertexClassifyChecklist<sp/>=<sp/>[0]*mesh.nNodes_owned</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>edgeClassifyChecklist<sp/>=<sp/>[0]*mesh.nEdges_owned</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>boundaryClassifyChecklist<sp/>=<sp/>[0]*mesh.nElementBoundaries_global</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.meshVertex2Model=<sp/>[0]*mesh.nNodes_owned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.meshEdge2Model=[(0,0)]*mesh.nEdges_owned</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.meshBoundary2Model=[0]*mesh.nElementBoundaries_global</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#identify<sp/>model<sp/>vertices<sp/>with<sp/>a<sp/>k-d<sp/>tree</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>meshVertexTree<sp/>=<sp/>spatial.cKDTree(mesh.nodeArray)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>idx,vertex<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>):</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>==2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(vertex)<sp/>==<sp/>2):<sp/></highlight><highlight class="comment">#there<sp/>might<sp/>be<sp/>a<sp/>smarter<sp/>way<sp/>to<sp/>do<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertex.append(0.0)<sp/></highlight><highlight class="comment">#need<sp/>to<sp/>make<sp/>a<sp/>3D<sp/>coordinate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closestVertex<sp/>=<sp/>meshVertexTree.query(vertex)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.meshVertex2Model[closestVertex[1]]<sp/>=<sp/>(idx,0)<sp/></highlight><highlight class="comment">#in<sp/>cpp<sp/>will<sp/>make<sp/>this<sp/>a<sp/>1D<sp/>array?</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexClassifyChecklist[closestVertex[1]]<sp/>=<sp/>1<sp/></highlight><highlight class="comment">#mark<sp/>mesh<sp/>vertex<sp/>as<sp/>having<sp/>found<sp/>a<sp/>classification</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#Construct<sp/>Model<sp/>vertices<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>modelPoints<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>)):</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point<sp/>=<sp/>np.asarray([self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>[i][0],self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>[i][1],self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>[i][2]]).astype(</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>modelPoints.append(point)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#find<sp/>faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#self.meshEdge2Model<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(mesh.nExteriorElementBoundaries_global):</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>mesh.exteriorElementBoundariesArray[i]</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testPoint<sp/>=<sp/>np.asarray([mesh.elementBoundaryBarycentersArray[idx][0],mesh.elementBoundaryBarycentersArray[idx][1],mesh.elementBoundaryBarycentersArray[idx][2]]).astype(</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>idxBoundary,modelBoundary<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>):</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a4eb0856f7e70fc4b3ad2ca9887a50d8c" kindref="member">isOnLine</ref>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>[modelBoundary[0]],self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>[modelBoundary[1]],testPoint)):</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.meshBoundary2Model[idx]<sp/>=<sp/>(idxBoundary,self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>-1)</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundaryClassifyChecklist[idx]<sp/>=<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#if<sp/>vertex<sp/>is<sp/>not<sp/>classified<sp/>as<sp/>model<sp/>vertex,<sp/>the<sp/>adjacent<sp/>vertices<sp/>of<sp/>the<sp/>exterior<sp/>mesh<sp/>boundary<sp/>in<sp/>2D<sp/>must<sp/>be<sp/>on<sp/>a<sp/>model<sp/>boundary<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vID<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mesh.elementBoundaryNodesArray[idx]:</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#in<sp/>3D,<sp/>I<sp/>will<sp/>need<sp/>to<sp/>add<sp/>an<sp/>additional<sp/>function<sp/>to<sp/>check<sp/>if<sp/>a<sp/>vertex<sp/>is<sp/>on<sp/>model<sp/>edges<sp/>as<sp/>well</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>vertexClassifyChecklist[vID]):</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.meshVertex2Model[vID]<sp/>=<sp/>(idxBoundary,self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>-1)</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexClassifyChecklist[vID]<sp/>=<sp/>1</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(mesh.nInteriorElementBoundaries_global):</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>mesh.interiorElementBoundariesArray[i]</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(mesh.elementMaterialTypes[mesh.elementBoundaryElementsArray[idx][0]]<sp/>!=<sp/>mesh.elementMaterialTypes[mesh.elementBoundaryElementsArray[idx][1]]):</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>testPoint<sp/>=<sp/>np.asarray([mesh.elementBoundaryBarycentersArray[idx][0],mesh.elementBoundaryBarycentersArray[idx][1],mesh.elementBoundaryBarycentersArray[idx][2]]).astype(</highlight><highlight class="stringliteral">&apos;d&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>idxBoundary,modelBoundary<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>):</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a4eb0856f7e70fc4b3ad2ca9887a50d8c" kindref="member">isOnLine</ref>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>[modelBoundary[0]],self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>[modelBoundary[1]],testPoint)):</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.meshBoundary2Model[idx]<sp/>=<sp/>(idxBoundary,self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>-1)</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundaryClassifyChecklist[idx]<sp/>=<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vID<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mesh.elementBoundaryNodesArray[idx]:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vertexClassifyChecklist[vID]<sp/>!=<sp/>1):<sp/></highlight><highlight class="comment">#it<sp/>can<sp/>be<sp/>0<sp/>or<sp/>it<sp/>can<sp/>be<sp/>2<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.meshVertex2Model[vID]<sp/>=<sp/>(idxBoundary,self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>-1)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexClassifyChecklist[vID]=1</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regionID<sp/>=<sp/>mesh.elementMaterialTypes[mesh.elementBoundaryElementsArray[idx][0]]</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.meshBoundary2Model[idx]<sp/>=<sp/>(regionID,self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>)</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundaryClassifyChecklist[idx]<sp/>=<sp/>1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vID<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>mesh.elementBoundaryNodesArray[idx]:</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>vertexClassifyChecklist[vID]):</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.meshVertex2Model[vID]<sp/>=<sp/>(regionID,self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vertexClassifyChecklist[vID]=2</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(len(boundaryClassifyChecklist)==<ref refid="Headers_8h_1a4236a05d5d04839f0af91439cb8820b8" kindref="member">sum</ref>(boundaryClassifyChecklist))</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="jf_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(boundaryClassifyChecklist)==1)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1D__base_1aa9a403de7d505645de44d19ef948af33" kindref="member">writeAsymptote</ref>(self,<sp/>fileprefix):</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write<sp/>a<sp/>representation<sp/>of<sp/>the<sp/>domain<sp/>to<sp/>file<sp/>using<sp/>the<sp/>Asymptote<sp/>vector<sp/>graphics<sp/>language.</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>UserWarning(</highlight><highlight class="stringliteral">&quot;Asymptote<sp/>output<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1D__base_1a5959770086140c5de2715d5e5b570dba" kindref="member">writeXdmf</ref>(self,ar):</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Store<sp/>the<sp/>domain<sp/>in<sp/>an<sp/>Xdmf<sp/>file.</highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>UserWarning(</highlight><highlight class="stringliteral">&quot;Xdmf<sp/>output<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1D__base_1aaa0db2be3fce1b73170806c34f63699c" kindref="member">getBoundingBox</ref>(self):</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Get<sp/>the<sp/>bounding<sp/>box<sp/>of<sp/>a<sp/>set<sp/>of<sp/>vertices.</highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref><sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>:</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>d<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>):</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xMax<sp/>=<sp/><ref refid="group__analyticalSolutions_1gaffe776513b24d84b39af8ab0930fef7f" kindref="member">max</ref>(row[d]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>row<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>xMin<sp/>=<sp/><ref refid="jf_8h_1ac6afabdc09a49a433ee19d8a9486056d" kindref="member">min</ref>(row[d]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>row<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>)</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref><sp/>+=<sp/>[xMin]</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref><sp/>+=<sp/>[xMax-xMin]</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1D__base_1a45c2bcc2b59f11c442df473a4bb5af28" kindref="member">writeGeo</ref>(self,<sp/>fileprefix,<sp/>group_names=False,<sp/>he_max=None):</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Writes<sp/>a<sp/>Gmsh<sp/>.geo<sp/>file<sp/>based<sp/>on<sp/>the<sp/>geometrical<sp/>information<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Domain.</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileprefix:<sp/>str</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Name<sp/>of<sp/>the<sp/>file<sp/>to<sp/>save<sp/>(prefix<sp/>without<sp/>.geo)</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group_names:<sp/>Optional[bool]</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>True<sp/>to<sp/>write<sp/>name<sp/>of<sp/>physical<sp/>groups<sp/>in<sp/>.geo<sp/>(default:<sp/>False)<sp/></highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>he_max:<sp/>Optional[double]</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Size<sp/>of<sp/>the<sp/>maximum<sp/>characteristic<sp/>element<sp/>size.<sp/>Should<sp/>be<sp/>set</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>meshes<sp/>using<sp/>a<sp/>uniform<sp/>refinement.</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a1667592289db007f8dc6062d6b343b6f" kindref="member">geofile</ref><sp/>=<sp/>fileprefix</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref><sp/>=<sp/>fileprefix</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo<sp/>=<sp/>open(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a1667592289db007f8dc6062d6b343b6f" kindref="member">geofile</ref>+</highlight><highlight class="stringliteral">&apos;.geo&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp<sp/>=<sp/>{}<sp/><sp/></highlight><highlight class="comment">#<sp/>physical<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl<sp/>=<sp/>{}<sp/><sp/></highlight><highlight class="comment">#<sp/>physical<sp/>lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps<sp/>=<sp/>{}<sp/><sp/></highlight><highlight class="comment">#<sp/>physical<sp/>surfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pv<sp/>=<sp/>{}<sp/><sp/></highlight><highlight class="comment">#<sp/>physical<sp/>volume</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sN<sp/>=<sp/>len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>)</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;\n//<sp/>Points\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>):</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref><sp/>==<sp/>3:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>z<sp/>=<sp/>v[2]</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&quot;Point(%d)<sp/>=<sp/>{%g,%g,%g};\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>(i+1,v[0],v[1],<sp/>z))</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref>:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref>[i]</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pp:</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp[flag]<sp/>+=<sp/>[i+1]</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pp[flag]<sp/>=<sp/>[i+1]</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb_points<sp/>=<sp/>i+1</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines_dict<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nb_points):</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines_dict[i]<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Lines</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;\n//<sp/>Lines\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>line_list<sp/>=<sp/>[]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>):</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&quot;Line(%d)<sp/>=<sp/>{%d,%d};\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>(i+1,s[0]+1,s[1]+1))</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>segments<sp/>in<sp/>dictionary</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines_dict[s[0]][s[1]]<sp/>=<sp/>i</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref>:</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref>[i]</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pl:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl[flag]<sp/>+=<sp/>[i+1]</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pl[flag]<sp/>=<sp/>[i+1]</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Surfaces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;\n//<sp/>Surfaces\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineloop_count<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface_line_list<sp/>=<sp/>[]<sp/><sp/></highlight><highlight class="comment">#<sp/>need<sp/>to<sp/>store<sp/>for<sp/>mesh<sp/>constraints<sp/>later</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>facet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1af816564044e931beaa0e2c8d3f3e158e" kindref="member">facets</ref>):</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seg_flag<sp/>=<sp/>sN+i+1</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineloop<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineloops<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineloops_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_list<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>subfacet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref><sp/>==<sp/>3<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref><sp/>==<sp/>2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c8eed252e3c614d59c95a5516029307" kindref="member">holes_ind</ref>):</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j,<sp/>subf<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(f):</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineloop<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>vertices<sp/>in<sp/>facet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>ver<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(subf):</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>ver<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(lines_dict[subf[k-1]].keys()):</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineloop<sp/>+=<sp/>[lines_dict[subf[k-1]][ver]+1]</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>subf[k-1]<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(lines_dict[ver].keys()):</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>reversed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineloop<sp/>+=<sp/>[-(lines_dict[ver][subf[k-1]]+1)]</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind<sp/>=<sp/>seg_flag+lines</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lines<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;Line(%d)<sp/>=<sp/>{%d,%d};\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(ind,<sp/>subf[k-1]+1,<sp/>ver+1))</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineloop<sp/>+=<sp/>[ind]</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_list<sp/>+=<sp/>lineloop</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;Line<sp/>Loop(%d)<sp/>=<sp/>{%s};\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(lineloop_count+1,<sp/>str(lineloop)[1:-1]))</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineloops<sp/>+=<sp/>[lineloop_count+1]</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineloop_count<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>print<sp/>i,<sp/>j</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface_line_list<sp/>+=<sp/>[line_list]</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;Plane<sp/>Surface(%d)<sp/>=<sp/>{%s};\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(i+1,<sp/>str(lineloops)[1:-1]))</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a25a228a11d132cb908ef5e78b4ceeb52" kindref="member">facetFlags</ref>:</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a25a228a11d132cb908ef5e78b4ceeb52" kindref="member">facetFlags</ref>[i]</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ps:</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps[flag]<sp/>+=<sp/>[i+1]</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ps[flag]<sp/>=<sp/>[i+1]</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Volumes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;\n//<sp/>Volumes\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i,<sp/>V<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a12d4af36350981a4abd033bbd0467bc1" kindref="member">volumes</ref>):</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface_loops<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c8eed252e3c614d59c95a5516029307" kindref="member">holes_ind</ref>:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j,<sp/>sV<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(V):</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lineloop_count<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;Surface<sp/>Loop(%d)<sp/>=<sp/>{%s};\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(lineloop_count,<sp/>str((np.array(sV)+1).tolist())[1:-1]))</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>surface_loops<sp/>+=<sp/>[lineloop_count]</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;Volume(%d)<sp/>=<sp/>{%s};\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(i+1,<sp/>str(surface_loops)[1:-1]))</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>[i]</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>:</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pv:</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pv[flag]<sp/>+=<sp/>[i+1]</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pv[flag]<sp/>=<sp/>[i+1]</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Physical<sp/>Groups</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;\n//<sp/>Physical<sp/>Groups\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref>:</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inv_bt<sp/>=<sp/>{v:<sp/>k<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref>.items()}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pp:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind<sp/>=<sp/>pp[flag]</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>group_names<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">+inv_bt[flag]+</highlight><highlight class="stringliteral">&apos;&quot;,<sp/>&apos;</highlight><highlight class="normal">+str(flag)</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&quot;Physical<sp/>Point({0})<sp/>=<sp/>{{{1}}};\n&quot;</highlight><highlight class="normal">.format(str(flag),<sp/>str(ind)[1:-1]))</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pl:</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind<sp/>=<sp/>pl[flag]</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>group_names<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">+inv_bt[flag]+</highlight><highlight class="stringliteral">&apos;&quot;,<sp/>&apos;</highlight><highlight class="normal">+str(flag)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&quot;Physical<sp/>Line({0})<sp/>=<sp/>{{{1}}};\n&quot;</highlight><highlight class="normal">.format(str(flag),<sp/>str(ind)[1:-1]))</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>ps:</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind<sp/>=<sp/>ps[flag]</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>group_names<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">+inv_bt[flag]+</highlight><highlight class="stringliteral">&apos;&quot;,<sp/>&apos;</highlight><highlight class="normal">+str(flag)</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&quot;Physical<sp/>Surface({0})<sp/>=<sp/>{{{1}}};\n&quot;</highlight><highlight class="normal">.format(str(flag),<sp/>str(ind)[1:-1]))</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>pv:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind<sp/>=<sp/>pv[flag]</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>group_names<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&quot;&apos;</highlight><highlight class="normal">+inv_bt[flag]+</highlight><highlight class="stringliteral">&apos;&quot;,<sp/>&apos;</highlight><highlight class="normal">+str(flag)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&quot;Physical<sp/>Volume({0})<sp/>=<sp/>{{{1}}};\n&quot;</highlight><highlight class="normal">.format(str(flag),<sp/>str(ind)[1:-1]))</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;\n//<sp/>Other<sp/>Options\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>he_max<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;Mesh.CharacteristicLengthMax<sp/>=<sp/>{0};\n&apos;</highlight><highlight class="normal">.format(he_max))</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geo.write(</highlight><highlight class="stringliteral">&apos;Coherence;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1D__base_1af0f2255387e329fb10ed43dc72e3869e" kindref="member">gmsh2proteus</ref>(self,<sp/>geofile,<sp/>BC_class):</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Populates<sp/>the<sp/>boundaryTags<sp/>and<sp/>BC<sp/>dictionaries<sp/>of<sp/>the<sp/>domain<sp/>by<sp/>importing<sp/>tag<sp/>and<sp/></highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>from<sp/>.geo<sp/>file.</highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>geofile:<sp/>str</highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Name<sp/>of<sp/>the<sp/>geofile</highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>BC_class:<sp/>proteus.BoundaryConditions.BC_Base</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Bounday<sp/>Conditions<sp/>class<sp/>to<sp/>populate<sp/>BC<sp/>dictionaries<sp/></highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref><sp/>=<sp/><ref refid="namespaceproteus_1_1Domain_1ac2703104f5a3a5a1644c2f887ebabd7b" kindref="member">getGmshPhysicalGroups</ref>(geofile)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a47cab73fda252a4bccbaad2292e4ae77" kindref="member">BC</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af4139a916f38fc55d8f13c6c646b4a78" kindref="member">BCbyFlag</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>tag,<sp/>flag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>list(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref>.items()):</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a47cab73fda252a4bccbaad2292e4ae77" kindref="member">BC</ref>[tag]<sp/>=<sp/>BC_class(nd=self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>)</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af4139a916f38fc55d8f13c6c646b4a78" kindref="member">BCbyFlag</ref>[flag]<sp/>=<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a47cab73fda252a4bccbaad2292e4ae77" kindref="member">BC</ref>[tag]</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353" refid="classproteus_1_1Domain_1_1RectangularDomain" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1RectangularDomain" kindref="compound">RectangularDomain</ref>(<ref refid="classproteus_1_1Domain_1_1D__base" kindref="compound">D_base</ref>):</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="355"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Rectangular<sp/>domains<sp/>in<sp/>1,2,<sp/>or<sp/>3D<sp/>specified<sp/>by<sp/>the<sp/>lower<sp/>left<sp/>hand<sp/>corner<sp/>and<sp/>dimensions.</highlight></codeline>
<codeline lineno="356"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1RectangularDomain_1a4b70c493164dc2ab674d882366e4ca86" kindref="member">__init__</ref>(self,</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L=[1.0,1.0,1.0],</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>x=[0.0,0.0,0.0],</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=&quot;DefaultRectangularDomain&quot;,</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>units=&quot;m&quot;):</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D_base.__init__(self,len(L),name,units)</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref><sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;left&apos;</highlight><highlight class="normal">:3,</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;right&apos;</highlight><highlight class="normal">:5,</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;front&apos;</highlight><highlight class="normal">:2,</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;back&apos;</highlight><highlight class="normal">:6,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;top&apos;</highlight><highlight class="normal">:4,</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;bottom&apos;</highlight><highlight class="normal">:1}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>==2:</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref><sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;left&apos;</highlight><highlight class="normal">:4,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;right&apos;</highlight><highlight class="normal">:2,</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;top&apos;</highlight><highlight class="normal">:3,</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;bottom&apos;</highlight><highlight class="normal">:1}</highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>=x</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>=L</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1RectangularDomain_1ab2836c44ae68ca773bf26f126b478152" kindref="member">writePoly</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write<sp/>the<sp/>RectangularDomain<sp/>using<sp/>the<sp/>poly<sp/>format.</highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref><sp/>=<sp/>fileprefix<sp/></highlight><highlight class="comment">#[temp]<sp/>see<sp/>PSLG<sp/>for<sp/>better<sp/>implementation<sp/>that<sp/>checks<sp/>if<sp/>it<sp/>already<sp/>exists</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1RectangularDomain_1a829ebff266a2fbc78e7443c192510085" kindref="member">boundaryLegend</ref><sp/>=<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unitesize=old_div(4.0,self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[0])</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(fileprefix+</highlight><highlight class="stringliteral">&quot;.poly&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>==2:</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1RectangularDomain_1a829ebff266a2fbc78e7443c192510085" kindref="member">boundaryLegend</ref><sp/>=<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a57d9223a524965071724336c10c8de4e" kindref="member">boundaryTags</ref></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileString=</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="389"><highlight class="stringliteral">#<sp/>vertices</highlight></codeline>
<codeline lineno="390"><highlight class="stringliteral">4<sp/>2<sp/>0<sp/>1</highlight></codeline>
<codeline lineno="391"><highlight class="stringliteral">1<sp/>%(x0)f<sp/>%(x1)f<sp/>1</highlight></codeline>
<codeline lineno="392"><highlight class="stringliteral">2<sp/>%(x0pL0)f<sp/>%(x1)f<sp/>1</highlight></codeline>
<codeline lineno="393"><highlight class="stringliteral">3<sp/>%(x0pL0)f<sp/>%(x1pL1)f<sp/>3</highlight></codeline>
<codeline lineno="394"><highlight class="stringliteral">4<sp/>%(x0)f<sp/>%(x1pL1)f<sp/>3</highlight></codeline>
<codeline lineno="395"><highlight class="stringliteral">#<sp/>segments</highlight></codeline>
<codeline lineno="396"><highlight class="stringliteral">4<sp/>1</highlight></codeline>
<codeline lineno="397"><highlight class="stringliteral">1<sp/>1<sp/>2<sp/>1</highlight></codeline>
<codeline lineno="398"><highlight class="stringliteral">2<sp/>2<sp/>3<sp/>2</highlight></codeline>
<codeline lineno="399"><highlight class="stringliteral">3<sp/>3<sp/>4<sp/>3</highlight></codeline>
<codeline lineno="400"><highlight class="stringliteral">4<sp/>4<sp/>1<sp/>4</highlight></codeline>
<codeline lineno="401"><highlight class="stringliteral">#<sp/>holes</highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral">0</highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral">#<sp/>regions</highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral">1</highlight></codeline>
<codeline lineno="405"><highlight class="stringliteral">1<sp/>%(x0pL0)f<sp/>%(x1pL1)f<sp/>1<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"><sp/><sp/>%<sp/>{</highlight><highlight class="stringliteral">&apos;x0&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[0],</highlight><highlight class="stringliteral">&apos;x1&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[1],</highlight><highlight class="stringliteral">&apos;x0pL0&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[0]+self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[0],</highlight><highlight class="stringliteral">&apos;x1pL1&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[1]+self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[1]}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">#<sp/>tjp<sp/>altered<sp/>the<sp/>regions<sp/>line<sp/>and<sp/>the<sp/>boundary<sp/>tags<sp/>from<sp/>0<sp/>to<sp/>1<sp/>to<sp/>get<sp/>to<sp/>work</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>==3:</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileString=</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="409"><highlight class="stringliteral">#<sp/>vertices</highlight></codeline>
<codeline lineno="410"><highlight class="stringliteral">8<sp/>3<sp/>0<sp/>1</highlight></codeline>
<codeline lineno="411"><highlight class="stringliteral">1<sp/>%(x0)f<sp/>%(x1)f<sp/>%(x2)f<sp/>1</highlight></codeline>
<codeline lineno="412"><highlight class="stringliteral">2<sp/>%(x0)f<sp/>%(x1pL1)f<sp/>%(x2)f<sp/>2</highlight></codeline>
<codeline lineno="413"><highlight class="stringliteral">3<sp/>%(x0pL0)f<sp/>%(x1pL1)f<sp/>%(x2)f<sp/>3</highlight></codeline>
<codeline lineno="414"><highlight class="stringliteral">4<sp/>%(x0pL0)f<sp/>%(x1)f<sp/>%(x2)f<sp/>4</highlight></codeline>
<codeline lineno="415"><highlight class="stringliteral">5<sp/>%(x0)f<sp/>%(x1)f<sp/>%(x2pL2)f<sp/>5</highlight></codeline>
<codeline lineno="416"><highlight class="stringliteral">6<sp/>%(x0)f<sp/>%(x1pL1)f<sp/>%(x2pL2)f<sp/>6</highlight></codeline>
<codeline lineno="417"><highlight class="stringliteral">7<sp/>%(x0pL0)f<sp/>%(x1pL1)f<sp/>%(x2pL2)f<sp/>7</highlight></codeline>
<codeline lineno="418"><highlight class="stringliteral">8<sp/>%(x0pL0)f<sp/>%(x1)f<sp/>%(x2pL2)f<sp/>8</highlight></codeline>
<codeline lineno="419"><highlight class="stringliteral">#<sp/>facets</highlight></codeline>
<codeline lineno="420"><highlight class="stringliteral">6<sp/>1</highlight></codeline>
<codeline lineno="421"><highlight class="stringliteral">1<sp/>0<sp/>1</highlight></codeline>
<codeline lineno="422"><highlight class="stringliteral">4<sp/>1<sp/>2<sp/>3<sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>bottom</highlight></codeline>
<codeline lineno="423"><highlight class="stringliteral">1<sp/>0<sp/>2</highlight></codeline>
<codeline lineno="424"><highlight class="stringliteral">4<sp/>1<sp/>5<sp/>8<sp/>4<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>front</highlight></codeline>
<codeline lineno="425"><highlight class="stringliteral">1<sp/>0<sp/>3</highlight></codeline>
<codeline lineno="426"><highlight class="stringliteral">4<sp/>1<sp/>5<sp/>6<sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>left</highlight></codeline>
<codeline lineno="427"><highlight class="stringliteral">1<sp/>0<sp/>4</highlight></codeline>
<codeline lineno="428"><highlight class="stringliteral">4<sp/>5<sp/>6<sp/>7<sp/>8<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>top</highlight></codeline>
<codeline lineno="429"><highlight class="stringliteral">1<sp/>0<sp/>5</highlight></codeline>
<codeline lineno="430"><highlight class="stringliteral">4<sp/>4<sp/>8<sp/>7<sp/>3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>right</highlight></codeline>
<codeline lineno="431"><highlight class="stringliteral">1<sp/>0<sp/>6</highlight></codeline>
<codeline lineno="432"><highlight class="stringliteral">4<sp/>3<sp/>7<sp/>6<sp/>2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#<sp/>back</highlight></codeline>
<codeline lineno="433"><highlight class="stringliteral">#<sp/>holes</highlight></codeline>
<codeline lineno="434"><highlight class="stringliteral">0</highlight></codeline>
<codeline lineno="435"><highlight class="stringliteral">#<sp/>regions</highlight></codeline>
<codeline lineno="436"><highlight class="stringliteral">1</highlight></codeline>
<codeline lineno="437"><highlight class="stringliteral">1<sp/>%(m0)f<sp/>%(m1)f<sp/>%(m2)f<sp/>1<sp/>&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>%<sp/>{</highlight><highlight class="stringliteral">&apos;x0&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[0],</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;x1&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[1],</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;x2&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[2],</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;x0pL0&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[0]+self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[0],</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;x1pL1&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[1]+self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[1],</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;x2pL2&apos;</highlight><highlight class="normal">:<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[2]+self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[2],</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;m0&apos;</highlight><highlight class="normal">:old_div((self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[0]+self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[0]),2.0),</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;m1&apos;</highlight><highlight class="normal">:old_div((self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[1]+self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[1]),2.0),</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;m2&apos;</highlight><highlight class="normal">:old_div((self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[2]+self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[2]),2.0)}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(fileString)</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1RectangularDomain_1adcdac98455ffa22578f25a028dd434e6" kindref="member">writeAsymptote</ref>(self,<sp/>fileprefix):</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="450"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write<sp/>the<sp/>rectangular<sp/>domain<sp/>as<sp/>a<sp/>box<sp/>displaying<sp/>the<sp/>dimesions<sp/>and<sp/>coloring<sp/>the<sp/>boundaries<sp/>according<sp/>to<sp/>the<sp/>boundary<sp/>flags.</highlight></codeline>
<codeline lineno="451"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unitsize=old_div(4.0,self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[0])</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(fileprefix+</highlight><highlight class="stringliteral">&quot;.asy&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>==1:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileString=</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="456"><highlight class="stringliteral">unitsize(4.0<sp/>inches/%(L)f);</highlight></codeline>
<codeline lineno="457"><highlight class="stringliteral">size(5<sp/>inches);</highlight></codeline>
<codeline lineno="458"><highlight class="stringliteral">real<sp/>L=%(L)f;</highlight></codeline>
<codeline lineno="459"><highlight class="stringliteral">real<sp/>offset=.0125L;</highlight></codeline>
<codeline lineno="460"><highlight class="stringliteral">real<sp/>x=%(x)f;</highlight></codeline>
<codeline lineno="461"><highlight class="stringliteral">string<sp/>str=&quot;$%(L)2.2f\mbox{%(units)s}$&quot;;</highlight></codeline>
<codeline lineno="462"><highlight class="stringliteral">import<sp/>graph;</highlight></codeline>
<codeline lineno="463"><highlight class="stringliteral">import<sp/>palette;</highlight></codeline>
<codeline lineno="464"><highlight class="stringliteral">pen[]<sp/>allPens=Wheel();</highlight></codeline>
<codeline lineno="465"><highlight class="stringliteral">pen[]<sp/>myPens<sp/>=<sp/>new<sp/>pen[3];</highlight></codeline>
<codeline lineno="466"><highlight class="stringliteral">for(int<sp/>i=0;i&lt;<sp/>3;++i)</highlight></codeline>
<codeline lineno="467"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="stringliteral"><sp/><sp/><sp/>int<sp/>iPen<sp/>=<sp/>round(i*allPens.length/3);</highlight></codeline>
<codeline lineno="469"><highlight class="stringliteral"><sp/><sp/><sp/>myPens[i]<sp/>=<sp/>allPens[iPen];</highlight></codeline>
<codeline lineno="470"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="471"><highlight class="stringliteral">draw((x,0)--(x+L,0)^^(x,offset)--(x+L,offset),myPens[0]);</highlight></codeline>
<codeline lineno="472"><highlight class="stringliteral">draw((x,0)--(x,offset),myPens[1]);</highlight></codeline>
<codeline lineno="473"><highlight class="stringliteral">draw((x+L,0)--(x+L,offset),myPens[2]);</highlight></codeline>
<codeline lineno="474"><highlight class="stringliteral">draw(str,(x,-offset)--(x+L,-offset),black,Bars,Arrows,PenMargins);</highlight></codeline>
<codeline lineno="475"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>%<sp/>{</highlight><highlight class="stringliteral">&apos;L&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[0],</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[0],</highlight><highlight class="stringliteral">&apos;units&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a970de618ed8e34c7695e8e84692ed3e4" kindref="member">units</ref>}</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>==2:</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileString=</highlight><highlight class="stringliteral">&quot;&quot;&quot;unitsize(4.0<sp/>inches<sp/>/<sp/>%(Lx)f);</highlight></codeline>
<codeline lineno="478"><highlight class="stringliteral">size(5<sp/>inches);</highlight></codeline>
<codeline lineno="479"><highlight class="stringliteral">real<sp/>Lx=%(Lx)f;</highlight></codeline>
<codeline lineno="480"><highlight class="stringliteral">real<sp/>Ly=%(Ly)f;</highlight></codeline>
<codeline lineno="481"><highlight class="stringliteral">real<sp/>offset=0.0125Lx;</highlight></codeline>
<codeline lineno="482"><highlight class="stringliteral">real<sp/>x=%(x)f;</highlight></codeline>
<codeline lineno="483"><highlight class="stringliteral">real<sp/>y=%(y)f;</highlight></codeline>
<codeline lineno="484"><highlight class="stringliteral">string<sp/>strx=&quot;$%(Lx)2.2f\mbox{%(units)s}$&quot;;</highlight></codeline>
<codeline lineno="485"><highlight class="stringliteral">string<sp/>stry=&quot;$%(Ly)2.2f\mbox{%(units)s}$&quot;;</highlight></codeline>
<codeline lineno="486"><highlight class="stringliteral">import<sp/>graph;</highlight></codeline>
<codeline lineno="487"><highlight class="stringliteral">import<sp/>palette;</highlight></codeline>
<codeline lineno="488"><highlight class="stringliteral">pen[]<sp/>allPens=Wheel();</highlight></codeline>
<codeline lineno="489"><highlight class="stringliteral">pen[]<sp/>myPens<sp/>=<sp/>new<sp/>pen[4];</highlight></codeline>
<codeline lineno="490"><highlight class="stringliteral">for(int<sp/>i=0;i&lt;<sp/>4;++i)</highlight></codeline>
<codeline lineno="491"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="stringliteral"><sp/><sp/><sp/>int<sp/>iPen<sp/>=<sp/>round(i*allPens.length/4);</highlight></codeline>
<codeline lineno="493"><highlight class="stringliteral"><sp/><sp/><sp/>myPens[i]<sp/>=<sp/>allPens[iPen];</highlight></codeline>
<codeline lineno="494"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="495"><highlight class="stringliteral">draw((x,y)--(x+Lx,y),myPens[0]);</highlight></codeline>
<codeline lineno="496"><highlight class="stringliteral">draw((x,y+Ly)--(x+Lx,y+Ly),myPens[1]);</highlight></codeline>
<codeline lineno="497"><highlight class="stringliteral">draw((x,y)--(x,y+Ly),myPens[2]);</highlight></codeline>
<codeline lineno="498"><highlight class="stringliteral">draw((x+Lx,y)--(x+Lx,y+Ly),myPens[3]);</highlight></codeline>
<codeline lineno="499"><highlight class="stringliteral">draw(strx,(x,y-offset)--(x+Lx,y-offset),S,black,Bars,Arrows,PenMargins);</highlight></codeline>
<codeline lineno="500"><highlight class="stringliteral">draw(stry,(x-offset,y)--(x-offset,y+Ly),W,black,Bars,Arrows,PenMargins);</highlight></codeline>
<codeline lineno="501"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>%<sp/>{</highlight><highlight class="stringliteral">&apos;Lx&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[0],</highlight><highlight class="stringliteral">&apos;Ly&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[1],</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[0],</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[1],</highlight><highlight class="stringliteral">&apos;units&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a970de618ed8e34c7695e8e84692ed3e4" kindref="member">units</ref>}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ad7b0e9ff010305c66213eef1b5285a0a" kindref="member">nd</ref>==3:</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileString=</highlight><highlight class="stringliteral">&quot;&quot;&quot;import<sp/>three;</highlight></codeline>
<codeline lineno="504"><highlight class="stringliteral">currentprojection=perspective(-2,-2,1,up=Z,target=O,showtarget=true,autoadjust=true,center=false);</highlight></codeline>
<codeline lineno="505"><highlight class="stringliteral">unitsize(4.0<sp/>inches/%(Lx)f);</highlight></codeline>
<codeline lineno="506"><highlight class="stringliteral">size(5<sp/>inches);</highlight></codeline>
<codeline lineno="507"><highlight class="stringliteral">real<sp/>Lx=%(Lx)f;</highlight></codeline>
<codeline lineno="508"><highlight class="stringliteral">real<sp/>Ly=%(Ly)f;</highlight></codeline>
<codeline lineno="509"><highlight class="stringliteral">real<sp/>Lz=%(Lz)f;</highlight></codeline>
<codeline lineno="510"><highlight class="stringliteral">real<sp/>offset=.0125Lx;</highlight></codeline>
<codeline lineno="511"><highlight class="stringliteral">real<sp/>x=%(x)f;</highlight></codeline>
<codeline lineno="512"><highlight class="stringliteral">real<sp/>y=%(y)f;</highlight></codeline>
<codeline lineno="513"><highlight class="stringliteral">real<sp/>z=%(z)f;</highlight></codeline>
<codeline lineno="514"><highlight class="stringliteral">triple<sp/>p0=(x,y,z);</highlight></codeline>
<codeline lineno="515"><highlight class="stringliteral">triple<sp/>p1=(x,y+Ly,z);</highlight></codeline>
<codeline lineno="516"><highlight class="stringliteral">triple<sp/>p2=(x+Lx,y+Ly,z);</highlight></codeline>
<codeline lineno="517"><highlight class="stringliteral">triple<sp/>p3=(x+Lx,y,z);</highlight></codeline>
<codeline lineno="518"><highlight class="stringliteral">triple<sp/>p4=(x,y,z+Lz);</highlight></codeline>
<codeline lineno="519"><highlight class="stringliteral">triple<sp/>p5=(x,y+Ly,z+Lz);</highlight></codeline>
<codeline lineno="520"><highlight class="stringliteral">triple<sp/>p6=(x+Lx,y+Ly,z+Lz);</highlight></codeline>
<codeline lineno="521"><highlight class="stringliteral">triple<sp/>p7=(x+Lx,y,z+Lz);</highlight></codeline>
<codeline lineno="522"><highlight class="stringliteral">string<sp/>strx=&quot;$%(Lx)2.2f\mbox{%(units)s}$&quot;;</highlight></codeline>
<codeline lineno="523"><highlight class="stringliteral">string<sp/>stry=&quot;$%(Ly)2.2f\mbox{%(units)s}$&quot;;</highlight></codeline>
<codeline lineno="524"><highlight class="stringliteral">string<sp/>strz=&quot;$%(Lz)2.2f\mbox{%(units)s}$&quot;;</highlight></codeline>
<codeline lineno="525"><highlight class="stringliteral">import<sp/>graph;</highlight></codeline>
<codeline lineno="526"><highlight class="stringliteral">import<sp/>palette;</highlight></codeline>
<codeline lineno="527"><highlight class="stringliteral">pen[]<sp/>allPens=Wheel();</highlight></codeline>
<codeline lineno="528"><highlight class="stringliteral">pen[]<sp/>myPens<sp/>=<sp/>new<sp/>pen[6];</highlight></codeline>
<codeline lineno="529"><highlight class="stringliteral">for(int<sp/>i=0;i&lt;<sp/>6;++i)</highlight></codeline>
<codeline lineno="530"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="stringliteral"><sp/><sp/><sp/>int<sp/>iPen<sp/>=<sp/>round(i*allPens.length/6);</highlight></codeline>
<codeline lineno="532"><highlight class="stringliteral"><sp/><sp/><sp/>myPens[i]<sp/>=<sp/>allPens[iPen];</highlight></codeline>
<codeline lineno="533"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="stringliteral">draw(surface(p0--p1--p2--p3--cycle),myPens[0]);</highlight></codeline>
<codeline lineno="535"><highlight class="stringliteral">draw(surface(p4--p5--p6--p7--cycle),myPens[1]);</highlight></codeline>
<codeline lineno="536"><highlight class="stringliteral">draw(surface(p0--p1--p5--p4--cycle),myPens[2]);</highlight></codeline>
<codeline lineno="537"><highlight class="stringliteral">draw(surface(p1--p2--p6--p5--cycle),myPens[3]);</highlight></codeline>
<codeline lineno="538"><highlight class="stringliteral">draw(surface(p2--p3--p7--p6--cycle),myPens[4]);</highlight></codeline>
<codeline lineno="539"><highlight class="stringliteral">draw(surface(p3--p0--p4--p7--cycle),myPens[5]);</highlight></codeline>
<codeline lineno="540"><highlight class="stringliteral">draw(strx,(x,y-offset,z-offset)--(x+Lx,y-offset,z-offset),-(Y+Z),black,Bars3(Z),Arrows3);</highlight></codeline>
<codeline lineno="541"><highlight class="stringliteral">draw(stry,(x-offset,y,z-offset)--(x-offset,y+Ly,z-offset),-(X+Z),black,Bars3(Z),Arrows3);</highlight></codeline>
<codeline lineno="542"><highlight class="stringliteral">draw(strz,(x-offset,y-offset,z)--(x-offset,y-offset,z+Lz),-(X+Y),black,Bars3(X),Arrows3);</highlight></codeline>
<codeline lineno="543"><highlight class="stringliteral">shipout();</highlight></codeline>
<codeline lineno="544"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>%<sp/>{</highlight><highlight class="stringliteral">&apos;Lx&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[0],</highlight><highlight class="stringliteral">&apos;Ly&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[1],</highlight><highlight class="stringliteral">&apos;Lz&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[2],</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[0],</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[1],</highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[2],</highlight><highlight class="stringliteral">&apos;units&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a970de618ed8e34c7695e8e84692ed3e4" kindref="member">units</ref>}</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(fileString)</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1RectangularDomain_1af2e423182b5c4dca22d0d0fbcacc47e6" kindref="member">writeXdmf</ref>(self,ar):</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>UserWarning(</highlight><highlight class="stringliteral">&quot;Xdmf<sp/>output<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproteus_1_1Domain_1a78b9ef35d26d662c0d22e65700a3eb1e" kindref="member">unitSimplex</ref>(nd=2):</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;Builds<sp/>a<sp/>2<sp/>or<sp/>3<sp/>dimension<sp/>reference<sp/>element.</highlight></codeline>
<codeline lineno="552"><highlight class="stringliteral"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="553"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="554"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="555"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>nd<sp/>:<sp/>int</highlight></codeline>
<codeline lineno="556"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>elements<sp/>dimension<sp/>(must<sp/>be<sp/>2<sp/>or<sp/>3)</highlight></codeline>
<codeline lineno="557"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="558"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Returns</highlight></codeline>
<codeline lineno="559"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>-------</highlight></codeline>
<codeline lineno="560"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>reference_element</highlight></codeline>
<codeline lineno="561"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nd!=2<sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>nd!=3:</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>-<sp/>Reference<sp/>element<sp/>must<sp/>have<sp/>dimension<sp/>2<sp/>or<sp/>3&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sys.exit(1)</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nd==2:</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain" kindref="compound">PlanarStraightLineGraphDomain</ref>(vertices=[[0.<sp/>,<sp/>0.],<sp/></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.<sp/>,<sp/>1.],<sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1.<sp/>,<sp/>0.]],</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segments<sp/>=<sp/>[[0,<sp/>1],</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1,<sp/>2],</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[2,<sp/>0]],</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Reference<sp/>Triangle&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>nd==3:</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundaryTags<sp/>=<sp/>{</highlight><highlight class="stringliteral">&apos;bottom&apos;</highlight><highlight class="normal">:1,</highlight><highlight class="stringliteral">&apos;front&apos;</highlight><highlight class="normal">:2,</highlight><highlight class="stringliteral">&apos;side&apos;</highlight><highlight class="normal">:3,</highlight><highlight class="stringliteral">&apos;back&apos;</highlight><highlight class="normal">:4}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain" kindref="compound">PiecewiseLinearComplexDomain</ref>(vertices=[[0.0<sp/>,<sp/>0.0<sp/>,<sp/>0.0],<sp/></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1.0<sp/>,<sp/>0.0<sp/>,<sp/>0.0],</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.0<sp/>,<sp/>1.0<sp/>,<sp/>0.0],<sp/></highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.0<sp/>,<sp/>0.0<sp/>,<sp/>1.0]<sp/>],</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facets<sp/>=<sp/>[[[0,<sp/>2,<sp/>3]],</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[0,<sp/>1,<sp/>2]],</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[0,<sp/>1,<sp/>3]],</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[1,<sp/>2,<sp/>3]]],</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>facetFlags=[boundaryTags[&apos;bottom&apos;],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundaryTags[&apos;front&apos;],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundaryTags[&apos;side&apos;],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundaryTags[&apos;back&apos;]],<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=</highlight><highlight class="stringliteral">&quot;Reference<sp/>Simplex&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590" refid="classproteus_1_1Domain_1_1GMSH__3D__Domain" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1GMSH__3D__Domain" kindref="compound">GMSH_3D_Domain</ref>(<ref refid="classproteus_1_1Domain_1_1D__base" kindref="compound">D_base</ref>):</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="592"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>A<sp/>domain<sp/>described<sp/>by<sp/>a<sp/>gmsh<sp/>.geo<sp/>file</highlight></codeline>
<codeline lineno="593"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="594"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Parameters</highlight></codeline>
<codeline lineno="595"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>----------</highlight></codeline>
<codeline lineno="596"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>geofile<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="597"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>base<sp/>filename<sp/>of<sp/>the<sp/>main<sp/>.geo<sp/>file</highlight></codeline>
<codeline lineno="598"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>he<sp/>:<sp/>float</highlight></codeline>
<codeline lineno="599"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>maximum<sp/>element<sp/>diameter<sp/>(this<sp/>should<sp/>go<sp/>way)</highlight></codeline>
<codeline lineno="600"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>name<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="601"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>A<sp/>name<sp/>for<sp/>the<sp/>domain</highlight></codeline>
<codeline lineno="602"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>units<sp/>:<sp/>str</highlight></codeline>
<codeline lineno="603"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>units<sp/>of<sp/>length</highlight></codeline>
<codeline lineno="604"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1GMSH__3D__Domain_1a9068deb959f561c3ed054af4eaf65895" kindref="member">__init__</ref>(self,<sp/>geofile,<sp/>he,</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=&quot;GMSH_Domain&quot;,</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>units=&quot;m&quot;,</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length_scale=1.0,</highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>permute_dims=[0,1,2]):</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D_base.__init__(self,<sp/>2,<sp/>name,<sp/>units)</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a1667592289db007f8dc6062d6b343b6f" kindref="member">geofile</ref>=geofile+</highlight><highlight class="stringliteral">&quot;.geo&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref>=geofile</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1GMSH__3D__Domain_1ab46c8323acd1a873318804d4cdceae39" kindref="member">he</ref><sp/>=<sp/>he</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1GMSH__3D__Domain_1afdd8342f8b215a30bfdaf5ce9b7ef4c8" kindref="member">length_scale</ref>=length_scale</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1GMSH__3D__Domain_1ad0c025e658564ddce694b0f2c2627754" kindref="member">permute_dims</ref>=permute_dims</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617" refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain" kindref="compound">PlanarStraightLineGraphDomain</ref>(<ref refid="classproteus_1_1Domain_1_1D__base" kindref="compound">D_base</ref>):</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="619"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>2D<sp/>domains<sp/>described<sp/>by<sp/>planar<sp/>straight<sp/>line<sp/>graphs.</highlight></codeline>
<codeline lineno="620"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1af3d1e78d1872ca93f080a96d8b5581a1" kindref="member">__init__</ref>(self,<sp/>fileprefix=None,<sp/>vertices=None,<sp/>segments=None,<sp/>facets=None,<sp/>holes=None,<sp/>regions=None,<sp/>vertexFlags=None,</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segmentFlags=None,<sp/>regionFlags=None,<sp/>regionConstraints=None,<sp/>bc=None,<sp/>name=&quot;DefaultPSLGDomain&quot;,<sp/>units=&quot;m&quot;):</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="625"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Construct<sp/>the<sp/>PSLG<sp/>from<sp/>lists<sp/>of<sp/>vertices,<sp/>segments,<sp/>etc.<sp/>If<sp/>no<sp/>vertex<sp/>or<sp/>segment<sp/>flags<sp/>are<sp/>given,<sp/>then<sp/>they<sp/>are<sp/>assigned<sp/>as<sp/>zero.</highlight></codeline>
<codeline lineno="626"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D_base.__init__(self,<sp/>2,<sp/>name,<sp/>units)</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>fileprefix:</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a811f687c53514bdff48b602cb0d073ee" kindref="member">readPoly</ref>(fileprefix)</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref><sp/>=<sp/>vertices<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref><sp/>=<sp/>segments<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af816564044e931beaa0e2c8d3f3e158e" kindref="member">facets</ref><sp/>=<sp/>facets<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref><sp/>=<sp/>holes<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref><sp/>=<sp/>regions<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref><sp/>=<sp/>vertexFlags<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref><sp/>=<sp/>segmentFlags<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref><sp/>=<sp/>regionFlags<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a136861e92ce83aa3082d0b5f05fc255c" kindref="member">regionConstraints</ref><sp/>=<sp/>regionConstraints<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1af838cd573a187f548062f83ab22bcedb" kindref="member">update</ref>()</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1af838cd573a187f548062f83ab22bcedb" kindref="member">update</ref>(self):</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a136861e92ce83aa3082d0b5f05fc255c" kindref="member">regionConstraints</ref>:</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>)</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>:</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aaa0db2be3fce1b73170806c34f63699c" kindref="member">getBoundingBox</ref>()</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref>:</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a44573f671fe4100f698bc7aa8d76b574" kindref="member">getSegmentPartition</ref>()</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>:</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1ae456a14e7dd89bfd336ac19fdee30672" kindref="member">sMin</ref><sp/>=<sp/>0</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a1375d806ce015c213f0af19089def18f" kindref="member">sMax</ref><sp/>=<sp/>len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>)<sp/>-<sp/>1</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref><sp/>=<sp/>[i<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a1375d806ce015c213f0af19089def18f" kindref="member">sMax</ref><sp/>+<sp/>1)]</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a44573f671fe4100f698bc7aa8d76b574" kindref="member">getSegmentPartition</ref>(self):</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1ae456a14e7dd89bfd336ac19fdee30672" kindref="member">sMin</ref>=self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a1375d806ce015c213f0af19089def18f" kindref="member">sMax</ref>=self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref>[0]</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref>:</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s<sp/>&gt;<sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a1375d806ce015c213f0af19089def18f" kindref="member">sMax</ref>:</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a1375d806ce015c213f0af19089def18f" kindref="member">sMax</ref>=s</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s<sp/>&lt;<sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1ae456a14e7dd89bfd336ac19fdee30672" kindref="member">sMin</ref>:</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1ae456a14e7dd89bfd336ac19fdee30672" kindref="member">sMin</ref>=s</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a811f687c53514bdff48b602cb0d073ee" kindref="member">readPoly</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="666"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Read<sp/>in<sp/>the<sp/>PSLG<sp/>using<sp/>the<sp/>poly<sp/>format.</highlight></codeline>
<codeline lineno="667"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref><sp/>=<sp/>fileprefix</highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a1248c7a4944239779d99d71e5eae7162" kindref="member">name</ref>=fileprefix</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(fileprefix+</highlight><highlight class="stringliteral">&quot;.poly&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstLine=f.readline().split()</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(firstLine)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>firstLine[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nVertices<sp/>=<sp/>int(firstLine[0])</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a2bf4859c5bd7e3d9fe528ca4968d9df3" kindref="member">dim</ref><sp/>=<sp/>int(firstLine[1])</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a2bf4859c5bd7e3d9fe528ca4968d9df3" kindref="member">dim</ref><sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nVertexAttributes<sp/>=<sp/>int(firstLine[2])</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1ada44664024d904e83995be12fb6b915a" kindref="member">vertexAttributes</ref><sp/>=<sp/>[[]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nVertexAttributes)]</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasVertexFlag<sp/>=<sp/>int(firstLine[3])</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>=[]</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a453a01ee3d1f0d5a836495308dc709ad" kindref="member">base</ref>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasVertexFlag:</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref>=[]</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nVertices):</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(line)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>line[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a453a01ee3d1f0d5a836495308dc709ad" kindref="member">base</ref>:</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a453a01ee3d1f0d5a836495308dc709ad" kindref="member">base</ref><sp/>=<sp/>int(line[0])</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([float(line[1]),float(line[2])])</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nVertexAttributes):</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1ada44664024d904e83995be12fb6b915a" kindref="member">vertexAttributes</ref>[j].<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(float(line[3+j]))</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasVertexFlag:</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(line[3+nVertexAttributes])</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segmentLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(segmentLine)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>segmentLine[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segmentLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSegments<sp/>=<sp/>int(segmentLine[0])</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSegmentFlag<sp/>=<sp/>bool(int(segmentLine[1]))</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>=[]</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasSegmentFlag:</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref>=[]</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nSegments):</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(line)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>line[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([int(line[1])-self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a453a01ee3d1f0d5a836495308dc709ad" kindref="member">base</ref>,int(line[2])-self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a453a01ee3d1f0d5a836495308dc709ad" kindref="member">base</ref>])</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasSegmentFlag:</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(int(line[3]))</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>holeLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(holeLine)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>holeLine[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>holeLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nHoles<sp/>=<sp/>int(holeLine[0])</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref>=[]</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nHoles):</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/><sp/>f.readline().split()</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(line)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>line[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([float(line[0]),float(line[1])])</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regionLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(regionLine)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>regionLine[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regionLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRegions<sp/>=<sp/>int(regionLine[0])</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref>=[]</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>=[]</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1af8dffd0107123778c07544a34cd8e441" kindref="member">areaConstraints</ref>=[]</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nRegions):</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/><sp/>f.readline().split()</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(line)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>line[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([float(line[1]),float(line[2])])</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(line)<sp/>&gt;<sp/>3:</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(int(line[3]))</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(line)<sp/>&gt;<sp/>4:</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line[4][0]<sp/>!=<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1af8dffd0107123778c07544a34cd8e441" kindref="member">areaConstraints</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(float(line[4]))</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aaa0db2be3fce1b73170806c34f63699c" kindref="member">getBoundingBox</ref>()</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref><sp/>:</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a44573f671fe4100f698bc7aa8d76b574" kindref="member">getSegmentPartition</ref>()</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a90d80eb90d90121a9f3249e17adc10e2" kindref="member">writePoly</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="745"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write<sp/>the<sp/>PSLG<sp/>using<sp/>the<sp/>poly<sp/>format.</highlight></codeline>
<codeline lineno="746"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight><highlight class="comment">#<sp/>if<sp/>not<sp/>self.polyfile:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref><sp/>=<sp/>fileprefix</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf<sp/>=<sp/>open(fileprefix+</highlight><highlight class="stringliteral">&apos;.poly&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#write<sp/>first<sp/>line<sp/>of<sp/>poly<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref><sp/>:</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasVertexFlags=1</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasVertexFlags=0</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref><sp/>:</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSegmentFlags=1</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSegmentFlags=0</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>(len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>),2,0,hasVertexFlags))</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#write<sp/>the<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vN,v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>):</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>%21.16e<sp/>%21.16e<sp/>&apos;</highlight><highlight class="normal"><sp/>%<sp/>(vN+1,v[0],v[1]))</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#import<sp/>pdb;<sp/>pdb.set_trace()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref><sp/>:</highlight><highlight class="comment">#write<sp/>vertex<sp/>flag<sp/>if<sp/>we<sp/>have<sp/>vertexFlags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref>[vN],))</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#write<sp/>the<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>%d<sp/>\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>),hasSegmentFlags))</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sN,s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>):</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>%d<sp/>%d<sp/>&apos;</highlight><highlight class="normal"><sp/>%<sp/>(sN+1,s[0]+1,s[1]+1))</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref><sp/>:</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref>[sN],))</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref><sp/>:</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref>),))</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>hN,h<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref>):</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>%21.16e<sp/>%21.16e<sp/>\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(hN+1,</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[0],</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[1]))</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(0,))</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref><sp/>:</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref>),))</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rN,r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref>):</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>%21.16e<sp/>%21.16e<sp/>&apos;</highlight><highlight class="normal"><sp/>%<sp/>(rN+1,</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[0],</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[1]))</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a136861e92ce83aa3082d0b5f05fc255c" kindref="member">regionConstraints</ref>:</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>%21.16e\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>[rN],self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a136861e92ce83aa3082d0b5f05fc255c" kindref="member">regionConstraints</ref>[rN]))</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>:</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>[rN]))</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(0,))</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.close()</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jf_8h_1a665602667543592b4547008b72a9631b" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>already<sp/>exists,<sp/>not<sp/>writing<sp/>polyfile:<sp/>&quot;</highlight><highlight class="normal"><sp/>+repr(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref>))</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a9f5a1a9d48c1a6064c0b834c6b71be42" kindref="member">writeAsymptote</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="803"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write<sp/>a<sp/>representation<sp/>of<sp/>the<sp/>PSLG<sp/>in<sp/>the<sp/>Asymptote<sp/>vector<sp/>graphics<sp/>language</highlight></codeline>
<codeline lineno="804"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>unitsize=old_div(4.0,self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[0])</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(fileprefix+</highlight><highlight class="stringliteral">&quot;.asy&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileString=</highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="808"><highlight class="stringliteral">unitsize(4.0<sp/>inches<sp/>/<sp/>%(Lx)f);</highlight></codeline>
<codeline lineno="809"><highlight class="stringliteral">size(11<sp/>inches);</highlight></codeline>
<codeline lineno="810"><highlight class="stringliteral">real<sp/>Lx=%(Lx)f;</highlight></codeline>
<codeline lineno="811"><highlight class="stringliteral">real<sp/>Ly=%(Ly)f;</highlight></codeline>
<codeline lineno="812"><highlight class="stringliteral">real<sp/>offset=0.0125Lx;</highlight></codeline>
<codeline lineno="813"><highlight class="stringliteral">real<sp/>x=%(x)f;</highlight></codeline>
<codeline lineno="814"><highlight class="stringliteral">real<sp/>y=%(y)f;</highlight></codeline>
<codeline lineno="815"><highlight class="stringliteral">string<sp/>strx=&quot;$%(Lx)2.2f\mbox{%(units)s}$&quot;;</highlight></codeline>
<codeline lineno="816"><highlight class="stringliteral">string<sp/>stry=&quot;$%(Ly)2.2f\mbox{%(units)s}$&quot;;</highlight></codeline>
<codeline lineno="817"><highlight class="stringliteral">draw(strx,(x,y-offset)--(x+Lx,y-offset),S,black,Bars,Arrows,PenMargins);</highlight></codeline>
<codeline lineno="818"><highlight class="stringliteral">draw(stry,(x-offset,y)--(x-offset,y+Ly),W,black,Bars,Arrows,PenMargins);</highlight></codeline>
<codeline lineno="819"><highlight class="stringliteral">import<sp/>graph;</highlight></codeline>
<codeline lineno="820"><highlight class="stringliteral">import<sp/>palette;</highlight></codeline>
<codeline lineno="821"><highlight class="stringliteral">pen[]<sp/>allPens=Wheel();</highlight></codeline>
<codeline lineno="822"><highlight class="stringliteral">pen[]<sp/>myPens<sp/>=<sp/>new<sp/>pen[%(nSegmentFlags)d+1];</highlight></codeline>
<codeline lineno="823"><highlight class="stringliteral">for(int<sp/>i=0;i&lt;%(nSegmentFlags)d+1;++i)</highlight></codeline>
<codeline lineno="824"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="stringliteral"><sp/><sp/><sp/>int<sp/>iPen<sp/>=<sp/>round(i*allPens.length/(%(nSegmentFlags)d+1));</highlight></codeline>
<codeline lineno="826"><highlight class="stringliteral"><sp/><sp/><sp/>myPens[i]<sp/>=<sp/>allPens[iPen];</highlight></codeline>
<codeline lineno="827"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="828"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>%<sp/>{</highlight><highlight class="stringliteral">&apos;Lx&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[0],</highlight><highlight class="stringliteral">&apos;Ly&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[1],</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[0],</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[1],</highlight><highlight class="stringliteral">&apos;units&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a970de618ed8e34c7695e8e84692ed3e4" kindref="member">units</ref>,</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;nSegmentFlags&apos;</highlight><highlight class="normal">:(self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a1375d806ce015c213f0af19089def18f" kindref="member">sMax</ref>-self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1ae456a14e7dd89bfd336ac19fdee30672" kindref="member">sMin</ref>)}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#now<sp/>loop<sp/>over<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s,sFlag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>,self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref>):</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileString+=</highlight><highlight class="stringliteral">&quot;draw((%f,%f)--(%f,%f),myPens[%d]+linewidth(0.01));\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>tuple(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>[s[0]]+self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>[s[1]]+[sFlag-self.<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1ae456a14e7dd89bfd336ac19fdee30672" kindref="member">sMin</ref>])</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#for<sp/>vN,v<sp/>in<sp/>enumerate(self.vertices):</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>fileString+=&quot;label(\&quot;(%1.1f,%1.1f)\&quot;,(%f,%f),N);\n&quot;<sp/>%<sp/>(v[0],v[1],v[0],v[1])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(fileString)</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1a2988e12d81137c0dcee7d39a42db4d58" kindref="member">writePLY</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="839"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write<sp/>the<sp/>PLC<sp/>domain<sp/>in<sp/>the<sp/>Stanford<sp/>PLY<sp/>format.</highlight></codeline>
<codeline lineno="840"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight><highlight class="comment">#overwrite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf<sp/>=<sp/>open(fileprefix+</highlight><highlight class="stringliteral">&apos;.ply&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref><sp/>:</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasVertexFlags=1</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasVertexFlags=0</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref><sp/>:</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSegmentFlags=1</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSegmentFlags=0</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasSegmentFlags=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasVertexFlags=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;&quot;&quot;ply</highlight></codeline>
<codeline lineno="854"><highlight class="stringliteral">format<sp/>ascii<sp/>1.0</highlight></codeline>
<codeline lineno="855"><highlight class="stringliteral">comment<sp/>author:<sp/>Proteus</highlight></codeline>
<codeline lineno="856"><highlight class="stringliteral">comment<sp/>object:<sp/>%s</highlight></codeline>
<codeline lineno="857"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a1248c7a4944239779d99d71e5eae7162" kindref="member">name</ref>,))</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;&quot;&quot;element<sp/>vertex<sp/>%d</highlight></codeline>
<codeline lineno="859"><highlight class="stringliteral">property<sp/>float<sp/>x</highlight></codeline>
<codeline lineno="860"><highlight class="stringliteral">property<sp/>float<sp/>y</highlight></codeline>
<codeline lineno="861"><highlight class="stringliteral">property<sp/>float<sp/>z</highlight></codeline>
<codeline lineno="862"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>%<sp/>(len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>),))</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasVertexFlags:</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;property<sp/>int<sp/>flag\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;element<sp/>face<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>(len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>),))</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;property<sp/>list<sp/>uchar<sp/>int<sp/>vertex_index\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasSegmentFlags:</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;property<sp/>int<sp/>flag\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;end_header\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#write<sp/>the<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vN,v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>):</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%21.16e<sp/>%21.16e<sp/>%21.16e&apos;</highlight><highlight class="normal"><sp/>%<sp/>(v[0],v[1],0.0))</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasVertexFlags:</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;<sp/>%d\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref>[vN],))</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#write<sp/>the<sp/>segments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>sN,s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a6a793d6a37d218e71922b5105c30c4b9" kindref="member">segments</ref>):</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(repr(len(s)))</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vN<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>s:</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+repr(vN))</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasSegmentFlags:</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;<sp/>%d\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0debc3f0f9dd2f8570c04cd65c5bca2" kindref="member">segmentFlags</ref>[fN],))</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.close()</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jf_8h_1a665602667543592b4547008b72a9631b" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>already<sp/>exists,<sp/>not<sp/>writing<sp/>polyfile:<sp/>&quot;</highlight><highlight class="normal"><sp/>+repr(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref>))</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain_1aa982f46a061e07fd5686d45a77de5cc2" kindref="member">writeXdmf</ref>(self,ar):</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="891"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Store<sp/>the<sp/>PSLG<sp/>domain<sp/>in<sp/>an<sp/>XDMF<sp/>file.<sp/>For<sp/>now<sp/>we<sp/>store<sp/>the<sp/>information<sp/>on<sp/>holes<sp/>in<sp/>and<sp/>Information<sp/>element.</highlight></codeline>
<codeline lineno="892"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>UserWarning(</highlight><highlight class="stringliteral">&quot;Xdmf<sp/>output<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895" refid="classproteus_1_1Domain_1_1InterpolatedBathymetryDomain" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1InterpolatedBathymetryDomain" kindref="compound">InterpolatedBathymetryDomain</ref>(<ref refid="classproteus_1_1Domain_1_1PlanarStraightLineGraphDomain" kindref="compound">PlanarStraightLineGraphDomain</ref>):</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="897"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>2D<sp/>domains<sp/>with<sp/>an<sp/>attached<sp/>bathymetry<sp/>data<sp/>set.</highlight></codeline>
<codeline lineno="898"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Meshes<sp/>are<sp/>generated<sp/>by<sp/>locally<sp/>refining<sp/>the<sp/>PSLG<sp/>until<sp/>the<sp/>interpolation<sp/>error<sp/>for<sp/>a<sp/>bathymetry<sp/>point<sp/>cloud<sp/>meets<sp/>a<sp/>prescribed<sp/>tolerance.</highlight></codeline>
<codeline lineno="899"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="900"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>Intial<sp/>support<sp/>measures<sp/>interpolation<sp/>error<sp/>in<sp/>the<sp/>:math:`L_{\infty}`<sp/>norm.</highlight></codeline>
<codeline lineno="901"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1InterpolatedBathymetryDomain_1ad2615457ad59dec874795d3bcc8b7245" kindref="member">__init__</ref>(self,fileprefix=None,vertices=None,segments=None,</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>holes=None,regions=None,vertexFlags=None,segmentFlags=None,regionFlags=None,</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=&quot;DefaultInterpolatedBathymetry&quot;,units=&quot;m&quot;,</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bathy=None,</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bathyGridDim=None):</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlanarStraightLineGraphDomain.__init__(self,fileprefix=fileprefix,vertices=vertices,segments=segments,</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>holes=holes,regions=regions,vertexFlags=vertexFlags,segmentFlags=segmentFlags,regionFlags=regionFlags,name=name,units=units)</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1InterpolatedBathymetryDomain_1a1f9ecc299b5dfd1455ffa5e8d760bd68" kindref="member">bathy</ref>=bathy</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1InterpolatedBathymetryDomain_1ab14082a6b7e679f5b7cf9af432f4de22" kindref="member">bathyGridDim</ref>=bathyGridDim</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight></codeline>
<codeline lineno="913" refid="classproteus_1_1Domain_1_1TriangulatedSurfaceDomain" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1TriangulatedSurfaceDomain" kindref="compound">TriangulatedSurfaceDomain</ref>(<ref refid="classproteus_1_1Domain_1_1D__base" kindref="compound">D_base</ref>):</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="915"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>3D<sp/>domains<sp/>described<sp/>by<sp/>closed<sp/>surfaces<sp/>made<sp/>up<sp/>of<sp/>triangular<sp/>facets.</highlight></codeline>
<codeline lineno="916"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1TriangulatedSurfaceDomain_1a728915cd2a805775ffb373903531a413" kindref="member">__init__</ref>(self,vertices,triangles,</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name=&quot;DefaultTriangulatedSurfaceDomain&quot;,units=&quot;m&quot;):</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D_base.__init__(self,3,name,units)</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1TriangulatedSurfaceDomain_1a8ce76dba85824730a74c9636fa34fa63" kindref="member">nodes</ref>=nodes</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1TriangulatedSurfaceDomain_1a2477dd7f76a7870482bce0435ae3bfcb" kindref="member">triangles</ref>=triangles</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1TriangulatedSurfaceDomain_1aecb25dbc30d282967ce0ad066daafa65" kindref="member">readSTL</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="924"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Read<sp/>the<sp/>triangulated<sp/>surface<sp/>from<sp/>a<sp/>file<sp/>in<sp/>stereo<sp/>lithography<sp/>format.</highlight></codeline>
<codeline lineno="925"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>UserWarning(</highlight><highlight class="stringliteral">&quot;STL<sp/>input<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1TriangulatedSurfaceDomain_1a6cace5d582f2c94d3f2e02611bc71ea1" kindref="member">writePoly</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="929"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write<sp/>the<sp/>triangulated<sp/>surface<sp/>in<sp/>the<sp/>poly<sp/>format</highlight></codeline>
<codeline lineno="930"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>UserWarning(</highlight><highlight class="stringliteral">&quot;Poly<sp/>output<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1TriangulatedSurfaceDomain_1a64ee0c6b026c183fc1c5964ec6aa6e1c" kindref="member">writeAsymptote</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="934"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write<sp/>the<sp/>triangulated<sp/>surface<sp/>in<sp/>the<sp/>Asymptote<sp/>language.</highlight></codeline>
<codeline lineno="935"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>UserWarning(</highlight><highlight class="stringliteral">&quot;Xdmf<sp/>output<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight></codeline>
<codeline lineno="939" refid="classproteus_1_1Domain_1_1Mesh2DMDomain" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1Mesh2DMDomain" kindref="compound">Mesh2DMDomain</ref>(<ref refid="classproteus_1_1Domain_1_1D__base" kindref="compound">D_base</ref>):</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="941"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>2D<sp/>domains<sp/>from<sp/>ADH<sp/>mesh<sp/>files</highlight></codeline>
<codeline lineno="942"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1Mesh2DMDomain_1a174402cfdccadc722ca9b841503bb24f" kindref="member">__init__</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D_base.__init__(self,2,name=fileprefix)</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1Mesh2DMDomain_1a63eee0be1ba83beaea14161adf8784fa" kindref="member">meshfile</ref>=fileprefix</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight></codeline>
<codeline lineno="948" refid="classproteus_1_1Domain_1_1Mesh3DMDomain" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1Mesh3DMDomain" kindref="compound">Mesh3DMDomain</ref>(<ref refid="classproteus_1_1Domain_1_1D__base" kindref="compound">D_base</ref>):</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="950"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>3D<sp/>domains<sp/>from<sp/>ADH<sp/>mesh<sp/>files</highlight></codeline>
<codeline lineno="951"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1Mesh3DMDomain_1a9949c1ab3d6c5b02211df5d91b1ec6ce" kindref="member">__init__</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D_base.__init__(self,3,name=fileprefix)</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1Mesh3DMDomain_1a60f5ec9e08293cf1da00db76a765370c" kindref="member">meshfile</ref>=fileprefix</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="957" refid="classproteus_1_1Domain_1_1MeshHexDomain" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1MeshHexDomain" kindref="compound">MeshHexDomain</ref>(<ref refid="classproteus_1_1Domain_1_1D__base" kindref="compound">D_base</ref>):</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="959"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>3D<sp/>domains<sp/>from<sp/>Hex<sp/>mesh<sp/>files</highlight></codeline>
<codeline lineno="960"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1MeshHexDomain_1a811e84b2832d066a48372ed9280b262c" kindref="member">__init__</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D_base.__init__(self,3,name=fileprefix)</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1MeshHexDomain_1a84afadc02527df42e833c62d66eaa401" kindref="member">meshfile</ref>=fileprefix</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight></codeline>
<codeline lineno="966" refid="classproteus_1_1Domain_1_1MeshTetgenDomain" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1MeshTetgenDomain" kindref="compound">MeshTetgenDomain</ref>(<ref refid="classproteus_1_1Domain_1_1D__base" kindref="compound">D_base</ref>):</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="968"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>3D<sp/>domains<sp/>from<sp/>tetgen<sp/>mesh<sp/>files</highlight></codeline>
<codeline lineno="969"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1MeshTetgenDomain_1a1f71a4f2840722b745b421aca2c87d17" kindref="member">__init__</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D_base.__init__(self,3,name=fileprefix)</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1MeshTetgenDomain_1a069cb8a8ae7e4f15e6cc7173f4942b41" kindref="member">meshfile</ref>=fileprefix</highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight></codeline>
<codeline lineno="974" refid="classproteus_1_1Domain_1_1PUMIDomain" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PUMIDomain" kindref="compound">PUMIDomain</ref>(<ref refid="classproteus_1_1Domain_1_1D__base" kindref="compound">D_base</ref>):</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="976"><highlight class="stringliteral"><sp/><sp/>3d<sp/>domains<sp/>from<sp/>PUMI<sp/>mesh<sp/>files</highlight></codeline>
<codeline lineno="977"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="978"><highlight class="stringliteral"><sp/><sp/>faceList<sp/>--<sp/>defines<sp/>face<sp/>classification<sp/>in<sp/>simmetrix<sp/><sp/>mesh</highlight></codeline>
<codeline lineno="979"><highlight class="stringliteral"><sp/><sp/>PUMIMesh<sp/>--<sp/>the<sp/>MeshAdapt<sp/>object</highlight></codeline>
<codeline lineno="980"><highlight class="stringliteral"><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PUMIDomain_1a63a62f9b8900d28e9fa612eb8d0f60fd" kindref="member">__init__</ref>(self,<sp/>name=&quot;PUMIDomain&quot;,<sp/>dim=3,manager=MeshAdapt.AdaptManager()):</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>D_base.__init__(self,dim,name)</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af4dc82e0787212acf9d44c6cb880d17a" kindref="member">faceList</ref>=[]</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a333a99c3734cd7f3592ad7804d444217" kindref="member">regList</ref>=[]</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PUMIDomain_1aa5694f809e29da3fc0d59f386fff2485" kindref="member">AdaptManager</ref>=manager</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PUMIDomain_1a56f61b98d900a4a52858badd60d0f41d" kindref="member">checkpointInfo</ref>=</highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PUMIDomain_1acf5450b950435f9dc30eae2ee04834af" kindref="member">checkpointFrequency</ref>=0<sp/></highlight><highlight class="comment">#default<sp/>never<sp/>checkpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#it<sp/>would<sp/>be<sp/>useful<sp/>to<sp/>define<sp/>a<sp/>dictionary<sp/>mapping<sp/>strings<sp/>to<sp/>faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#boundariesTags={&apos;bottom&apos;:3,&apos;top&apos;:5,&apos;front&apos;:1,&apos;back&apos;:6,&apos;left&apos;:2,&apos;right&apos;:4}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PUMIDomain_1a92c6e5a7b8c511868f571a46c84994fa" kindref="member">writePoly</ref>(self,name=None):</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceproteus_1_1tests_1_1CLSVOF_1_1disc__ICs_1_1clsvof__p_1acb916366ed50abb893e36903fd6359e4" kindref="member">logEvent</ref>(</highlight><highlight class="stringliteral">&quot;nothing<sp/>actually<sp/>dont<sp/>as<sp/>this<sp/>domain<sp/>type<sp/>doesn&apos;t<sp/>support<sp/>writePoly!&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995" refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain" kindref="compound">PiecewiseLinearComplexDomain</ref>(<ref refid="classproteus_1_1Domain_1_1D__base" kindref="compound">D_base</ref>):</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="997"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>3D<sp/>domains<sp/>desribed<sp/>by<sp/>closed<sp/>surfaces<sp/>made<sp/>up<sp/>of<sp/>general<sp/>polygonal<sp/>facets.</highlight></codeline>
<codeline lineno="998"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1ac34499271e52f1651a8668b347377f59" kindref="member">__init__</ref>(self,<sp/>fileprefix=None,<sp/>vertices=None,<sp/>facets=None,</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facetHoles=None,<sp/>holes=None,<sp/>regions=None,<sp/>vertexFlags=None,<sp/>facetFlags=None,</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regionFlags=None,<sp/>regionConstraints=None,<sp/>bc=None,<sp/>name=&quot;PLCDomain&quot;,<sp/>units=&quot;m&quot;):</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1003"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Read<sp/><sp/>the<sp/>PLC<sp/>domain<sp/>from<sp/>lists.<sp/>If<sp/>no<sp/>flags<sp/>are<sp/>given,<sp/>then<sp/>default<sp/>flags<sp/>of<sp/>0<sp/>are<sp/>assigned.</highlight></codeline>
<codeline lineno="1004"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>D_base.__init__(self,<sp/>3,<sp/>name,<sp/>units)</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>fileprefix:</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a06f65895bd2e2eaff393fb38ff11960d" kindref="member">readPoly</ref>(fileprefix)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1abf2d0609fe1fbbb0eebac53bbd65c938" kindref="member">regionLegend</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1ab3d5d0ca8dc675a0f668bfe22a8c8c68" kindref="member">regionConstraints</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d4620d7c065e7b5bde7f0259f650099" kindref="member">boundaryFlags</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref><sp/>=<sp/>vertices<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af816564044e931beaa0e2c8d3f3e158e" kindref="member">facets</ref><sp/>=<sp/>facets<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d7c76975572305b1671bca29cb3ee74" kindref="member">facetHoles</ref><sp/>=<sp/>facetHoles<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref><sp/>=<sp/>holes<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref><sp/>=<sp/>regions<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref><sp/>=<sp/>vertexFlags<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a25a228a11d132cb908ef5e78b4ceeb52" kindref="member">facetFlags</ref><sp/>=<sp/>facetFlags<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref><sp/>=<sp/>regionFlags<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1ab3d5d0ca8dc675a0f668bfe22a8c8c68" kindref="member">regionConstraints</ref><sp/>=<sp/>regionConstraints<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>[]</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1abf2d0609fe1fbbb0eebac53bbd65c938" kindref="member">regionLegend</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d4620d7c065e7b5bde7f0259f650099" kindref="member">boundaryFlags</ref><sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1abfd201851c095f6d425dbd8296183489" kindref="member">update</ref>()</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1abfd201851c095f6d425dbd8296183489" kindref="member">update</ref>(self):</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1028"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Function<sp/>to<sp/>call<sp/>when<sp/>new<sp/>vertices<sp/>are<sp/>added<sp/>to<sp/>the<sp/>domain</highlight></codeline>
<codeline lineno="1029"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>:</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aaa0db2be3fce1b73170806c34f63699c" kindref="member">getBoundingBox</ref>()</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a06f65895bd2e2eaff393fb38ff11960d" kindref="member">readPoly</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1035"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Read<sp/>in<sp/>the<sp/>PLC<sp/>domain<sp/>from<sp/>a<sp/>file<sp/>in<sp/>poly<sp/>format.</highlight></codeline>
<codeline lineno="1036"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref><sp/>=<sp/>fileprefix</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a1248c7a4944239779d99d71e5eae7162" kindref="member">name</ref><sp/>=<sp/>fileprefix</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref>+</highlight><highlight class="stringliteral">&quot;.poly&quot;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(firstLine)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>firstLine[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nVertices<sp/>=<sp/>int(firstLine[0])</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1aed77f104b813c11ec19ba7c16eb1c527" kindref="member">dim</ref><sp/>=<sp/>int(firstLine[1])</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1aed77f104b813c11ec19ba7c16eb1c527" kindref="member">dim</ref><sp/>==<sp/>3)</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nVertexAttributes<sp/>=<sp/>int(firstLine[2])</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1afad5bc42ae6e0e7ec96711d4706e0b50" kindref="member">vertexAttributes</ref><sp/>=<sp/>[[]<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nVertexAttributes)]</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasVertexFlag<sp/>=<sp/>bool(int(firstLine[3]))</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1ad86d8c798057b42e4d7fa2d5d33c4e05" kindref="member">base</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasVertexFlag:</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nVertices):</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(line)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>line[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1ad86d8c798057b42e4d7fa2d5d33c4e05" kindref="member">base</ref>:</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1ad86d8c798057b42e4d7fa2d5d33c4e05" kindref="member">base</ref><sp/>=<sp/>int(line[0])</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([float(line[1]),float(line[2]),float(line[3])])</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nVertexAttributes):</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1afad5bc42ae6e0e7ec96711d4706e0b50" kindref="member">vertexAttributes</ref>[j].<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(float(line[4+j]))</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasVertexFlag:</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(int(line[4+nVertexAttributes]))</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facetLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(facetLine)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>facetLine[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facetLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFacets<sp/>=<sp/>int(facetLine[0])</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasFacetFlag<sp/>=<sp/>bool(int(facetLine[1]))</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af816564044e931beaa0e2c8d3f3e158e" kindref="member">facets</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d7c76975572305b1671bca29cb3ee74" kindref="member">facetHoles</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a25a228a11d132cb908ef5e78b4ceeb52" kindref="member">facetFlags</ref><sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasFacetFlag:</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a25a228a11d132cb908ef5e78b4ceeb52" kindref="member">facetFlags</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nFacets):</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(line)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>line[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af816564044e931beaa0e2c8d3f3e158e" kindref="member">facets</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([])</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d7c76975572305b1671bca29cb3ee74" kindref="member">facetHoles</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([])</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nPolygons<sp/>=<sp/>int(line[0])</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nHoles<sp/>=<sp/>int(line[1])</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasFacetFlag:</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a25a228a11d132cb908ef5e78b4ceeb52" kindref="member">facetFlags</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(int(line[2]))</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nPolygons):</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(line)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>line[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSegments<sp/>=<sp/>int(line[0])</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af816564044e931beaa0e2c8d3f3e158e" kindref="member">facets</ref>[-1].<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([int(line[1+k])-self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1ad86d8c798057b42e4d7fa2d5d33c4e05" kindref="member">base</ref><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>k<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nSegments)])</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>j<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nHoles):</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(line)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>line[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d7c76975572305b1671bca29cb3ee74" kindref="member">facetHoles</ref>[-1].<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([float(line[0]),</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(line[1]),</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float(line[2])])</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>holeLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(holeLine)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>holeLine[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>holeLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nHoles<sp/>=<sp/>int(holeLine[0])</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nHoles):</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/><sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(line)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>line[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([float(line[0]),float(line[1])])</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regionLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(regionLine)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>regionLine[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>regionLine<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nRegions<sp/>=<sp/>int(regionLine[0])</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1ae4a752b2e2b6ee314c2e6bcaef820af4" kindref="member">areaConstraints</ref><sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(nRegions):</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/><sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>len(line)<sp/>==<sp/>0<sp/></highlight><highlight class="keywordflow">or</highlight><highlight class="normal"><sp/>line[0][0]<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;#&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line<sp/>=<sp/>f.readline().split()</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>([float(line[1]),float(line[2]),float(line[3])])</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(line)<sp/>&gt;<sp/>4:</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(int(line[4]))</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(line)<sp/>&gt;<sp/>5:</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1ae4a752b2e2b6ee314c2e6bcaef820af4" kindref="member">areaConstraints</ref>.<ref refid="namespaceproteus_1_1FemTools_1a019de708f4345899e87a80cb8e6b0778" kindref="member">append</ref>(float(line[5]))</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aaa0db2be3fce1b73170806c34f63699c" kindref="member">getBoundingBox</ref>()</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1accb614d87bc4e5bd6670d12a34757a21" kindref="member">writePoly</ref>(self,<sp/>fileprefix):</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write<sp/>the<sp/>PLC<sp/>domain<sp/>in<sp/>the<sp/>poly<sp/>format.</highlight></codeline>
<codeline lineno="1130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight><highlight class="comment">#not<sp/>self.polyfile:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref><sp/>=<sp/>fileprefix</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf<sp/>=<sp/>open(fileprefix+</highlight><highlight class="stringliteral">&apos;.poly&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#write<sp/>first<sp/>line<sp/>of<sp/>poly<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>(len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>),<sp/>3,<sp/>0,<sp/>int(bool(self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref>))))</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#write<sp/>the<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vN,<sp/>v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>):</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>%21.16e<sp/>%21.16e<sp/>%21.16e<sp/>&apos;</highlight><highlight class="normal"><sp/>%<sp/>(vN+1,<sp/>v[0],<sp/>v[1],<sp/>v[2]))</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref><sp/>:</highlight><highlight class="comment">#write<sp/>vertex<sp/>flag<sp/>if<sp/>we<sp/>have<sp/>vertexFlags</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref>[vN]))</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#write<sp/>the<sp/>facets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>%d<sp/>\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1af816564044e931beaa0e2c8d3f3e158e" kindref="member">facets</ref>),<sp/>int(bool(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a25a228a11d132cb908ef5e78b4ceeb52" kindref="member">facetFlags</ref>))))</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>fN,<sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1af816564044e931beaa0e2c8d3f3e158e" kindref="member">facets</ref>):</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d7c76975572305b1671bca29cb3ee74" kindref="member">facetHoles</ref>:</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFacetHoles<sp/>=<sp/>len(self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d7c76975572305b1671bca29cb3ee74" kindref="member">facetHoles</ref>[fN])</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nFacetHoles<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a25a228a11d132cb908ef5e78b4ceeb52" kindref="member">facetFlags</ref>:</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>%d<sp/>%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(len(f),<sp/>nFacetHoles,<sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a25a228a11d132cb908ef5e78b4ceeb52" kindref="member">facetFlags</ref>[fN]))</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(len(f),<sp/>nFacetHoles))</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>segmentList<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(repr(len(segmentList))+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vN<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>segmentList:</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(repr(vN+1)+</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d7c76975572305b1671bca29cb3ee74" kindref="member">facetHoles</ref>:</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>hN,<sp/>h<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d7c76975572305b1671bca29cb3ee74" kindref="member">facetHoles</ref>[fN]):</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(repr(hN+1)+</highlight><highlight class="stringliteral">&apos;<sp/>%f<sp/>%f<sp/>%f\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(h[0],h[1],h[2]))</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref>:</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref>),))</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>hN,<sp/>h<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ac1ad991af3a9cf9dd1ff732e03b7da53" kindref="member">holes</ref>):</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>%21.16e<sp/>%21.16e<sp/>%21.16e<sp/>\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(hN+1,</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[0],</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[1],</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h[2]))</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(0,))</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref>:</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref>),))</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rN,r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref>):</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>%21.16e<sp/>%21.16e<sp/>%21.16e<sp/>&apos;</highlight><highlight class="normal"><sp/>%<sp/>(rN+1,</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[0],</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[1],</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r[2]))</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>:</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d<sp/>&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>[rN]))</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1ab3d5d0ca8dc675a0f668bfe22a8c8c68" kindref="member">regionConstraints</ref>:</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%21.16e&apos;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1ab3d5d0ca8dc675a0f668bfe22a8c8c68" kindref="member">regionConstraints</ref>[rN]))</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;\n&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%d\n&apos;</highlight><highlight class="normal"><sp/>%<sp/>(0,))</highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.close()</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jf_8h_1a665602667543592b4547008b72a9631b" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>already<sp/>exists,<sp/>not<sp/>writing<sp/>polyfile:<sp/>&quot;</highlight><highlight class="normal"><sp/>+repr(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref>))</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a6d35ed343c7ad3d3fb84949631765296" kindref="member">writePLY</ref>(self,<sp/>fileprefix):</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write<sp/>the<sp/>PLC<sp/>domain<sp/>in<sp/>the<sp/>Stanford<sp/>PLY<sp/>format.</highlight></codeline>
<codeline lineno="1192"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight><highlight class="comment">#overwrite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf<sp/>=<sp/>open(fileprefix+</highlight><highlight class="stringliteral">&apos;.ply&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasVertexFlags<sp/>=<sp/>int(bool(self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref>))</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasFacetFlags=int(bool(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a25a228a11d132cb908ef5e78b4ceeb52" kindref="member">facetFlags</ref>))</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasFacetFlags=</highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hasVertexFlags=</highlight><highlight class="keyword">False</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">#<sp/>?????</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;&quot;&quot;ply</highlight></codeline>
<codeline lineno="1200"><highlight class="stringliteral">format<sp/>ascii<sp/>1.0</highlight></codeline>
<codeline lineno="1201"><highlight class="stringliteral">comment<sp/>author:<sp/>Proteus</highlight></codeline>
<codeline lineno="1202"><highlight class="stringliteral">comment<sp/>object:<sp/>%s</highlight></codeline>
<codeline lineno="1203"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a1248c7a4944239779d99d71e5eae7162" kindref="member">name</ref>,))</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;&quot;&quot;element<sp/>vertex<sp/>%d</highlight></codeline>
<codeline lineno="1205"><highlight class="stringliteral">property<sp/>float<sp/>x</highlight></codeline>
<codeline lineno="1206"><highlight class="stringliteral">property<sp/>float<sp/>y</highlight></codeline>
<codeline lineno="1207"><highlight class="stringliteral">property<sp/>float<sp/>z</highlight></codeline>
<codeline lineno="1208"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>%<sp/>(len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>),))</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasVertexFlags:</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;property<sp/>int<sp/>flag\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSimpleFacets=0</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1af816564044e931beaa0e2c8d3f3e158e" kindref="member">facets</ref>:</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nSimpleFacets+=len(f)</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;element<sp/>face<sp/>%d<sp/>\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>(nSimpleFacets,))</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;property<sp/>list<sp/>uchar<sp/>int<sp/>vertex_index\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasFacetFlags:</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;property<sp/>int<sp/>flag\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;end_header\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#write<sp/>the<sp/>vertices</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vN,v<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>):</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&apos;%21.16e<sp/>%21.16e<sp/>%21.16e&apos;</highlight><highlight class="normal"><sp/>%<sp/>(v[0],v[1],v[2]))</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasVertexFlags:</highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;<sp/>%d\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa0635c5493495657fbea24b7e496a6de" kindref="member">vertexFlags</ref>[vN],))</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#write<sp/>the<sp/>facets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>fN,f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1af816564044e931beaa0e2c8d3f3e158e" kindref="member">facets</ref>):</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>segmentList<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(repr(len(segmentList)))</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vN<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>segmentList:</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+repr(vN))</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>hasFacetFlags:</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;<sp/>%d\n&quot;</highlight><highlight class="normal"><sp/>%<sp/>(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a25a228a11d132cb908ef5e78b4ceeb52" kindref="member">facetFlags</ref>[fN],))</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.write(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pf.close()</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jf_8h_1a665602667543592b4547008b72a9631b" kindref="member">print</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>already<sp/>exists,<sp/>not<sp/>writing<sp/>polyfile:<sp/>&quot;</highlight><highlight class="normal"><sp/>+repr(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a8d3c278de06c0b135f5dd559cc26ef5a" kindref="member">polyfile</ref>))</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1aca99c1eaf7807e09e0326967e5a22e4a" kindref="member">writeAsymptote</ref>(self,<sp/>fileprefix):</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="1242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Write<sp/>a<sp/>representation<sp/>of<sp/>the<sp/>domain<sp/>in<sp/>the<sp/>Asymptote<sp/>vector<sp/>graphics<sp/>language.</highlight></codeline>
<codeline lineno="1243"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f<sp/>=<sp/>open(fileprefix+</highlight><highlight class="stringliteral">&apos;.asy&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>:</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nM<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nM<sp/>=<sp/>len(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="comment">#currentprojection=perspective(-2,-2,1,up=Z,target=(%(xc)f,%(yc)f,%(zc)f),showtarget=true,autoadjust=true,center=false);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileString<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;import<sp/>three;</highlight></codeline>
<codeline lineno="1251"><highlight class="stringliteral">import<sp/>palette;</highlight></codeline>
<codeline lineno="1252"><highlight class="stringliteral">pen[]<sp/>allPens=Wheel();</highlight></codeline>
<codeline lineno="1253"><highlight class="stringliteral">pen[]<sp/>materialPens<sp/>=<sp/>new<sp/>pen[%(nM)i];</highlight></codeline>
<codeline lineno="1254"><highlight class="stringliteral">for(int<sp/>i=0;i&lt;<sp/>%(nM)i;++i)</highlight></codeline>
<codeline lineno="1255"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1256"><highlight class="stringliteral"><sp/><sp/><sp/>int<sp/>iPen<sp/>=<sp/>round(i*allPens.length/%(nM)i);</highlight></codeline>
<codeline lineno="1257"><highlight class="stringliteral"><sp/><sp/><sp/>materialPens[i]<sp/>=<sp/>allPens[iPen];</highlight></codeline>
<codeline lineno="1258"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1259"><highlight class="stringliteral">currentprojection=FrontView;</highlight></codeline>
<codeline lineno="1260"><highlight class="stringliteral">unitsize(4.0<sp/>inches/%(Lx)f);</highlight></codeline>
<codeline lineno="1261"><highlight class="stringliteral">size(5<sp/>inches);</highlight></codeline>
<codeline lineno="1262"><highlight class="stringliteral">real<sp/>Lx=%(Lx)f;</highlight></codeline>
<codeline lineno="1263"><highlight class="stringliteral">real<sp/>Ly=%(Ly)f;</highlight></codeline>
<codeline lineno="1264"><highlight class="stringliteral">real<sp/>Lz=%(Lz)f;</highlight></codeline>
<codeline lineno="1265"><highlight class="stringliteral">real<sp/>offset=.0125Lx;</highlight></codeline>
<codeline lineno="1266"><highlight class="stringliteral">real<sp/>x=%(x)f;</highlight></codeline>
<codeline lineno="1267"><highlight class="stringliteral">real<sp/>y=%(y)f;</highlight></codeline>
<codeline lineno="1268"><highlight class="stringliteral">real<sp/>z=%(z)f;</highlight></codeline>
<codeline lineno="1269"><highlight class="stringliteral">triple<sp/>p0=(x,y,z);</highlight></codeline>
<codeline lineno="1270"><highlight class="stringliteral">triple<sp/>p1=(x,y+Ly,z);</highlight></codeline>
<codeline lineno="1271"><highlight class="stringliteral">triple<sp/>p2=(x+Lx,y+Ly,z);</highlight></codeline>
<codeline lineno="1272"><highlight class="stringliteral">triple<sp/>p3=(x+Lx,y,z);</highlight></codeline>
<codeline lineno="1273"><highlight class="stringliteral">triple<sp/>p4=(x,y,z+Lz);</highlight></codeline>
<codeline lineno="1274"><highlight class="stringliteral">triple<sp/>p5=(x,y+Ly,z+Lz);</highlight></codeline>
<codeline lineno="1275"><highlight class="stringliteral">triple<sp/>p6=(x+Lx,y+Ly,z+Lz);</highlight></codeline>
<codeline lineno="1276"><highlight class="stringliteral">triple<sp/>p7=(x+Lx,y,z+Lz);</highlight></codeline>
<codeline lineno="1277"><highlight class="stringliteral">string<sp/>strx=&quot;$%(Lx)2.2f\mbox{%(units)s}$&quot;;</highlight></codeline>
<codeline lineno="1278"><highlight class="stringliteral">string<sp/>stry=&quot;$%(Ly)2.2f\mbox{%(units)s}$&quot;;</highlight></codeline>
<codeline lineno="1279"><highlight class="stringliteral">string<sp/>strz=&quot;$%(Lz)2.2f\mbox{%(units)s}$&quot;;</highlight></codeline>
<codeline lineno="1280"><highlight class="stringliteral">draw(strx,(x,y-offset,z-offset)--(x+Lx,y-offset,z-offset),-(Y+Z),black,Bars3(Z),Arrows3);</highlight></codeline>
<codeline lineno="1281"><highlight class="stringliteral">draw(stry,(x-offset,y,z-offset)--(x-offset,y+Ly,z-offset),-(X+Z),black,Bars3(Z),Arrows3);</highlight></codeline>
<codeline lineno="1282"><highlight class="stringliteral">draw(strz,(x-offset,y-offset,z)--(x-offset,y-offset,z+Lz),-(X+Y),black,Bars3(X),Arrows3);</highlight></codeline>
<codeline lineno="1283"><highlight class="stringliteral">pen[]<sp/>allPens=Wheel();</highlight></codeline>
<codeline lineno="1284"><highlight class="stringliteral">pen[]<sp/>myPens<sp/>=<sp/>new<sp/>pen[%(nFlags)i];</highlight></codeline>
<codeline lineno="1285"><highlight class="stringliteral">for(int<sp/>i=0;i&lt;<sp/>%(nFlags)i;++i)</highlight></codeline>
<codeline lineno="1286"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="stringliteral"><sp/><sp/><sp/>int<sp/>iPen<sp/>=<sp/>round(i*allPens.length/%(nFlags)i);</highlight></codeline>
<codeline lineno="1288"><highlight class="stringliteral"><sp/><sp/><sp/>myPens[i]<sp/>=<sp/>allPens[iPen];</highlight></codeline>
<codeline lineno="1289"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1290"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>%<sp/>{</highlight><highlight class="stringliteral">&apos;Lx&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[0],</highlight><highlight class="stringliteral">&apos;Ly&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[1],</highlight><highlight class="stringliteral">&apos;Lz&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[2],</highlight><highlight class="stringliteral">&apos;x&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[0],</highlight><highlight class="stringliteral">&apos;y&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[1],</highlight><highlight class="stringliteral">&apos;z&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[2],</highlight><highlight class="stringliteral">&apos;units&apos;</highlight><highlight class="normal">:self.<ref refid="classproteus_1_1Domain_1_1D__base_1a970de618ed8e34c7695e8e84692ed3e4" kindref="member">units</ref>,</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;xc&apos;</highlight><highlight class="normal">:(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[0]+0.5*self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[0]),</highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;yc&apos;</highlight><highlight class="normal">:(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[1]+0.5*self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[1]),</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;zc&apos;</highlight><highlight class="normal">:(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a7c69d342af6f8cbcbeb47362db4888f5" kindref="member">x</ref>[2]+0.5*self.<ref refid="classproteus_1_1Domain_1_1D__base_1aa219c3b797ad4d9451344133417292ef" kindref="member">L</ref>[2]),</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;nM&apos;</highlight><highlight class="normal">:nM,</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;nFlags&apos;</highlight><highlight class="normal">:len(self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d4620d7c065e7b5bde7f0259f650099" kindref="member">boundaryFlags</ref>)}</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(fileString)</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>fN,facet<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>enumerate(self.<ref refid="classproteus_1_1Domain_1_1D__base_1af816564044e931beaa0e2c8d3f3e158e" kindref="member">facets</ref>):</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(</highlight><highlight class="stringliteral">r&quot;&quot;&quot;surface<sp/>s;<sp/>path3<sp/>p;&quot;&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vertexList<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>facet:</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(vertexList)<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(</highlight><highlight class="stringliteral">&quot;p<sp/>=<sp/>((%f,%f,%f)&quot;</highlight><highlight class="normal"><sp/>%<sp/>tuple(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>[vertexList[0]]))</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>vN<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>vertexList[1:]:</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(</highlight><highlight class="stringliteral">&quot;--(%f,%f,%f)&quot;</highlight><highlight class="normal"><sp/>%<sp/>tuple(self.<ref refid="classproteus_1_1Domain_1_1D__base_1a3c2147b42ec873c88c383b4f1c16487a" kindref="member">vertices</ref>[vN]))</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(</highlight><highlight class="stringliteral">&quot;--cycle);\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#f.write(&quot;draw(p);\n&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(</highlight><highlight class="stringliteral">&quot;s.append(surface(p,planar=true));\n&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#else:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>f.write(&quot;dot((%f,%f,%f));&quot;<sp/>%<sp/>tuple(self.vertices[vertexList[0]]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#f.write(&quot;purge(10);\n&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref><sp/>:</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>region,regionFlag<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>zip(self.<ref refid="classproteus_1_1Domain_1_1D__base_1ae8da25ef44747a9d42ba593481ff9a2a" kindref="member">regions</ref>,self.<ref refid="classproteus_1_1Domain_1_1D__base_1a2edd7b72ce8d6d107247ebfdd442d87e" kindref="member">regionFlags</ref>):</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.write(</highlight><highlight class="stringliteral">&quot;dot((%f,%f,%f),materialPens[%i]);&quot;</highlight><highlight class="normal"><sp/>%<sp/>(region[0],region[1],region[2],regionFlag))</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f.close()</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_bl<sp/>=<sp/>open(fileprefix+</highlight><highlight class="stringliteral">&apos;_boundaryLegend.asy&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;w&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fileString=</highlight><highlight class="stringliteral">&quot;&quot;&quot;import<sp/>palette;</highlight></codeline>
<codeline lineno="1316"><highlight class="stringliteral">pen[]<sp/>allPens=Wheel();</highlight></codeline>
<codeline lineno="1317"><highlight class="stringliteral">unitsize(1.0<sp/>pt);</highlight></codeline>
<codeline lineno="1318"><highlight class="stringliteral">pen[]<sp/>allPens=Wheel();</highlight></codeline>
<codeline lineno="1319"><highlight class="stringliteral">pen[]<sp/>myPens<sp/>=<sp/>new<sp/>pen[%(nFlags)i];</highlight></codeline>
<codeline lineno="1320"><highlight class="stringliteral">for(int<sp/>i=0;i&lt;<sp/>%(nFlags)i;++i)</highlight></codeline>
<codeline lineno="1321"><highlight class="stringliteral"><sp/><sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="stringliteral"><sp/><sp/><sp/>int<sp/>iPen<sp/>=<sp/>round(i*allPens.length/%(nFlags)i);</highlight></codeline>
<codeline lineno="1323"><highlight class="stringliteral"><sp/><sp/><sp/>myPens[i]<sp/>=<sp/>allPens[iPen];</highlight></codeline>
<codeline lineno="1324"><highlight class="stringliteral"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1325"><highlight class="stringliteral">dotfactor=12;</highlight></codeline>
<codeline lineno="1326"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"><sp/>%<sp/>{</highlight><highlight class="stringliteral">&apos;nFlags&apos;</highlight><highlight class="normal">:len(self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d4620d7c065e7b5bde7f0259f650099" kindref="member">boundaryFlags</ref>)}</highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_bl.write(fileString)</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>bT,bN<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>self.<ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1a7d4620d7c065e7b5bde7f0259f650099" kindref="member">boundaryFlags</ref>.items():</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>bN<sp/>!=<sp/>0:</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_bl.write(</highlight><highlight class="stringliteral">&quot;dot((12,%f),myPens[%i],L=Label(\&quot;$%s$\&quot;,black));&quot;</highlight><highlight class="normal"><sp/>%<sp/>(bN*12,bN,bT))</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f_bl.close()</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="classproteus_1_1Domain_1_1PiecewiseLinearComplexDomain_1af150c549a4ddb7f8a8daeaf76d592494" kindref="member">writeXdmf</ref>(self,fileprefix):</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">pass</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;__main__&quot;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>r1d<sp/>=<sp/>RectangularDomain(L=[1.2])</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>r1d.writeAsymptote(&quot;r1d&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>os.system(&quot;asy<sp/>-V<sp/>r1d&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>r2d<sp/>=<sp/>RectangularDomain(L=[1.5,2.0],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>units=&apos;m&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>r2d.writeAsymptote(&quot;r2d&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>os.system(&quot;asy<sp/>-V<sp/>r2d&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>r2d.writePoly(&quot;r2d&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>r3d<sp/>=<sp/>RectangularDomain(L=[1.0,2.0,3.7],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>units=&apos;m&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>r3d.writeAsymptote(&quot;r3d&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>os.system(&quot;asy<sp/>-V<sp/>r3d&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>r3d.writePoly(&quot;r3d&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>plsg<sp/>=<sp/>PlanarStraightLineGraphDomain(vertices=[[0.0,0.0],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.0,1.0],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1.0,0.0]],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>segments=[[0,1],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1,2],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[2,0]],</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>units=&apos;m&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>plsg.writeAsymptote(&quot;pslg&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>os.system(&quot;asy<sp/>-V<sp/>pslg&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>plsg.writePoly(&quot;pslg&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>plsgFromFile<sp/>=<sp/>PlanarStraightLineGraphDomain(units=&apos;m&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>plsgFromFile.readPoly(&apos;pslg&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>plsgFromFile.writeAsymptote(&apos;pslg2&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/><sp/>os.system(&quot;asy<sp/>-V<sp/>pslg2&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>plc<sp/>=<sp/><ref refid="classPiecewiseLinearComplexDomain" kindref="compound">PiecewiseLinearComplexDomain</ref>(vertices=[[0.0,0.0,0.0],</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.0,1.0,0.0],</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1.0,1.0,0.0],</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1.0,0.0,0.0],</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.0,0.0,1.0],</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.0,1.0,1.0],</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1.0,1.0,1.0],</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[1.0,0.0,1.0],</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.5,0.5,0.5],</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.25,0.25,0.25],</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[0.75,0.25,0.25]],</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>facets=[[[0,1,2,3]],</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[0,4,7,3]],</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[0,4,5,1]],</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[4,5,6,7]],</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[3,7,6,2]],</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[2,6,5,1]],</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[8]],</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[[9,10]]],</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>units=</highlight><highlight class="stringliteral">&apos;m&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/>plc.writeAsymptote(</highlight><highlight class="stringliteral">&quot;plc&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/>os.system(</highlight><highlight class="stringliteral">&quot;asy<sp/>-V<sp/>plc&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/>plc.writePoly(</highlight><highlight class="stringliteral">&quot;plc&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/>plc.writeGeo(</highlight><highlight class="stringliteral">&quot;geo&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>plcFromFile<sp/>=<sp/>PiecewiseLinearComplexDomain(units=&apos;m&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>plcFromFile.readPoly(&apos;cylinder3d&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>plcFromFile.writeAsymptote(&apos;cylinder3d&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>os.system(&quot;asy<sp/>-V<sp/>cylinder3d&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>plcFromFile<sp/>=<sp/>PiecewiseLinearComplexDomain(units=&apos;m&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>plcFromFile.readPoly(&apos;Container06.GF&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>plcFromFile.writeAsymptote(&apos;Container06.GF&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/><sp/>os.system(&quot;asy<sp/>-V<sp/>Container06.GF&quot;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceproteus_1_1Domain_1ac2703104f5a3a5a1644c2f887ebabd7b" kindref="member">getGmshPhysicalGroups</ref>(geofile):</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/>boundaryTags<sp/>=<sp/>{}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>gmsh_cmd<sp/>=<sp/>&quot;gmsh<sp/>{0:s}<sp/>-0&quot;.format(geofile)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>check_call(gmsh_cmd,<sp/>shell=True)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">with</highlight><highlight class="normal"><sp/>open(geofile,<sp/></highlight><highlight class="stringliteral">&apos;r&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>line<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>f:</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>line.startswith(</highlight><highlight class="stringliteral">&quot;Physical<sp/>&quot;</highlight><highlight class="normal">):</highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>words<sp/>=<sp/>line.lstrip().split(</highlight><highlight class="stringliteral">&apos;=&apos;</highlight><highlight class="normal">,<sp/>1)</highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tagflag<sp/>=<sp/>re.search(</highlight><highlight class="stringliteral">r&apos;\((.*?)\)&apos;</highlight><highlight class="normal">,<sp/>words[0]).group(1).split(</highlight><highlight class="stringliteral">&apos;,&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(tagflag)<sp/>==<sp/>2:</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag<sp/>=<sp/>tagflag[0]</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundaryTags[tag]<sp/>=<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>empty<sp/>BC<sp/>holder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>int(tagflag[1])</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="jf_8h_1a665602667543592b4547008b72a9631b" kindref="member">print</ref>(tagflag)</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>tag<sp/>=<sp/>int(tagflag[0])</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">except</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flag<sp/>=<sp/>tag<sp/>=<sp/>tagflag[0]</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boundaryTags[tag]<sp/>=<sp/>flag<sp/><sp/></highlight><highlight class="comment">#<sp/>add<sp/>empty<sp/>BC<sp/>holder</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boundaryTags</highlight></codeline>
    </programlisting>
    <location file="Domain.py"/>
  </compounddef>
</doxygen>
